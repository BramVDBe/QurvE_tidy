[{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"navigation-bar","dir":"Articles","previous_headings":"","what":"Navigation Bar","title":"QurvE App User Manual v.1.0","text":"QurvE navigation bar.  Data: Load experimental data. Use either one several available parsers common cultivation devices provide data custom format. Computation: Run computational workflows entire growth fluorescence datasets perform curve fitting dose-response analyses. menu becomes available successful data parsing. Validation: Confirm accuracy fits sample re-run individual fits adjusted parameters. Results: View tabular summaries computational results, including calculated growth fluorescence curve parameters results dose-response analyses. Visualization: Compare samples conditions visualize computational results using series plots. Report: Create PDF HTML report summarizing results growth fluorescence curve analysis workflow. Data Export: Save raw data, computational results, fitting options .RData object storage distribution. Data Import: Load previously exported dataset .RData format.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"QurvE App User Manual v.1.0","text":"QurvE allows loading data different formats, growth experiments fluorescence measurements. Data can loaded using custom QurvE data layout, loading raw data various measuring equipment importing previously analyzed datasets.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data-formatted-in-the-custom-qurve-layout","dir":"Articles","previous_headings":"Loading Data","what":"Loading data formatted in the custom QurvE layout","title":"QurvE App User Manual v.1.0","text":"load data using custom QurvE layout, select [Data] > [Custom] window choose file .xls/.xlsx (selecting appropriate work sheets) .csv/.tsv/.txt format (define correct decimal separator , .csv, field separator target file). custom QurvE layout includes data relative metadata necessary QurvE perform analysis. custom layout can used load growth fluorescence data. Data second fluorescence channel can used normalize primary fluorescence values addition normalization growth values. data must formatted displayed Figure @ref(fig:custom-layout): first row contains ‘Time’, ‘Blank’, sample identifiers (IDs). ID needs identical replicates samples analyzed together within dose-response analysis. ‘Time’ column must positioned first position, ‘Blank’ samples follow arbitrary order. second row contains replicate numbers identical conditions. technical replicates used addition biological replicates, indicate technical replicates identical replicate numbers. Samples identical IDs, replicate numbers, concentration values (applicable) combined average values time point. Leave row empty replicate information available. third row designated contain concentration values perform dose-response analysis, different concentrations compound used experiment. Samples included dose-response analysis identical sample identifiers (first row). Leave row empty concentration information available relevant. Starting fourth row, table must include data ‘Time’, ‘Blank’ different samples. Several experiments can combined single custom dataset. Different experiments differing time values experiment-specific blanks distinguished individual ‘Time’ column left dataset. Blank values (experiment-specific) combined average subtracted remaining values option [Subtract blank] selected. metadata second third row optional perform analysis; metadata available, leave rows empty. data can processed (options indicated order applied data): converting time values, applying calibration equation measurements. subtracting blank values sample measurement, normalizing fluorescence data second fluorescence growth dataset, available. data processing functions optional.  QurvE custom data layout.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data-from-raw-experiment-files","dir":"Articles","previous_headings":"Loading Data","what":"Loading data from raw experiment files","title":"QurvE App User Manual v.1.0","text":"QurvE supports loading directly raw data produced variety proprietary software different growth fluorescence measuring equipment, plate readers micro-bioreactors1. can done [Data] > [Parse Raw Data] window. loading file (1), selecting correct raw data format choosing one available equipments/software (2) assigning extracted read channels growth/fluorescence data (3), user provide mapping information metadata tabular format (.xls/.xlsx/.csv/.tsv/.txt file) (4). mapping file formatted shown Figure @ref(fig:mapping-layout): first column contains well numbers plate must match sample identifiers raw data file. second column contains ID (.e., organism, condition, etc.) sample. ID needs identical replicates samples analyzed together within dose-response analysis. third column contains replicate numbers identical conditions. technical replicates used addition biological replicates, indicate technical replicates replicate number. Samples identical IDs, replicate numbers, concentration values (applicable) combined average values time point. Leave row empty replicate information available. fourth column designated contain concentration values perform dose-response analysis, different concentrations compound interest used experiment. Leave row empty additional concentration information available. values ‘Blank’ samples combined averages subtracted remaining values option [Subtract blank] chosen. data can processed (options indicated order applied data): converting time values, applying calibration equation measurements. subtracting blank values sample measurement, normalizing fluorescence data second fluorescence growth dataset, available. data processing functions optional.  [Parse Raw Data] window enables loading raw data exported plate reader/bioreactor software. right panel illustrates layout additional mapping file metadata must supplemented analyze establish relationships conditions replicates.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-previously-processed-data","dir":"Articles","previous_headings":"Loading Data","what":"Loading previously processed data","title":"QurvE App User Manual v.1.0","text":"QurvE supports exporting processed data reloading analysis inspection. Previously saved growth fluorescence data .RData format can loaded Data Import window (Figure @ref(fig:import-data)).  figure illustrates [Data Import] window, enables user load previously exported QurvE data files.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"processing-and-analyzing-data-in-qurve","dir":"Articles","previous_headings":"","what":"Processing and analyzing data in QurvE","title":"QurvE App User Manual v.1.0","text":"raw data loaded, QurvE can used process data fitting curves, calculating averages standard deviations replicates, well fitting data different models obtain growth parameters doubling times, yields, etc., dose-response parameters. Moreover, software allows user intuitively create publication-grade plots.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"run-computations","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Run computations","title":"QurvE App User Manual v.1.0","text":"raw data successfully parsed, [Computation] window unlock, enabling user process either Growth Fluorescence data (Figure @ref(fig:computation)). data can processed using different curve fitting methods, can selected panel left. default fitting options Linear regression fit Non-parametric fit (smooth spline). ticking Parametric fit (available Fluorescence analysis), parametric growth models models fit data. ticking Log-transform time time values transformed Ln(1 + time). Biphasic growth selected, QurvE tries identify second growth phase performing linear regressions non-parametric fits extracts corresponding parameters (e.g., growth rate, lag time second growth phase). Dose-response (EC50) analyses can performed either performing smooth spline fit (response spline fit) response vs. concentration data extracting EC50 concentration midpoint largest smallest response value, applying 20 (parametric) dose-response models choose best model based Akaike information criterion (AIC). computed parameter (e.g., growth rates obtained via linear regression, maximum fluorescence obtained via non-parametric fits…) can chosen response parameter quantify adverse beneficial effects substance. options Log-transform concentration Log-transform response available response spline fits. instances, Ln(x + 1) applied respective values. Additional information methods (global method-specific) fitting options available clicking [?] signs.  [Computation] window enables user define parameters data processing fitting. Growth data fluorescence data must processed separately.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"visualization-and-validation-of-curve-fitting","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Visualization and validation of curve fitting","title":"QurvE App User Manual v.1.0","text":"[Validation] window enables user verify correct fitting growth/fluorescence curves (see Figure @ref(fig:linear) example).  Example fitted growth curve [Validation] window. right panel, figure visualizes performed fit. case, red dots dashed line represent linear regression model used calculate maximum growth rate lag time.  Different tabs enable user visualize fit obtained different fitting methods (Linear Fits, Nonparametric fits, etc.). left pane independent samples can selected visualization. contains options modify figure, can exported .png .pdf formats. right pane, [Re-run modified parameters] button enables user modify fitting parameters rerun analysis selected sample obtain new fit updated parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"tabular-overview-of-results","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Tabular overview of results","title":"QurvE App User Manual v.1.0","text":"[Results] window (see Figure @ref(fig:results)) enables user obtain overview fitted parameters applied method. ticking [Group average] box user can visualize average ± standard deviation parameters replicates. deselected, parameters every single sample shown. table can exported .csv format clicking [Download table] button.  [Results] window gives tabular overview computed parameters applied fit method well results dose-response analyses.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"visualization-of-results","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Visualization of results","title":"QurvE App User Manual v.1.0","text":"data processed, [Visualization] window enables user visualize data using different plot formats: Group Plots: Plot growth data time multiple conditions plot. [Data type] drop menu allows user define type data (raw data, smoothing splines, normalized fluorescence) visualized curve chart. user can easily select cursor samples/groups plot [Conditions] input. Alternatively, ticking [(De-)select samples based string], user can select exclude samples typing strings include name sample included/excluded. [Plot group averages] box used visualize either averages replicates (± standard deviations) individual samples independently. Moreover, concentration metadata provided loading data, user can (de-)select samples using additional parameters. left pane contains also various options modify figure, can exported .png .pdf formats. Parameter Plots: Plot calculated curve parameters (growth rates, lag times, yields, etc.) different samples bar plot. [Parameter] drop menu allows user select parameter plotted. Samples conditions can (de-)selected via methods described Group Plots. Plot group averages box can used visualize either averages (95% confidence intervals) groups individual samples independently. Plot Grid: Plot several curves separate panels, coloring background based chosen parameter heatmap-like fashion. [Data type] drop menu allows user define type data visualized curve chart. [Parameter] drop menu allows user select parameter panel backgrounds colored. Samples conditions can (de-)selected via methods described Group Plots. concentration metadata provided loading data, panels can arranged matrix one concentration per row ticking [Sort concentration]. Dose-Response Analysis: Plot results dose-response analyses chosen response parameter y-axis concentration values x-axis. drawn line indicates fit applied data.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"export-data-from-qurve","dir":"Articles","previous_headings":"","what":"Export data from QurvE","title":"QurvE App User Manual v.1.0","text":"QurvE enables user export data results different ways: Download Plot: figures plotted within QurvE can exported .png .pdf formats. Please note size exported plots differs figure diplayed within app dependent size QurvE window. size, aspect ratio resolution exported plot can adjusted dedicated [Width], [Height], [DPI] fields Report: [Report] window enables user export computational results figures performed fit single report file .pdf .html format. Data Export: [Data Export] window enables user export processed raw data well computation results fitting options single data container .RData format. Please note modifications figures included exported .RData file, make sure export figures separately. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"general introduction package, see vignette Quantitiative Growth Curve Evaluation Package QurvE. vignette show use QurvE analyze datasets fluorescence measurements taken time, well extract important results. Fluorescent reporter proteins widely used study mechanisms gene regulation develop biosensors allow detection chemical compounds provide insights intracellular environment. workflow analyzing fluorescence data works analogously analyzing growth data following scheme read data execute workflow. package allows users select either time growth data (e.g. simultaneous measurement cell density fluorescence intensity plate reader experiments) independent variable. Additionally, biosensors can characterized via dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"fluorescence-profiling-methods","dir":"Articles","previous_headings":"","what":"Fluorescence profiling methods","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"QurvE offers curve evaluation methods fluorescence data growth data, exception fitting growth models. calculation algorithms linear regression nonparametric fits (smoothing splines) well default parameters empirically adjusted account differences curve shapes commonly seen fluorescence data.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"dose-response-analysis-methods","dir":"Articles","previous_headings":"","what":"Dose-response analysis methods","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Dose response analysis useful method evaluating performance biosensor. Biosensors typically designed respond specific chemical compounds, strength response often depends concentration target compound. Dose-response analysis can used determine concentration target compound elicits half-maximal response biosensor (variants), half-maximal effective concentration (EC50). allows evaluation sensitivity specificity biosensor can used optimize design particular application. addition evaluating performance biosensors, dose-response analysis can also used study mechanisms gene regulation biological systems. measuring response biological system different concentrations chemical compound, researchers can gain insights genes pathways involved response, can identify potential targets drug discovery. QurvE provides two methods perform dose-response analyses fluorescence data: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply biosensor response model response vs. concentration data (Meyer et al., 2019).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"run-a-complete-fluorescence-analysis-workflow","dir":"Articles","previous_headings":"","what":"Run a complete fluorescence analysis workflow","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Load package: Next, load experimental data. example, dataset used preliminary characterization different versions SEVA (Standard European Vector Architecture) plasmid pSEVA634, described (Nikel et al., 2022). data contains growth fluorescence measurements converted custom QurvE data format located different work sheets XLSX file:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"load-data","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Load data","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"two functions read_data() parse_data() come arguments give user control loading fluorescence data. growth data, arguments data.fl (file path), csvsep.fl (separator symbol CSV file), dec.fl (decimal separator), sheet.fl (Excel file worksheet number “name”) provide details data stored. calib.fl allows defining equation transform fluorescence values. Similarly, functions accept arguments data.fl2, csvsep.fl2, dec.fl2, sheet.fl2, calib.fl2 load data second fluorescence channel. second fluorescence currently used normalize first fluorescence values, applied …ADD CITATION… Normalization fluorescence, , can controlled via fl.normtype performed either dividing growth values (fl.normtype = 'growth') fluorescence 2 fl.normtype = 'fl2'. can inspect structure input object class grodata:","code":"input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\",     package = \"QurvE\"), sheet.growth = 1, data.fl = system.file(\"lac_promoters.xlsx\",     package = \"QurvE\"), sheet.fl = 2, fl.normtype = \"growth\")  # normalize fluorescence to growth data summary(input) #>                   Length Class      Mode    #> time              1785   -none-     numeric #> growth              88   data.frame list    #> fluorescence        88   data.frame list    #> norm.fluorescence   88   data.frame list    #> expdesign            4   data.frame list"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"plot-raw-data","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Plot raw data","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Raw data plot. Conditions can selected deselected using names = c('grp1', 'grp2') argument exclude.nm = c('grp3', 'grp4') argument, respectively. Similarly, concentrations can (de-selected) via conc exclude.conc arguments. plot individual samples instead grouping replicates, add mean = FALSE. See ?plot.grodata options.","code":"plot(input, data.type = \"fl\",      exclude.conc = c(0.5, 0.1),      log.y = FALSE,      legend.position = \"bottom\",      basesize = 10,      legend.ncol = 3,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"run-workflow","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Run Workflow","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"option export.res set TRUE, tab-delimited .txt files summarizing computation results created automatically, well flFitRes object (object class flFitRes) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:flFitRes-container) shows structure generated flFitRes object. RStudio, View(flFitRes) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?fl.workflow arguments customize workflow. Internal structure flFitResobject generated growth.workflow().","code":"flFitRes <- fl.workflow(grodata = input,      fit.opt = c(\"s\", \"l\"),     x_type = \"time\",      norm_fl = TRUE,      ec50 = TRUE,      dr.parameter = \"dY.spline\",     suppress.messages = TRUE,      export.res = FALSE, # Prevent creating TXT table and RData files with results     parallelize = FALSE) # Use only one available CPU core"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"tabular-results","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Tabular results","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"flFitRes object contains two tables summarizing computational results: - flFitRes$flFit$flable lists calculated curve parameters every sample fit - flFitRes$drFit$drTable contains results dose-response analysis Additionally, dedicated functions table_group_fluorescence_linear() table_group_fluorescence_spline() allow generation grouped results tables two fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within flFitRes.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"visualize-results","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Visualize results","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Several generic plot() allow plotting results merely accessing list items within flFitRes object structure (Figure @ref(fig:flFitRes-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"inspect-individual-fits","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Inspect individual fits","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"important verify accuracy fits applied attempting interpret results (workflow run interactive = TRUE. especially important analyzing fluorescence data, curve shapes level noise can vary significantly depending specific experiment equipment used cultivation. Linear fit plots validate applied fits. details function, run ?plot.gcFitLinear. Spline fit plots validate applied fits. details function, run ?plot.gcFitLinear. Normalization fluorescence reads typically introduces additional noise. default smoothing parameter smooth.fl suitable produce good-quality representations curves via nonparametric fits, linear fits either failed produced regression windows small. order obtain linear regression results accurately represent linear-increase section curves, decrease R2 threshold manually increase size sliding window (default calculated automatically sample). new settings need applied samples, re-run entire workflow adjusted parameters: Linear fit plots validate linear regressions re-running workflow adjusted parameters.","code":"plot(flFitRes$flFit$flFittedLinear[[1]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[3]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[6]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedSpline[[1]], basesize = 15) plot(flFitRes$flFit$flFittedSpline[[3]], basesize = 15) plot(flFitRes$flFit$flFittedSpline[[6]], basesize = 15) flFitRes <- fl.workflow(grodata = input,                           fit.opt = c(\"s\", \"l\"),                           x_type = \"time\",                           norm_fl = TRUE,                           lin.R2 = 0.95, # Decreased R2 threshold                           lin.h = 20, # Manually defined sliding window size                           ec50 = TRUE,                           dr.parameter = \"dY.spline\",                           suppress.messages = TRUE,                           export.res = FALSE,                           parallelize = FALSE) plot(flFitRes$flFit$flFittedLinear[[1]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[3]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[6]], cex.lab = 1.2, cex.axis = 1.2)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"grouped-spline-fits","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Grouped spline fits","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Applying plot() flFitRes object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.flFitRes() data.type = 'spline'. Combined plot spline fits performed. addition options available data.type = 'raw', arguments can defined control appearance secondary panel showing slope time. See ?plot.flFitRes options. arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.: Plot grid spline fits performed one concentration per row. See ?plot.grid available options.","code":"plot(flFitRes,      data.type = \"spline\",      deriv = TRUE,      legend.position = \"bottom\",      legend.ncol = 3,      n.ybreaks = 10,      basesize=10,      lwd = 0.7) plot.grid(flFitRes,           param = \"max_slope.spline\",           pal = \"Mint\",           log.y = FALSE,           basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"compare-growth-parameters","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Compare growth parameters","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"function plot.parameter() works also flFitRes objects compare computed curve parameters: Parameter plots. mean = TRUE, results replicates combined shown mean ± 95% confidence interval. functions combining different growth curves, arguments name, exclude.nm, conc exclude.conc allow (de)selection specific samples conditions. Since applied growth models log-transformed data, calling ‘dY.orig.model’ ‘.orig.model’ instead ‘dY.model’ ‘.model’ provides respective values original scale. linear spline fits, done automatically. details function, run ?plot.parameter.","code":"# Parameters obtained from linear regression plot.parameter(flFitRes, param = \"max_slope.linfit\", basesize = 10,     legend.position = \"bottom\") plot.parameter(flFitRes, param = \"dY.linfit\", basesize = 10,     legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(flFitRes, param = \"max_slope.spline\", basesize = 10,     legend.position = \"bottom\") plot.parameter(flFitRes, param = \"dY.spline\", basesize = 10,     legend.position = \"bottom\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"dose-response-analysis","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Dose-response analysis","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"results dose-response analysis can visualized calling plot() drFit object stored within flFitRes. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively. Dose response analysis - model fits. details function, run ?plot.drFit.","code":"plot(flFitRes$drFit, cex.point = 1, cex.lab = 1.1, cex.axis = 1)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"virtually disciplines biology dealing living organisms, classical microbiology applied biotechnology, routine characterize growth species study. QurvE provides suite analysis tools make growth profiling quick, efficient, reproducible. addition, allows characterization fluorescence data , e.g., biosensor characterization plate reader experiments (discussed vignette Quantitiative Fluorescence Curve Evaluation Package QurvE). computational steps obtain -depth characterization combined user-friendly workflow functions range plotting functions allow visualization fits comparison organism performances. physiological parameter calculated (e.g., growth rate µ, doubling time tD, lag time \\(\\lambda\\), growth measurement increase \\(\\Delta\\)Y, equivalent fluorescence parameters) can used perform dose-response analysis determine half-maximal effective concentration (EC50). package build foundation two R packages Kahm et al. (2010) Petzoldt (2022). QurvE designed usable minimal prior knowledge R programming language programming general. need familiar idea running commands console writing basic scripts. R beginners, great starting point, good resources suggest using RStudio application. provides environment writing running R code. consideration R novices, QurvE establishes framework complete, detailed growth curve analysis can performed two simple steps: Read data custom format parse data plate reader experiment. Run workflow, including fitting growth curves, dose-response analysis, rendering report summarizes results. computational results workflow stored data container (list) can visualized passing generic function plot(list_object). QurvE extends user’s control fits defining thresholds quality criteria, allows direct parsing data plate reader result files, calculates parameters additional growth phase (bi-phasic growth).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"release-version","dir":"Articles","previous_headings":"Installation","what":"Release version","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"recent release version can found CRAN:","code":"install.packages(\"QurvE\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"development-version","dir":"Articles","previous_headings":"Installation","what":"Development version","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Install current version package devtools:","code":"install.packages(\"devtools\") library(devtools) install_github(\"NicWir/QurvE\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"shiny-app","dir":"Articles","previous_headings":"","what":"Shiny app","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE features graphical user interface (GUI) developed Shiny app, designed user-friendly intuitive. can start app running: See QurvE User Manual details use front-end application.","code":"QurvE::run_app()"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"growth-profiling-methods","dir":"Articles","previous_headings":"","what":"Growth profiling methods","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Three methods available characterize growth curves: Fit parametric growth models (log-transformed) growth data Determine maximum growth rates (µmax) log-linear part growth curve using heuristic approach proposed “growth rates made easy”-method Hall et al. (2014). , QurvE uses code package Petzoldt (2022), adds user-defined thresholds () R2 values linear fits, (ii) relative standard deviations (RSD) estimates slopes, (iii) minimum fraction total growth value increase (\\(\\Delta\\)Y) regression window cover considered analysis. thresholds ensure robust reproducible identification linear range best describes growth curve. Additionally, parameters secondary growth phase can extracted bi-linear growth curves.1 algorithm works follows: Fit linear regressions [Theil-Sen estimator (Sen, 1968; Theil, 1992)] subsets h consecutive, log-transformed data points (sliding window size h). , example, h=5, fit linear regression points 1 \\(\\dots\\) 5, 2 \\(\\dots\\) 6, 3 \\(\\dots\\) 7 forth. Find subset highest slope \\(\\mu_{max}\\). R2 RSD values regression meet defined thresholds data points within regression window account least defined fraction total growth measurement increase? , evaluate regression second highest slope, forth. Include also data points adjacent subsets slope least \\(defined \\space quota \\times \\mu_{max}\\), e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step iii. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following \\(\\mu_{max}\\) repeat heuristic linear method later time values. Find local maximum \\(\\mu_{max}\\) repeat heuristic linear method earlier time values. Choose greater two independently determined slopes \\(\\mu_{max}2\\). Perform smooth spline fit (log-transformed) growth data extract µmax maximum value first derivative1. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove ‘peak’ containing highest value first derivative (.e., \\(\\mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(\\mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(\\mu_{max}\\). Choose greater two independently determined slopes \\(\\mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"dose-response-analysis-methods","dir":"Articles","previous_headings":"","what":"Dose-response analysis methods","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"purpose dose-response analysis define sensitivity given organism effects compound potency substance, respectively. effects can either beneficial (e.g., nutrient compound) detrimental (e.g., antibiotic). sensitivity reflected half-maximal effective concentration (EC50), .e., concentration (dose) half-maximal response (e.g., \\(\\mu_{max}\\) \\(\\Delta\\)Y) observed. QurvE provides two methods determine EC50: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply 20 (parametric) dose-response models response vs. concentration data choose best model based Akaike information criterion (AIC). done using excellent package drc (Ritz et al., 2016).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"data-formats","dir":"Articles","previous_headings":"","what":"Data formats","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE accepts files formats .xls, .xlsx, .csv, .tsv, .txt (tab separated). data files structured shown Figure @ref(fig:data-layout). Alternatively, data parsers available allow direct import raw data different culture instruments. list currently supported devices, please run ?parse_data. Please note: recommend always converting .xls .xlsx files alternate format first speed parsing process. Reading Excel files may require orders magnitude longer processing time.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"custom-format","dir":"Articles","previous_headings":"Data formats","what":"Custom format","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"ensure compatibility type measurement data type (e.g., optical density, cell count, measured dimensions), QurvE uses custom data layout. first column contains time values ‘Time’ top cell, cells #2 #3 ignored. remaining columns contain measurement values following sample identifiers top three rows: Sample name; usually combination organism condition, ‘blank’. Replicate number; replicates identified identical names concentration values. one type replicate (biological technical) performed, enter numerical values . biological technical replicates biological replicates performed, technical replicates replicate number. technical replicates combined average value. (optional) Concentration values added compound; information used perform dose-response analysis. Several experiments (e.g., runs different plate readers) can combined single file analyzed simultaneously. Therefore, different experiments marked presence separate time columns. Different lengths values time columns permitted.  read data custom format, run: data.growth argument takes path file name R dataframe object containing experimental data custom format. csvsep specifies separator symbol (required .csv files; default: ';'). dec decimal separator (required .csv, .tsv, .txt files; default: '.'). Excel file format used, sheet.growth specifies number name (quotes) sheet containing data. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calib.growth argument, formula can provided form ‘y = function(x)’ (e.g., calib.growth = 'y = x * 2 + 0.5') transform growth measurement values.","code":"grodata <- read_data(data.growth = 'path_to_data_file',                    csvsep = ';', # or ','                    dec = '.', # or ','                    sheet.growth = 1, # number (or \"name\") of the EXCEL file sheet containing data                    subtract.blank = TRUE,                    calib.growth = NULL)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"data-parser","dir":"Articles","previous_headings":"Data formats","what":"Data parser","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"data generated culture devices (e.g., plate readers) different manufacturers come different formats. data used directly, must first “parsed” plate reader QurvE standard format. scenario, sample information must provided separate table maps samples respective identifiers.mapping table must following layout (Figure @ref(fig:mapping-layout)): Data parser mapping layout parse data, run: data.file argument takes path file containing experimental data exported culture device, map.file path file mapping information. software, can specify device (software) used generate data. csvsep.data csvsep.map specify separator symbol data mapping file, respectively (required .csv files; default: ';'). dec.data dec.map decimal separator used data mapping file, respectively (required .csv, .tsv, .txt files; default: '.'). Excel file format used one data mapping file, sheet.data /sheet.map specify number name (quotes) sheet containing data mapping information, respectively. Excel file contains data mapping information different worksheets, file path needs specified data.fileand map.file. subtract.blank = TRUE, samples name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. argument convert.time accepts function ‘y = function(x)’ transform time values (e.g., convert.time = 'y = x/3600' convert seconds hours). one read type identified provided data file, user prompted specify measurements belong growth, fluorescence, fluorescence2, respectively.","code":"grodata <- parse_data(data.file = 'path_to_data_file',                     map.file = 'path_to_mapping_file',                     software = 'used_software_or_device',                     csvsep.data = ';', # or ','                     dec.data = '.', # or ','                     csvsep.map = ';', # or ','                     dec.map = '.', # or ','                     sheet.data = 1, # number (or \"name\") of the EXCEL file sheet containing data                     sheet.map = 1, # number (or \"name\") of the EXCEL file sheet containing                                    # mapping information                     subtract.blank = TRUE,                     calib.growth = NULL,                     convert.time = NULL)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"run-a-complete-growth-analysis-workflow","dir":"Articles","previous_headings":"","what":"Run a complete growth analysis workflow","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE reduces computational steps required create complete growth profiling two steps, read data run workflow. loading package: load experimental data publication Wirth & Nikel (2021) Pseudomonas putida KT2440 engineered strain tested sensitivity towards product 2-fluoromuconic acid:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"load-data","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Load data","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"created object grodata can inspected View(grodata). list class grodata containing: time matrix 66 rows, corresponding one sample dataset, 161 columns, .e., time values sample. growth data frame 66 rows 161+3 columns. three additional columns contain sample identifiers condition, replicate, concentration. fluorescence1 (: NA) fluorescence2 (: NA) norm.fluorescence1 (: NA) norm.fluorescence2 (: NA) expdesign, data frame containing label, condition, replicate, concentration sample: can plot raw data. Applying generic plot() function grodata objects calls function plot.grodata().: Raw data plot. Conditions can selected deselected using names = c('grp1', 'grp2') argument exclude.nm = c('grp3', 'grp4') argument, respectively. Similarly, concentrations can (de-selected) via conc exclude.conc arguments. plot individual samples instead grouping replicates, add mean = FALSE. See ?plot.grodata options.","code":"grodata <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",     package = \"QurvE\"), csvsep = \";\") head(grodata$expdesign) #>             label condition replicate concentration #> 1 KT2440 | 1 | 90    KT2440         1            90 #> 2 KT2440 | 1 | 70    KT2440         1            70 #> 3 KT2440 | 1 | 50    KT2440         1            50 #> 4 KT2440 | 1 | 25    KT2440         1            25 #> 5 KT2440 | 1 | 20    KT2440         1            20 #> 6 KT2440 | 1 | 15    KT2440         1            15 plot(grodata, data.type = \"growth\", log.y = FALSE,      x.lim = c(NA, 32), legend.position = \"right\",      exclude.conc = c(50, 70, 90),      basesize = 10, legend.ncol = 1, lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"run-workflow","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Run Workflow","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"perform complete growth profiling samples input dataset, call growth.workflow() function grodata object. supress.messages = TRUE, avoid printing information every sample’s fit sample console. default, selected response parameter perform dose-response analysis ‘mu.linfit’. choose different parameter, provide argument dr.parameter = 'choice'. list appropriate parameters provided within function documentation (?growth.workflow). option export.res set TRUE, tab-delimited .txt files summarizing computation results created, well grofit object (object class grofit) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:grofit-container) shows structure generated grofit object. RStudio, View(grofit) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?growth.workflow arguments customize workflow. Internal structure grofitobject generated growth.workflow().","code":"grofit <- growth.workflow(grodata = grodata, fit.opt = \"a\", ec50 = TRUE,     suppress.messages = TRUE,      export.res = FALSE, # Prevent creating TXT table and RData files with results     parallelize = FALSE) # Use only one available CPU core"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"tabular-results","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Tabular results","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"grofit object contains two tables summarizing computational results: - grofit$gcFit$gcTable lists calculated physiological parameters every sample fit - grofit$drFit$drTable contains results dose-response analysis TestId AddId concentration reliability_tag used.model log.x log.y.lin log.y.spline 1 KT2440 1 90 TRUE  FALSE TRUE TRUE 2 KT2440 1 70 TRUE  FALSE TRUE TRUE 3 KT2440 1 50 TRUE  FALSE TRUE TRUE log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit dY.linfit 1 TRUE 0 0  0 2 TRUE 0 0  0 3 TRUE 0 0  0 Additionally, dedicated functions table_group_growth_linear(), table_group_growth_model(), table_group_growth_spline() allow generation grouped results tables three fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within grofit.","code":"# show the first three rows and first 14 columns of gcTable gcTable <- grofit$gcFit$gcTable gcTable[1:3, 1:14] # Show drTable. The function as.data.frame() ensures that it is shown in table format. drTable <- as.data.frame(grofit$drFit$drTable)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"visualize-results","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Visualize results","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Several generic plot() methods written allow easy plotting results merely accessing list items within grofit object structure (Figure @ref(fig:grofit-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"grouped-spline-fits","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Grouped spline fits","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Applying plot() grofit object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.grofit() data.type = 'spline' thus, options available described Figure @ref(fig:raw-data-plot). Combined plot spline fits performed. addition options available data.type = 'raw', arguments can defined control appearance secondary panel showing slope time. See ?plot.grofit options.","code":"plot(grofit,      data.type = \"spline\",      log.y = TRUE,      deriv = TRUE,      conc = c(0,5,10,15,20),      legend.position = \"right\",      legend.ncol = 1,      x.lim = c(NA, 32),      y.lim = c(0.01,NA),      n.ybreaks = 10,      basesize=10,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"compare-growth-parameters","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Compare growth parameters","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"convenient way compare performance different organisms different conditions plot calculated growth parameters means function plot.parameter(). Parameter plots. mean = TRUE, results replicates combined shown mean ± 95% confidence interval. functions combining different growth curves, arguments name, exclude.nm, conc exclude.conc allow (de)selection specific samples conditions. Since applied growth models log-transformed data, calling ‘dY.orig.model’ ‘.orig.model’ instead ‘dY.model’ ‘.model’ provides respective values original scale. linear spline fits, done automatically. details function, run ?plot.parameter. parameter plot ´mu.linfit´ (growth rates determined linear regression), can see outlier strain KT2440 concentration 0. can plot individual fits condition find due fit quality: Linear fit plots identify sample outliers. details function, run ?plot.gcFitLinear. Apparently, algorithm find maximum slope growth curve standard threshold lin.R2 = 0.97 find appropriate fit within first stage growth due insufficient linearity. can manually re-run fit sample adjusted parameters. Thereby, lower R2 threshold increase size sliding window cover larger fraction growth curve. , update respective entries gcTable object summarizes fitting results (plot.parameter() accesses extract relevant data). generic function summary(), applied fit object single sample within grofit, provides required parameters update table. Lastly, also re-run dose-response analysis since ‘mu.linfit’ used response parameter (default), including erroneous value. Note: process manually updating grofitelements adjusted fits can avoided re-running growth.workflow adjusted global parameters running workflow interactive mode (interactive = TRUE). interactive mode, individual fit printed user can decide re-run single fit adjusted parameters. can validate quality updated fit: Updated linear fit outlier sample ‘KT2440 | 2 | 0’. looks better! Parameter plot updated fit.","code":"# Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.linfit\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(grofit, param = \"mu.spline\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.spline\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from model fits plot.parameter(grofit, param = \"mu.model\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.orig.model\", basesize = 10,     legend.position = \"bottom\") plot(grofit$gcFit$gcFittedLinear$`KT2440 | 1 | 0`, cex.lab = 1.2,     cex.axis = 1.2) plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2,     cex.axis = 1.2) # Replace the existing linear fit entry for sample `KT2440 | 2 | 0` # with a new fit grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0` <-   growth.gcFitLinear(time = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.time,                      data = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.data,                      control = growth.control(lin.R2 = 0.95, lin.h = 10))  # extract row index of sample `KT2440 | 2 | 0` ndx.row <- grep(\"KT2440 \\\\| 2 \\\\| 0\", grofit$expdesign$label)  # get column indices of linear fit parameters (\".linfit\") ndx.col <- grep(\"\\\\.linfit\", colnames(grofit$gcFit$gcTable) )  # Replace previous growth parameters stored in gcTable grofit$gcFit$gcTable[ndx.row, ndx.col] <-   summary(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`)  # Replace existing dose-response analysis with new fit grofit$drFit <- growth.drFit(   gcTable = grofit$gcFit$gcTable,   control = grofit$control) # we can copy the control object from the original workflow. plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2) # Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"plot-grids","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Plot grids","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.: Plot grid spline fits performed . See ?plot.grid available options.","code":"plot.grid(grofit,            param = \"mu.linfit\",            pal = \"Mint\",            log.y = FALSE,           sort_by_conc = FALSE,           basesize = 9)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"dose-response-analysis","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Dose-response analysis","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"results dose-response analysis can visualized calling plot() drFit object stored within grofit. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice dr.method workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively. Dose response analysis - model fits. details function, run ?plot.drFit.","code":"plot(grofit$drFit, cex.point = 1, basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"growth experiments performed larger scale manual growth measurements, technical deviations can result outliers. outliers can lead distortion curve fits, especially fewer data points available usual plate reading experiments. instance, bootstrapping can provide realistic estimation growth parameters. Bootstrapping statistical procedure resamples single dataset create many simulated samples. done randomly drawing data points dataset replacement original number data points reached. analysis (: growth fitting) performed individually bootstrapped replicate. variation resulting estimated parameters reasonable approximation variance parameters. include bootstrapping QurvE workflow, define argument nboot.gc. Similarly, can include bootstrapping dose-response analysis done dr.method = 'spline' defining argument nboot.dr. plot results growth fit bootstrapping, call plot() gcBootSpline object: Nonparametric growth fit bootstrapping. details function, run ?plot.gcBootSpline. applying plot() drBootSpline object, can plot dose-response bootstrap results: Dose-response analysis bootstrapping. details function, run ?plot.drBootSpline.","code":"grofit_bt <- growth.workflow(grodata = grodata,                              fit.opt = \"s\", # perform only nonparametric growth fitting                              nboot.gc = 50,                              ec50 = T,                              dr.method = \"spline\",                              dr.parameter = \"mu.spline\",                              nboot.dr = 50,                              smooth.dr = 0.25,                              suppress.messages = TRUE,                              export.res = F,                              parallelize = FALSE) plot(grofit_bt$gcFit$gcBootSpline[[7]], # Double braces serve as an alternative to                                         # access list items and allow their access by number      combine = TRUE, # combine both growth curves and parameter plots in the same window      lwd = 0.7) plot(grofit_bt$drFit$drBootSpline[[1]],      combine = TRUE, # combine both dose-response curves and parameter plots in the same window      lwd = 0.7)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas T. Wirth. Author, maintainer, copyright holder. Jonathan Funk. Author.            Co-developer shiny app. Matthias Kahm. Contributor.            Author 'grofit' package, whose general data structure adopted QurvE. Maik Kschischo. Contributor.            Author 'grofit' package, whose general data structure adopted QurvE. Thomas Petzoldt. Contributor.            Creator package 'growthrates', whose function calculating linear regressions served template QurvE. Andrew Stein. Contributor.            Creator 'xgxr' package QurvE adopted code plot axis ticks log10 scale. Michael W. Kearney. Contributor.            Creator 'tfse' package QurvE adopted match_arg function. Santiago . Hurtado. Contributor.            Creator 'RobustLinearReg' package QurvE adopted Theil Sehn Regression method. Mark Heckmann. Contributor.            Creator 'zipFastener' function; source: https://ryouready.wordpress.com/2009/03/27/r-zip-fastener--two-data-frames-combining-rows--columns--two-dataframes---alternating-manner/ Nicholas Hamilton. Contributor.            Creator 'colFmt' function. Evan Friedland. Contributor.            Creator 'inflect' function. Heather Turner. Contributor.            Creator 'base_breaks' function. Georgi N. Boshnakov. Contributor.            Creator 'gbRd' package functions used display function help pages within shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wirth N, Funk J (2023). QurvE: Robust User-Friendly Analysis Growth Fluorescence Curves. https://github.com/NicWir/QurvE, https://nicwir.github.io/QurvE/.","code":"@Manual{,   title = {QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves},   author = {Nicolas T. Wirth and Jonathan Funk},   year = {2023},   note = {https://github.com/NicWir/QurvE, https://nicwir.github.io/QurvE/}, }"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"introduction","dir":"","previous_headings":"","what":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"virtually disciplines biology dealing living organisms, classical microbiology applied biotechnology, routine characterize growth species study. QurvE provides suite analysis tools make growth profiling quick, efficient, reproducible. addition, allows characterization fluorescence data , e.g., biosensor characterization plate reader experiments (discussed vignette Quantitiative Fluorescence Curve Evaluation Package QurvE). computational steps obtain -depth characterization combined user-friendly workflow functions range plotting functions allow visualization fits comparison organism performances. physiological parameter calculated (e.g., growth rate µ, doubling time tD, lag time λ, growth measurement increase ΔY, equivalent fluorescence parameters) can used perform dose-response analysis determine half-maximal effective concentration (EC50). package build foundation two R packages Kahm et al. (2010) Petzoldt (2022). QurvE designed usable minimal prior knowledge R programming language programming general. need familiar idea running commands console writing basic scripts. R beginners, great starting point, good resources suggest using RStudio application. provides environment writing running R code. consideration R novices, QurvE establishes framework complete, detailed growth curve analysis can performed two simple steps: Read data custom format parse data plate reader experiment. Run workflow, including fitting growth curves, dose-response analysis, rendering report summarizes results. computational results workflow stored data container (list) can visualized passing generic function plot(list_object). QurvE extends user’s control fits defining thresholds quality criteria, allows direct parsing data plate reader result files, calculates parameters additional growth phase (bi-phasic growth).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/index.html","id":"release-version","dir":"","previous_headings":"","what":"Release version","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"recent release version can found CRAN:","code":"install.packages(\"QurvE\")"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Install current version package devtools:","code":"install.packages(\"devtools\") library(devtools) install_github(\"NicWir/QurvE\")"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE features graphical user interface (GUI) developed Shiny app, designed user-friendly intuitive. can start app running: See QurvE User Manual details use front-end application.","code":"QurvE::run_app()"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"growth-profiling-methods","dir":"","previous_headings":"","what":"Growth profiling methods","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Three methods available characterize growth curves: Fit parametric growth models (log-transformed) growth data Determine maximum growth rates (µmax) log-linear part growth curve using heuristic approach proposed “growth rates made easy”-method Hall et al. (2014). , QurvE uses code package Petzoldt (2022), adds user-defined thresholds () R2 values linear fits, (ii) relative standard deviations (RSD) estimates slopes, (iii) minimum fraction total growth value increase (ΔY) regression window cover considered analysis. thresholds ensure robust reproducible identification linear range best describes growth curve. Additionally, parameters secondary growth phase can extracted bi-linear growth curves.1 algorithm works follows: Fit linear regressions [Theil-Sen estimator (Sen, 1968; Theil, 1992)] subsets h consecutive, log-transformed data points (sliding window size h). , example, h=5, fit linear regression points 1 … 5, 2 … 6, 3 … 7 forth. Find subset highest slope μmax. R2 RSD values regression meet defined thresholds data points within regression window account least defined fraction total growth measurement increase? , evaluate regression second highest slope, forth. Include also data points adjacent subsets slope least $defined \\space quota \\times \\mu_{max}$, e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step iii. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following μmax repeat heuristic linear method later time values. Find local maximum μmax repeat heuristic linear method earlier time values. Choose greater two independently determined slopes μmax2. Perform smooth spline fit (log-transformed) growth data extract µmax maximum value first derivative1. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove ‘peak’ containing highest value first derivative (.e., μmax) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum μmax. Repeat smooth spline fit identification maximum slope earlier time values local minimum μmax. Choose greater two independently determined slopes μmax2.","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"dose-response-analysis-methods","dir":"","previous_headings":"","what":"Dose-response analysis methods","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"purpose dose-response analysis define sensitivity given organism effects compound potency substance, respectively. effects can either beneficial (e.g., nutrient compound) detrimental (e.g., antibiotic). sensitivity reflected half-maximal effective concentration (EC50), .e., concentration (dose) half-maximal response (e.g., μmax ΔY) observed. QurvE provides two methods determine EC50: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply 20 (parametric) dose-response models response vs. concentration data choose best model based Akaike information criterion (AIC). done using excellent package drc (Ritz et al., 2016).","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"data-formats","dir":"","previous_headings":"","what":"Data formats","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE accepts files formats .xls, .xlsx, .csv, .tsv, .txt (tab separated). data files structured shown Figure @ref(fig:data-layout). Alternatively, data parsers available allow direct import raw data different culture instruments. list currently supported devices, please run ?parse_data. Please note: recommend always converting .xls .xlsx files alternate format first speed parsing process. Reading Excel files may require orders magnitude longer processing time.","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"custom-format","dir":"","previous_headings":"","what":"Custom format","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"ensure compatibility type measurement data type (e.g., optical density, cell count, measured dimensions), QurvE uses custom data layout. first column contains time values ‘Time’ top cell, cells #2 #3 ignored. remaining columns contain measurement values following sample identifiers top three rows: Sample name; usually combination organism condition, ‘blank’. Replicate number; replicates identified identical names concentration values. one type replicate (biological technical) performed, enter numerical values . biological technical replicates biological replicates performed, technical replicates replicate number. technical replicates combined average value. (optional) Concentration values added compound; information used perform dose-response analysis. Several experiments (e.g., runs different plate readers) can combined single file analyzed simultaneously. Therefore, different experiments marked presence separate time columns. Different lengths values time columns permitted.  read data custom format, run: data.growth argument takes path file name R dataframe object containing experimental data custom format. csvsep specifies separator symbol (required .csv files; default: ';'). dec decimal separator (required .csv, .tsv, .txt files; default: '.'). Excel file format used, sheet.growth specifies number name (quotes) sheet containing data. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calib.growth argument, formula can provided form ‘y = function(x)’ (e.g., calib.growth = 'y = x * 2 + 0.5') transform growth measurement values.","code":"grodata <- read_data(data.growth = 'path_to_data_file',                    csvsep = ';', # or ','                    dec = '.', # or ','                    sheet.growth = 1, # number (or \"name\") of the EXCEL file sheet containing data                    subtract.blank = TRUE,                    calib.growth = NULL)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"data-parser","dir":"","previous_headings":"","what":"Data parser","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"data generated culture devices (e.g., plate readers) different manufacturers come different formats. data used directly, must first “parsed” plate reader QurvE standard format. scenario, sample information must provided separate table maps samples respective identifiers.mapping table must following layout (Figure @ref(fig:mapping-layout)):  parse data, run: data.file argument takes path file containing experimental data exported culture device, map.file path file mapping information. software, can specify device (software) used generate data. csvsep.data csvsep.map specify separator symbol data mapping file, respectively (required .csv files; default: ';'). dec.data dec.map decimal separator used data mapping file, respectively (required .csv, .tsv, .txt files; default: '.'). Excel file format used one data mapping file, sheet.data /sheet.map specify number name (quotes) sheet containing data mapping information, respectively. Excel file contains data mapping information different worksheets, file path needs specified data.fileand map.file. subtract.blank = TRUE, samples name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. argument convert.time accepts function ‘y = function(x)’ transform time values (e.g., convert.time = 'y = x/3600' convert seconds hours). one read type identified provided data file, user prompted specify measurements belong growth, fluorescence, fluorescence2, respectively.","code":"grodata <- parse_data(data.file = 'path_to_data_file',                     map.file = 'path_to_mapping_file',                     software = 'used_software_or_device',                     csvsep.data = ';', # or ','                     dec.data = '.', # or ','                     csvsep.map = ';', # or ','                     dec.map = '.', # or ','                     sheet.data = 1, # number (or \"name\") of the EXCEL file sheet containing data                     sheet.map = 1, # number (or \"name\") of the EXCEL file sheet containing                                    # mapping information                     subtract.blank = TRUE,                     calib.growth = NULL,                     convert.time = NULL)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"run-a-complete-growth-analysis-workflow","dir":"","previous_headings":"","what":"Run a complete growth analysis workflow","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE reduces computational steps required create complete growth profiling two steps, read data run workflow. loading package: load experimental data publication Wirth & Nikel (2021) Pseudomonas putida KT2440 engineered strain tested sensitivity towards product 2-fluoromuconic acid:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"load-data","dir":"","previous_headings":"","what":"Load data","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"created object grodata can inspected View(grodata). list class grodata containing: time matrix 66 rows, corresponding one sample dataset, 161 columns, .e., time values sample. growth data frame 66 rows 161+3 columns. three additional columns contain sample identifiers condition, replicate, concentration. fluorescence1 (: NA) fluorescence2 (: NA) norm.fluorescence1 (: NA) norm.fluorescence2 (: NA) expdesign, data frame containing label, condition, replicate, concentration sample: can plot raw data. Applying generic plot() function grodata objects calls function plot.grodata().:","code":"grodata <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",     package = \"QurvE\"), csvsep = \";\") head(grodata$expdesign) #>             label condition replicate concentration #> 1 KT2440 | 1 | 90    KT2440         1            90 #> 2 KT2440 | 1 | 70    KT2440         1            70 #> 3 KT2440 | 1 | 50    KT2440         1            50 #> 4 KT2440 | 1 | 25    KT2440         1            25 #> 5 KT2440 | 1 | 20    KT2440         1            20 #> 6 KT2440 | 1 | 15    KT2440         1            15 plot(grodata, data.type = \"growth\", log.y = FALSE,      x.lim = c(NA, 32), legend.position = \"right\",      exclude.conc = c(50, 70, 90),      basesize = 10, legend.ncol = 1, lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"run-workflow","dir":"","previous_headings":"","what":"Run Workflow","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"perform complete growth profiling samples input dataset, call growth.workflow() function grodata object. supress.messages = TRUE, avoid printing information every sample’s fit sample console. default, selected response parameter perform dose-response analysis ‘mu.linfit’. choose different parameter, provide argument dr.parameter = 'choice'. list appropriate parameters provided within function documentation (?growth.workflow). option export.res set TRUE, tab-delimited .txt files summarizing computation results created, well grofit object (object class grofit) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:grofit-container) shows structure generated grofit object. RStudio, View(grofit) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?growth.workflow arguments customize workflow.","code":"grofit <- growth.workflow(grodata = grodata, fit.opt = \"a\", ec50 = TRUE,     suppress.messages = TRUE, export.res = FALSE)  # Prevent creating TXT table and RData files with results"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"tabular-results","dir":"","previous_headings":"","what":"Tabular results","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"grofit object contains two tables summarizing computational results: - grofit$gcFit$gcTable lists calculated physiological parameters every sample fit - grofit$drFit$drTable contains results dose-response analysis TestId AddId concentration reliability_tag used.model log.x log.y.lin log.y.spline 1 KT2440 1 90 TRUE  FALSE TRUE TRUE 2 KT2440 1 70 TRUE  FALSE TRUE TRUE 3 KT2440 1 50 TRUE  FALSE TRUE TRUE log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit dY.linfit 1 TRUE 0 0  0 2 TRUE 0 0  0 3 TRUE 0 0  0 Additionally, dedicated functions table_group_growth_linear(), table_group_growth_model(), table_group_growth_spline() allow generation grouped results tables three fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within grofit.","code":"# show the first three rows and first 14 columns of gcTable gcTable <- grofit$gcFit$gcTable gcTable[1:3, 1:14] # Show drTable. The function as.data.frame() ensures that it is shown in table format. drTable <- as.data.frame(grofit$drFit$drTable)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"visualize-results","dir":"","previous_headings":"","what":"Visualize results","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Several generic plot() methods written allow easy plotting results merely accessing list items within grofit object structure (Figure @ref(fig:grofit-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"grouped-spline-fits","dir":"","previous_headings":"Visualize results","what":"Grouped spline fits","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Applying plot() grofit object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.grofit() data.type = 'spline' thus, options available described Figure @ref(fig:raw-data-plot).","code":"plot(grofit,      data.type = \"spline\",      log.y = TRUE,      deriv = TRUE,      conc = c(0,5,10,15,20),      legend.position = \"right\",      legend.ncol = 1,      x.lim = c(NA, 32),      y.lim = c(0.01,NA),      n.ybreaks = 10,      basesize=10,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"compare-growth-parameters","dir":"","previous_headings":"Visualize results","what":"Compare growth parameters","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"convenient way compare performance different organisms different conditions plot calculated growth parameters means function plot.parameter(). Parameter plots. mean = TRUE, results replicates combined shown mean ± 95% confidence interval. functions combining different growth curves, arguments name, exclude.nm, conc exclude.conc allow (de)selection specific samples conditions. Since applied growth models log-transformed data, calling ‘dY.orig.model’ ‘.orig.model’ instead ‘dY.model’ ‘.model’ provides respective values original scale. linear spline fits, done automatically. details function, run ?plot.parameter. parameter plot ´mu.linfit´ (growth rates determined linear regression), can see outlier strain KT2440 concentration 0. can plot individual fits condition find due fit quality:  Apparently, algorithm find maximum slope growth curve standard threshold lin.R2 = 0.97 find appropriate fit within first stage growth due insufficient linearity. can manually re-run fit sample adjusted parameters. Thereby, lower R2 threshold increase size sliding window cover larger fraction growth curve. , update respective entries gcTable object summarizes fitting results (plot.parameter() accesses extract relevant data). generic function summary(), applied fit object single sample within grofit, provides required parameters update table. Lastly, also re-run dose-response analysis since ‘mu.linfit’ used response parameter (default), including erroneous value. Note: process manually updating grofitelements adjusted fits can avoided re-running growth.workflow adjusted global parameters running workflow interactive mode (interactive = TRUE). interactive mode, individual fit printed user can decide re-run single fit adjusted parameters. can validate quality updated fit:  looks better!","code":"# Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.linfit\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(grofit, param = \"mu.spline\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.spline\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from model fits plot.parameter(grofit, param = \"mu.model\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.orig.model\", basesize = 10,     legend.position = \"bottom\") plot(grofit$gcFit$gcFittedLinear$`KT2440 | 1 | 0`, cex.lab = 1.2,     cex.axis = 1.2) plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2,     cex.axis = 1.2) # Replace the existing linear fit entry for sample `KT2440 | 2 | 0` # with a new fit grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0` <-   growth.gcFitLinear(time = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.time,                      data = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.data,                      control = growth.control(lin.R2 = 0.95, lin.h = 10))  # extract row index of sample `KT2440 | 2 | 0` ndx.row <- grep(\"KT2440 \\\\| 2 \\\\| 0\", grofit$expdesign$label)  # get column indices of linear fit parameters (\".linfit\") ndx.col <- grep(\"\\\\.linfit\", colnames(grofit$gcFit$gcTable) )  # Replace previous growth parameters stored in gcTable grofit$gcFit$gcTable[ndx.row, ndx.col] <-   summary(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`)  # Replace existing dose-response analysis with new fit grofit$drFit <- growth.drFit(   gcTable = grofit$gcFit$gcTable,   control = grofit$control) # we can copy the control object from the original workflow. plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2) # Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"plot-grids","dir":"","previous_headings":"Visualize results","what":"Plot grids","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.:","code":"plot.grid(grofit,           param = \"mu.linfit\",           pal = \"Mint\",           log.y = FALSE,           sort_by_conc = FALSE,           basesize = 9)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"dose-response-analysis","dir":"","previous_headings":"Visualize results","what":"Dose-response analysis","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"results dose-response analysis can visualized calling plot() drFit object stored within grofit. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice dr.method workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively.","code":"plot(grofit$drFit, cex.point = 1, basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"bootstrapping","dir":"","previous_headings":"","what":"Bootstrapping","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"growth experiments performed larger scale manual growth measurements, technical deviations can result outliers. outliers can lead distortion curve fits, especially fewer data points available usual plate reading experiments. instance, bootstrapping can provide realistic estimation growth parameters. Bootstrapping statistical procedure resamples single dataset create many simulated samples. done randomly drawing data points dataset replacement original number data points reached. analysis (: growth fitting) performed individually bootstrapped replicate. variation resulting estimated parameters reasonable approximation variance parameters. include bootstrapping QurvE workflow, define argument nboot.gc. Similarly, can include bootstrapping dose-response analysis done dr.method = 'spline' defining argument nboot.dr. plot results growth fit bootstrapping, call plot() gcBootSpline object:  applying plot() drBootSpline object, can plot dose-response bootstrap results:","code":"grofit_bt <- growth.workflow(grodata = grodata,                              fit.opt = \"s\", # perform only nonparametric growth fitting                              nboot.gc = 50,                              ec50 = T,                              dr.method = \"spline\",                              dr.parameter = \"mu.spline\",                              nboot.dr = 50,                              smooth.dr = 0.25,                              suppress.messages = TRUE,                              export.res = F) plot(grofit_bt$gcFit$gcBootSpline[[7]], # Double braces serve as an alternative to                                         # access list items and allow their access by number      combine = TRUE, # combine both growth curves and parameter plots in the same window      lwd = 0.7) plot(grofit_bt$drFit$drBootSpline[[1]],      combine = TRUE, # combine both dose-response curves and parameter plots in the same window      lwd = 0.7)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"Calculates values biosensor response model given time points response parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"","code":"biosensor.eq(x, y.min, y.max, K, n)"},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"x vector concentration values y.min minimum fluorescence value y.max maximum fluorescence value K Sensitivity parameter n Cooperativity parameter","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"vector fluorescence values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"","code":"n <- seq(1:10) conc <- rev(10*(1/2)^n) fit <- biosensor.eq(conc, 300, 82000, 0.85, 2)"},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":"Run upon attaching package QurvE — .onAttach","title":"Run upon attaching package QurvE — .onAttach","text":"Run upon attaching package QurvE","code":""},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run upon attaching package QurvE — .onAttach","text":"","code":".onAttach(libname, pkgname)"},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run upon attaching package QurvE — .onAttach","text":"libname library name pkgname package name","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an R object as .RData file — export_RData","title":"Export an R object as .RData file — export_RData","text":"Export R object .RData file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an R object as .RData file — export_RData","text":"","code":"export_RData(object, out.dir = tempdir(), out.nm = class(object))"},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an R object as .RData file — export_RData","text":"object R object. .dir path output directory. Default: working directory .nm output filename (without '.RData' ending). Default: class object followed '.RData'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an R object as .RData file — export_RData","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export an R object as .RData file — export_RData","text":"","code":"if(interactive()){ df <- data.frame('A' = seq(1:10), 'B' = rev(seq(1:10)))  export_RData(df) }"},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a tabular object as tab-separated .txt file — export_Table","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"Export tabular object tab-separated .txt file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"","code":"export_Table(table, out.dir = tempdir(), out.nm = deparse(substitute(table)))"},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"table tabular R object (dataframe, matrix, array) .dir path output directory. Default: working directory .nm output filename (without '.txt' ending). Default: name table followed '.txt'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"","code":"if(interactive()){ df <- data.frame('A' = seq(1:10), 'B' = rev(seq(1:10)))  export_Table(df) }"},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fl.control object. — fl.control","title":"Create a fl.control object. — fl.control","text":"fl.control object required perform various computations fluorescence data stored within grodata objects (created read_data parse_data). fl.control object created automatically part fl.workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fl.control object. — fl.control","text":"","code":"fl.control(   fit.opt = c(\"l\", \"s\"),   x_type = c(\"growth\", \"time\"),   norm_fl = TRUE,   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.lin = FALSE,   log.x.spline = FALSE,   log.y.lin = FALSE,   log.y.spline = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.05,   lin.dY = 0.05,   dr.parameter = \"max_slope.spline\",   dr.method = c(\"model\", \"spline\"),   dr.have.atleast = 5,   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   biphasic = FALSE,   interactive = FALSE,   nboot.fl = 0,   smooth.fl = 0.75,   growth.thresh = 1.5,   suppress.messages = FALSE,   neg.nan.act = FALSE,   clean.bootstrap = TRUE )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fl.control object. — fl.control","text":"fit.opt (Character vector strings) Indicates whether program perform linear regression ('l') /spline fit ('s'). Default:  fit.opt = c('l', 's'). x_type (Character) data type shall used independent variable? Options 'growth' 'time'. norm_fl (Logical) use normalized (growth) fluorescence data fits. effect x_type = 'time' t0 (Numeric) Minimum time value considered linear spline fits (x_type = 'time'). tmax (Numeric) Maximum time value considered linear spline fits (x_type = 'time').. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits (x_type = 'growth'). max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits (x_type = 'growth'). log.x.lin (Logical) Indicates whether ln(x+1) applied independent variable linear fits. Default: FALSE. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied fluorescence data linear fits. Default: FALSE log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE lin.h (Numeric) Manually define size sliding window used flFitLinear. NULL, h calculated samples based number measurements fluorescence increase phase plot. lin.R2 (Numeric) R2 threshold flFitLinear. lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope flFitLinear. lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: 'max_slope.spline', represents maximum slope spline fit Typical options include: 'max_slope.linfit', 'dY.linfit', 'max_slope.spline', 'dY.spline'. dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data ('spline') fit biosensor response model 'model' (proposed Meyer et al., 2019). dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? interactive (Logical) Controls whether fit sample method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.fl (Numeric) Number bootstrap samples used nonparametric curve fitting flBootSpline. Use nboot.fl = 0 disable bootstrap. Default: 0 smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. suppress.messages (Logical) Indicates whether messages (information current fluorescence curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. neg.nan.act (Logical) Indicates whether program stop negative fluorescence values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fl.control object. — fl.control","text":"Generates list arguments described entries.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a fl.control object. — fl.control","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a fl.control object. — fl.control","text":"","code":"# default option control_default <- fl.control() # user defined control_manual <- fl.control(fit.opt = c('s'),                              smooth.fl = 0.6,                              x_type = 'time',                              t0 = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"Fit biosensor model (Meyer et al., 2019) response vs. concentration data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"","code":"fl.drFit(   flTable,   control = fl.control(dr.method = \"model\", dr.parameter = \"max_slope.spline\") )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"flTable dataframe containing data dose-response model estimation. table class flTable can obtained running flFit dr.method = 'model' argument fl.control object. control fl.control object created fl.control, defining relevant fitting options. dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data ('spline') fit biosensor response model 'model' (proposed Meyer et al., 2019). dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: 'max_slope.spline', represents maximum slope spline fit Typical options include: 'max_slope.linfit', 'dY.linfit', 'max_slope.spline', 'dY.spline'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"object class drFit. raw.data Data passed function flTable. drTable Dataframe containing condition identifiers, fit options, results dose-response analysis. drFittedModels List drFitModel objects generated call fl.drFitModel distinct experiment. control Object class fl.control created call fl.control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"","code":"# \\donttest{ # Load example dataset input <- read_data(data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run fluorescence curve analysis workflow fitres <- flFit(fl_data = input$fluorescence,                 time = input$time,                 parallelize = FALSE,                 control = fl.control(x_type = 'time', norm_fl = FALSE,                                      suppress.messages = TRUE))  # Perform dose-response analysis drFit <- fl.drFit(flTable = fitres$flTable,                   control = fl.control(dr.method = 'model',                                        dr.parameter = 'max_slope.linfit')) #>  #> === Dose-Response Estimation via Model Fit ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 3  #> --> Valid datasets per test:  #>       TestID         Number #>       pSEVA634rκ∙GFP 7      #>       pSEVA634r∙GFP  7      #>       pSEVA634∙GFP   7      #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634rκ∙GFP #> sensitivity: 0.0104 | yEC50: 105 | fold change: 4.72 | leakiness: 36.7 #>  #>  #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634r∙GFP #> sensitivity: 0.0531 | yEC50: 75 | fold change: Inf | leakiness: 0 #>  #>  #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634∙GFP #> sensitivity: 0.0463 | yEC50: 190 | fold change: 11.62 | leakiness: 30.2 #>  #>   # Inspect results summary(drFit) #>             Test log.x log.y     yEC50    y.min    y.max        fc          K #> 1 pSEVA634rκ∙GFP FALSE FALSE 104.83198 36.65873 173.0052  4.719346 0.01036183 #> 2  pSEVA634r∙GFP FALSE FALSE  75.10917  0.00000 150.2183       Inf 0.05312423 #> 3   pSEVA634∙GFP FALSE FALSE 190.27552 30.16190 350.3891 11.616943 0.04626944 #>           n yEC50.orig     K.orig             test #> 1 11.576981  104.83198 0.01036183 max_slope.linfit #> 2  3.383541   75.10917 0.05312423 max_slope.linfit #> 3  1.684615  190.27552 0.04626944 max_slope.linfit plot(drFit)    # }"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"fl.drFitModel fits biosensor model proposed Meyer et al. (2019) provided response (e.g., max_slope.spline vs. concentration data determine leakiness, sensitivity, induction fold-change, cooperativity.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"","code":"fl.drFitModel(conc, test, drID = \"undefined\", control = fl.control())"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"drFitFLModel object. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition fit.conc Fitted concentration values. fit.test Fitted response values. model nls object generated nlsLM function. parameters List parameters estimated dose response curve fit. yEC50: Response value related EC50. y.min: Minimum fluorescence ('leakiness', lowest concentration 0). y.max: Maximum fluorescence. fc: Fold change (y.max divided y.min). K: Concentration half-maximal response ('sensitivity'). n: Cooperativity. yEC50.orig: Response value EC50 original scale, transformation applied. K.orig: K original scale, transformation applied. test.nm: Test identifier extracted test. fitFlag (Logical) Indicates whether spline fitted successfully data. reliable (Logical) Indicates whether performed fit reliable (set manually). control Object class fl.control created call fl.control. Use plot.drFitModel visualize model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = 'test', control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.506 | yEC50: 3089 | fold change: 33.02 | leakiness: 181.6 #>  #>   print(summary(TestRun)) #>      yEC50    y.min    y.max       fc         K        n yEC50.orig    K.orig #> 1 3088.587 181.5988 5995.576 33.01551 0.5063853 1.986524   3088.587 0.5063853 #>   test #> 1   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"fl.report requires flFitRes object creates report PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"","code":"fl.report(   flFitRes,   out.dir = tempdir(),   out.nm = NULL,   ec50 = FALSE,   format = c(\"pdf\", \"html\"),   export = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"flFitRes grofit object created fl.workflow. .dir (Character) path name folder report files created.  NULL, folder named combination 'Report.fluorescence_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'FluorescenceReport_' current date time. ec50 (Logical) Display results dose-response analysis (TRUE) (FALSE). format (Character) Define file format report, PDF ('pdf') /HTML ('html'). Default: (c('pdf', 'html')) export (Logical) Shall plots generated report exported individual PDF PNG files TRUE FALSE? parallelize (Logical) Create plots using one available processor cores (TRUE) single core (FALSE). ... arguments passed create report. Currently required: mean.grp: Define groups combine common plots report based sample identifiers. Partial matches sample/group names accepted. Can '', vector strings, list string vectors. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc: Define concentrations combine common plots  report. Can numeric vector, list numeric vectors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"","code":"# load example dataset # \\donttest{ input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = 's',                    x_type = 'time', norm_fl = TRUE,                    dr.parameter = 'max_slope.spline',                    suppress.messages = TRUE,                    parallelize = FALSE)  fl.report(res, out.dir = tempdir(), parallelize = FALSE) #> Render reports... #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Files saved in: 'C:\\Users\\nicwir\\AppData\\Local\\Temp\\RtmpywKmfy' # }"},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"fl.workflow runs fl.control create fl.control object performs computational fitting operations based user input. Finally, desired, final report created PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"","code":"fl.workflow(   grodata = NULL,   time = NULL,   growth = NULL,   fl_data = NULL,   ec50 = TRUE,   mean.grp = NA,   mean.conc = NA,   fit.opt = c(\"l\", \"s\"),   x_type = c(\"growth\", \"time\"),   norm_fl = TRUE,   t0 = 0,   tmax = NA,   min.growth = 0,   max.growth = NA,   log.x.lin = FALSE,   log.x.spline = FALSE,   log.y.lin = FALSE,   log.y.spline = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.07,   lin.dY = 0.05,   biphasic = FALSE,   interactive = FALSE,   dr.parameter = \"max_slope.spline\",   dr.method = c(\"model\", \"spline\"),   dr.have.atleast = 5,   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   nboot.fl = 0,   smooth.fl = 0.75,   growth.thresh = 1.5,   suppress.messages = FALSE,   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   report = NULL,   out.dir = NULL,   out.nm = NULL,   export.fig = FALSE,   export.res = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"grodata grodata object created read_data parse_data, containing fluorescence data data independent variable (.e., time growth). time (optional) matrix containing time values sample (fl_data dataframe provided separate argument). growth (optional) dataframe containing growth data (fl_data matrix provided separate argument). fl_data (optional) dataframe containing fluorescence data (time matrix growth dataframe provided separate argument). ec50 (Logical) Perform dose-response analysis (TRUE) (FALSE). mean.grp (\"\", string vector, list string vectors) Define groups combine common plots final report based sample identifiers (report == TRUE). Partial matches sample/group names accepted. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option \"\" produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc (numeric vector, list numeric vectors) Define concentrations combine common plots final report (report == TRUE). fit.opt (Character character vector) Indicates whether program perform linear regression (\"l\"), model fit (\"m\"), spline fit (\"s\"), (\"\"). Combinations can freely chosen providing character vector, e.g. fit.opt = c(\"l\", \"s\") Default:  fit.opt = c(\"l\", \"s\"). x_type (Character) data type shall used independent variable? Options 'growth' 'time'. norm_fl (Logical) use normalized (growth) fluorescence data fits. effect x_type = 'time' t0 (Numeric) Minimum time value considered linear spline fits (x_type = 'time'). tmax (Numeric) Maximum time value considered linear spline fits (x_type = 'time').. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits (x_type = 'growth'). max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits (x_type = 'growth'). log.x.lin (Logical) Indicates whether ln(x+1) applied independent variable linear fits. Default: FALSE. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied fluorescence data linear fits. Default: FALSE log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE lin.h (Numeric) Manually define size sliding window used flFitLinear. NULL, h calculated samples based number measurements fluorescence increase phase plot. lin.R2 (Numeric) R2 threshold flFitLinear. lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope flFitLinear. lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? interactive (Logical) Controls whether fit sample method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: \"max_slope.spline\", represents maximum slope spline fit Typical options include: \"max_slope.linfit\", \"dY.linfit\", \"max_slope.spline\", \"dY.spline\". dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data (\"spline\") fit biosensor response model (proposed Meyer et al., 2019). dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. nboot.fl (Numeric) Number bootstrap samples used nonparametric curve fitting flBootSpline. Use nboot.fl = 0 disable bootstrap. Default: 0 smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. suppress.messages (Logical) Indicates whether messages (information current fluorescence curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. neg.nan.act (Logical) Indicates whether program stop negative fluorescence values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. report (Character NULL) Create PDF ('pdf') /HTML ('html') report running computations. Define NULL report created. Default: (c('pdf', 'html')) .dir Character NULL Define name folder result files (tables reports) stored. NULL, folder named combination \"FluorescenceResults_\" current date time. .nm Character NULL Define name report files. NULL, files named combination \"FluorescenceReport_\" current date time. export.fig (Logical) Export figures created report separate PNG PDF files (TRUE) (FALSE). effective report = TRUE. export.res (Logical) Create tab-separated TXT files containing calculated parameters dose-response analysis results well .RData file resulting flFitRes object. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"flFitRes object contains computation results, compatible various plotting functions QurvE package fl.report. time Raw time matrix passed function time (grofit object provided. Else, extracted grofit). data Raw data dataframe passed function grodata. flFit flFit object created call flFit fluorescence data. drFit drFit drFitfl object created call growth.drFit fl.drFit fluorescence data (based dr.method argument control; see fl.control). expdesign Experimental design table inherited grodata created identifier columns (columns 1-3) data. control Object class fl.control created call fl.control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot(res, data.type = \"raw\", legend.ncol = 3, basesize = 15) #> Warning: Derivatives cannot be calculated for 'raw' or 'norm.fl' data. Only the fluorescence values will be shown."},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"flBootSpline: Function to generate a bootstrap — flBootSpline","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"fl.gcBootSpline resamples fluorescence-'x' value pairs dataset replacement performs spline fit bootstrap sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"","code":"flBootSpline(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   control = fl.control() )"},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"time Vector independent variable: time (x_type = 'time' fl.control object. growth Vector independent variable: growth (x_type = 'growth' fl.control object. fl_data Vector dependent variable: fluorescence. ID (Character) name analyzed sample. control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"gcBootSpline object containing distribution fluorescence parameters flFitSpline object bootstrap sample. Use plot.gcBootSpline visualize bootstrapping splines well distribution physiological parameters. raw.x Raw time values provided function time. raw.fl Raw growth data provided function data. ID (Character) Identifies tested sample. boot.x Table time values per column, resulting spline fit bootstrap. boot.fl Table growth values per column, resulting spline fit bootstrap. boot.flSpline List flFitSpline object, created flFitSpline resample bootstrap. lambda Vector estimated lambda (lag time) values bootstrap entry. max_slope Vector estimated max_slope (maximum slope) values bootstrap entry. Vector estimated (maximum fluorescence) values bootstrap entry. integral Vector estimated integral values bootstrap entry. bootFlag (Logical) Indicates success bootstrapping operation. control Object class fl.control containing list options passed function control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time',                        nboot.fl = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"flFit performs computational fluorescence fitting operations based user input.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"","code":"flFit(   fl_data,   time = NULL,   growth = NULL,   control = fl.control(),   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"fl_data Either... grodata object created read_data parse_data, list containing 'time' matrix (x_type == \"time\") 'growth' dataframe (x_type == \"growth\") 'fluorescence' dataframes, dataframe containing (normalized) fluorescence values (time matrix growth dataframe provided separate argument). time (optional) matrix containing time values sample. growth (optional) dataframe containing growth values sample sample identifiers first three columns. control fl.control object created fl.control, defining relevant fitting options. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"flFit object contains fluorescence fitting results, compatible various plotting functions QurvE package. raw.x Raw x matrix passed function time (x_type = 'time') growth (x_type = 'growth'). raw.fl Raw growth dataframe passed function data. flTable Table fluorescence parameters related statistics fluorescence curve evaluation performed function. table, also returned generic summary.flFit method applied flFit object, used input fl.drFit. flFittedLinear List flFitLinear objects, generated call flFitLinear. Note: access object list via double brace: flFittedLinear[[#n]]. flFittedSplines List flFitSpline objects, generated call flFitSpline. Note: access object via double brace: flFittedSplines[[#n]]. flBootSplines List flBootSpline objects, generated call flBootSpline. Note: access object via double brace: flFittedSplines[[#n]]. control Object class fl.control containing list options passed function control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = \"s\",              x_type = \"time\", norm_fl = TRUE,              dr.parameter = \"max_slope.spline\",              dr.method = \"model\",              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              control = control,              parallelize = FALSE)  summary(res) #>            TestId AddId concentration reliability_tag log.x.spline log.y.spline #> 1    pSEVA634∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 2   pSEVA634r∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 3  pSEVA634rκ∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 4    pSEVA634∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 5   pSEVA634r∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 6  pSEVA634rκ∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 7    pSEVA634∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 8   pSEVA634r∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 9  pSEVA634rκ∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 10   pSEVA634∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 11  pSEVA634r∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 12 pSEVA634rκ∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 13   pSEVA634∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 14  pSEVA634r∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 15 pSEVA634rκ∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 16   pSEVA634∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 17  pSEVA634r∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 18 pSEVA634rκ∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 19   pSEVA634∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 20  pSEVA634r∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 21 pSEVA634rκ∙GFP  <NA>             1            TRUE        FALSE        FALSE #>    log.x.lin log.y.lin nboot.fl max_slope.linfit lambda.linfit dY.linfit #> 1      FALSE     FALSE        0                0          <NA>      <NA> #> 2      FALSE     FALSE        0                0          <NA>      <NA> #> 3      FALSE     FALSE        0                0          <NA>      <NA> #> 4      FALSE     FALSE        0                0          <NA>      <NA> #> 5      FALSE     FALSE        0                0          <NA>      <NA> #> 6      FALSE     FALSE        0                0          <NA>      <NA> #> 7      FALSE     FALSE        0                0          <NA>      <NA> #> 8      FALSE     FALSE        0                0          <NA>      <NA> #> 9      FALSE     FALSE        0                0          <NA>      <NA> #> 10     FALSE     FALSE        0                0          <NA>      <NA> #> 11     FALSE     FALSE        0                0          <NA>      <NA> #> 12     FALSE     FALSE        0                0          <NA>      <NA> #> 13     FALSE     FALSE        0                0          <NA>      <NA> #> 14     FALSE     FALSE        0                0          <NA>      <NA> #> 15     FALSE     FALSE        0                0          <NA>      <NA> #> 16     FALSE     FALSE        0                0          <NA>      <NA> #> 17     FALSE     FALSE        0                0          <NA>      <NA> #> 18     FALSE     FALSE        0                0          <NA>      <NA> #> 19     FALSE     FALSE        0                0          <NA>      <NA> #> 20     FALSE     FALSE        0                0          <NA>      <NA> #> 21     FALSE     FALSE        0                0          <NA>      <NA> #>    A.linfit x.mu.start.linfit x.mu.end.linfit r2mu.linfit reliable_fit.linfit #> 1      <NA>              <NA>            <NA>        <NA>               FALSE #> 2      <NA>              <NA>            <NA>        <NA>               FALSE #> 3      <NA>              <NA>            <NA>        <NA>               FALSE #> 4      <NA>              <NA>            <NA>        <NA>               FALSE #> 5      <NA>              <NA>            <NA>        <NA>               FALSE #> 6      <NA>              <NA>            <NA>        <NA>               FALSE #> 7      <NA>              <NA>            <NA>        <NA>               FALSE #> 8      <NA>              <NA>            <NA>        <NA>               FALSE #> 9      <NA>              <NA>            <NA>        <NA>               FALSE #> 10     <NA>              <NA>            <NA>        <NA>               FALSE #> 11     <NA>              <NA>            <NA>        <NA>               FALSE #> 12     <NA>              <NA>            <NA>        <NA>               FALSE #> 13     <NA>              <NA>            <NA>        <NA>               FALSE #> 14     <NA>              <NA>            <NA>        <NA>               FALSE #> 15     <NA>              <NA>            <NA>        <NA>               FALSE #> 16     <NA>              <NA>            <NA>        <NA>               FALSE #> 17     <NA>              <NA>            <NA>        <NA>               FALSE #> 18     <NA>              <NA>            <NA>        <NA>               FALSE #> 19     <NA>              <NA>            <NA>        <NA>               FALSE #> 20     <NA>              <NA>            <NA>        <NA>               FALSE #> 21     <NA>              <NA>            <NA>        <NA>               FALSE #>    max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1               <NA>               <NA>             <NA>         <NA> #> 2               <NA>               <NA>             <NA>         <NA> #> 3               <NA>               <NA>             <NA>         <NA> #> 4               <NA>               <NA>             <NA>         <NA> #> 5               <NA>               <NA>             <NA>         <NA> #> 6               <NA>               <NA>             <NA>         <NA> #> 7               <NA>               <NA>             <NA>         <NA> #> 8               <NA>               <NA>             <NA>         <NA> #> 9               <NA>               <NA>             <NA>         <NA> #> 10              <NA>               <NA>             <NA>         <NA> #> 11              <NA>               <NA>             <NA>         <NA> #> 12              <NA>               <NA>             <NA>         <NA> #> 13              <NA>               <NA>             <NA>         <NA> #> 14              <NA>               <NA>             <NA>         <NA> #> 15              <NA>               <NA>             <NA>         <NA> #> 16              <NA>               <NA>             <NA>         <NA> #> 17              <NA>               <NA>             <NA>         <NA> #> 18              <NA>               <NA>             <NA>         <NA> #> 19              <NA>               <NA>             <NA>         <NA> #> 20              <NA>               <NA>             <NA>         <NA> #> 21              <NA>               <NA>             <NA>         <NA> #>    reliable_fit2.linfit max_slope.spline x.max.spline     lambda.spline #> 1                 FALSE 92.2668917228847         20.5  15.5467166096294 #> 2                 FALSE 30.7727385498294           20  31.2872267087641 #> 3                 FALSE 64.1757831646195           16  20.8131240327289 #> 4                 FALSE 242.557704041626         23.5   14.982628746023 #> 5                 FALSE 64.6529094536605           19  21.6712998092256 #> 6                 FALSE 205.579719130273           18  12.5662904914231 #> 7                 FALSE 509.394721871828         21.5  6.95952698278091 #> 8                 FALSE 204.031623957349         17.5  13.4360564669416 #> 9                 FALSE 290.961299939404           13  4.67379381987626 #> 10                FALSE 670.985334314906            6 0.373248436531125 #> 11                FALSE 327.194544214636           17  9.86802427129631 #> 12                FALSE  335.24358478568         17.5  3.65080407904796 #> 13                FALSE 728.625260083634          6.5 0.553816578577824 #> 14                FALSE 346.268113254507         16.5  9.75821807365783 #> 15                FALSE 320.246598452139         17.5  3.21350390586807 #> 16                FALSE  774.05398642078          5.5 0.246732777852533 #> 17                FALSE 337.909403917534         16.5  8.08916482172041 #> 18                FALSE 351.643501664612           18  4.84484452250892 #> 19                FALSE 779.134078966909            6 0.462268482214904 #> 20                FALSE 353.185039298395         16.5   9.5717850859864 #> 21                FALSE 338.826806405161           18  5.01597033523556 #>    max_slope2.spline x.max2.spline lambda2.spline        y0.spline #> 1               <NA>          <NA>           <NA>  1291.4242870252 #> 2               <NA>          <NA>           <NA> 1188.27831547782 #> 3               <NA>          <NA>           <NA> 1565.59217809736 #> 4               <NA>          <NA>           <NA> 1519.80363776351 #> 5               <NA>          <NA>           <NA>  1255.7213080438 #> 6               <NA>          <NA>           <NA> 1624.15289883901 #> 7               <NA>          <NA>           <NA> 1132.18524639308 #> 8               <NA>          <NA>           <NA> 1405.71652864703 #> 9               <NA>          <NA>           <NA> 1468.52438340082 #> 10              <NA>          <NA>           <NA> 1209.47395589045 #> 11              <NA>          <NA>           <NA> 1187.83879461914 #> 12              <NA>          <NA>           <NA> 1467.93981010311 #> 13              <NA>          <NA>           <NA> 891.795404947046 #> 14              <NA>          <NA>           <NA> 1282.77700477438 #> 15              <NA>          <NA>           <NA> 1542.64869773804 #> 16              <NA>          <NA>           <NA> 1132.44043950227 #> 17              <NA>          <NA>           <NA> 862.662992687727 #> 18              <NA>          <NA>           <NA> 1602.42470098365 #> 19              <NA>          <NA>           <NA> 1017.04362101536 #> 20              <NA>          <NA>           <NA>  1323.6959493112 #> 21              <NA>          <NA>           <NA> 1707.52183129309 #>            A.spline        dY.spline  integral.spline reliable_fit.spline #> 1   3427.1255242313  2135.7012372061  82881.406474157                TRUE #> 2  1470.99207749982 282.713762021994 43222.9360971386                TRUE #> 3  2196.18856426073 630.596386163366 67033.6678589485                TRUE #> 4  7592.80063751346 6072.99699974995 151370.675832012                TRUE #> 5  2384.30375521349 1128.58244716969 58249.0814015737                TRUE #> 6  4820.28715109276 3196.13425225375 132414.081549265                TRUE #> 7  17121.2144379564 15989.0291915634 367233.851934483                TRUE #> 8    5206.543176868 3800.82664822097 120525.231431367                TRUE #> 9  7768.18866992603 6299.66428652521  223919.42858498                TRUE #> 10 20079.0095008516 18869.5355449612 490254.828661569                TRUE #> 11 6840.37784263295 5652.53904801381 169914.301957325                TRUE #> 12 9191.86346478591  7723.9236546828 269744.222628614                TRUE #> 13  20481.097768094  19589.302363147 497122.375105375                TRUE #> 14 7000.84532046262 5718.06831568824 179100.135589319                TRUE #> 15 9006.21056404733 7463.56186630929 267724.576457373                TRUE #> 16 20704.0909872879 19571.6505477857 520199.730690857                TRUE #> 17 6952.68659445902 6090.02360177129 178120.140852737                TRUE #> 18 9322.62835009364 7720.20364910999  273698.19440202                TRUE #> 19  19774.702139564 18757.6585185487 508722.732093212                TRUE #> 20 7189.59680355244 5865.90085424124 182547.707805716                TRUE #> 21 9258.53106887529 7551.00923758219 271383.083788705                TRUE #>    reliable_fit2.spline smooth.spline max_slope.bt lambda.bt A.bt dY.bt #> 1                 FALSE          0.75           NA        NA   NA    NA #> 2                 FALSE          0.75           NA        NA   NA    NA #> 3                 FALSE          0.75           NA        NA   NA    NA #> 4                 FALSE          0.75           NA        NA   NA    NA #> 5                 FALSE          0.75           NA        NA   NA    NA #> 6                 FALSE          0.75           NA        NA   NA    NA #> 7                 FALSE          0.75           NA        NA   NA    NA #> 8                 FALSE          0.75           NA        NA   NA    NA #> 9                 FALSE          0.75           NA        NA   NA    NA #> 10                FALSE          0.75           NA        NA   NA    NA #> 11                FALSE          0.75           NA        NA   NA    NA #> 12                FALSE          0.75           NA        NA   NA    NA #> 13                FALSE          0.75           NA        NA   NA    NA #> 14                FALSE          0.75           NA        NA   NA    NA #> 15                FALSE          0.75           NA        NA   NA    NA #> 16                FALSE          0.75           NA        NA   NA    NA #> 17                FALSE          0.75           NA        NA   NA    NA #> 18                FALSE          0.75           NA        NA   NA    NA #> 19                FALSE          0.75           NA        NA   NA    NA #> 20                FALSE          0.75           NA        NA   NA    NA #> 21                FALSE          0.75           NA        NA   NA    NA #>    integral.bt stdmax_slope.bt stdlambda.bt stdA.bt stddY.bt stdintegral.bt #> 1           NA              NA           NA      NA       NA             NA #> 2           NA              NA           NA      NA       NA             NA #> 3           NA              NA           NA      NA       NA             NA #> 4           NA              NA           NA      NA       NA             NA #> 5           NA              NA           NA      NA       NA             NA #> 6           NA              NA           NA      NA       NA             NA #> 7           NA              NA           NA      NA       NA             NA #> 8           NA              NA           NA      NA       NA             NA #> 9           NA              NA           NA      NA       NA             NA #> 10          NA              NA           NA      NA       NA             NA #> 11          NA              NA           NA      NA       NA             NA #> 12          NA              NA           NA      NA       NA             NA #> 13          NA              NA           NA      NA       NA             NA #> 14          NA              NA           NA      NA       NA             NA #> 15          NA              NA           NA      NA       NA             NA #> 16          NA              NA           NA      NA       NA             NA #> 17          NA              NA           NA      NA       NA             NA #> 18          NA              NA           NA      NA       NA             NA #> 19          NA              NA           NA      NA       NA             NA #> 20          NA              NA           NA      NA       NA             NA #> 21          NA              NA           NA      NA       NA             NA #>    reliable_fit.bt ci90.mu.bt.lo ci90.mu.bt.up ci90.lambda.bt.lo #> 1               NA            NA            NA                NA #> 2               NA            NA            NA                NA #> 3               NA            NA            NA                NA #> 4               NA            NA            NA                NA #> 5               NA            NA            NA                NA #> 6               NA            NA            NA                NA #> 7               NA            NA            NA                NA #> 8               NA            NA            NA                NA #> 9               NA            NA            NA                NA #> 10              NA            NA            NA                NA #> 11              NA            NA            NA                NA #> 12              NA            NA            NA                NA #> 13              NA            NA            NA                NA #> 14              NA            NA            NA                NA #> 15              NA            NA            NA                NA #> 16              NA            NA            NA                NA #> 17              NA            NA            NA                NA #> 18              NA            NA            NA                NA #> 19              NA            NA            NA                NA #> 20              NA            NA            NA                NA #> 21              NA            NA            NA                NA #>    ci90.lambda.bt.up ci90.A.bt.lo ci90.A.bt.up ci90.integral.bt.lo #> 1                 NA           NA           NA                  NA #> 2                 NA           NA           NA                  NA #> 3                 NA           NA           NA                  NA #> 4                 NA           NA           NA                  NA #> 5                 NA           NA           NA                  NA #> 6                 NA           NA           NA                  NA #> 7                 NA           NA           NA                  NA #> 8                 NA           NA           NA                  NA #> 9                 NA           NA           NA                  NA #> 10                NA           NA           NA                  NA #> 11                NA           NA           NA                  NA #> 12                NA           NA           NA                  NA #> 13                NA           NA           NA                  NA #> 14                NA           NA           NA                  NA #> 15                NA           NA           NA                  NA #> 16                NA           NA           NA                  NA #> 17                NA           NA           NA                  NA #> 18                NA           NA           NA                  NA #> 19                NA           NA           NA                  NA #> 20                NA           NA           NA                  NA #> 21                NA           NA           NA                  NA #>    ci90.integral.bt.up ci95.mu.bt.lo ci95.mu.bt.up ci95.lambda.bt.lo #> 1                   NA            NA            NA                NA #> 2                   NA            NA            NA                NA #> 3                   NA            NA            NA                NA #> 4                   NA            NA            NA                NA #> 5                   NA            NA            NA                NA #> 6                   NA            NA            NA                NA #> 7                   NA            NA            NA                NA #> 8                   NA            NA            NA                NA #> 9                   NA            NA            NA                NA #> 10                  NA            NA            NA                NA #> 11                  NA            NA            NA                NA #> 12                  NA            NA            NA                NA #> 13                  NA            NA            NA                NA #> 14                  NA            NA            NA                NA #> 15                  NA            NA            NA                NA #> 16                  NA            NA            NA                NA #> 17                  NA            NA            NA                NA #> 18                  NA            NA            NA                NA #> 19                  NA            NA            NA                NA #> 20                  NA            NA            NA                NA #> 21                  NA            NA            NA                NA #>    ci95.lambda.bt.up ci95.A.bt.lo ci95.A.bt.up ci95.integral.bt.lo #> 1                 NA           NA           NA                  NA #> 2                 NA           NA           NA                  NA #> 3                 NA           NA           NA                  NA #> 4                 NA           NA           NA                  NA #> 5                 NA           NA           NA                  NA #> 6                 NA           NA           NA                  NA #> 7                 NA           NA           NA                  NA #> 8                 NA           NA           NA                  NA #> 9                 NA           NA           NA                  NA #> 10                NA           NA           NA                  NA #> 11                NA           NA           NA                  NA #> 12                NA           NA           NA                  NA #> 13                NA           NA           NA                  NA #> 14                NA           NA           NA                  NA #> 15                NA           NA           NA                  NA #> 16                NA           NA           NA                  NA #> 17                NA           NA           NA                  NA #> 18                NA           NA           NA                  NA #> 19                NA           NA           NA                  NA #> 20                NA           NA           NA                  NA #> 21                NA           NA           NA                  NA #>    ci95.integral.bt.up #> 1                   NA #> 2                   NA #> 3                   NA #> 4                   NA #> 5                   NA #> 6                   NA #> 7                   NA #> 8                   NA #> 9                   NA #> 10                  NA #> 11                  NA #> 12                  NA #> 13                  NA #> 14                  NA #> 15                  NA #> 16                  NA #> 17                  NA #> 18                  NA #> 19                  NA #> 20                  NA #> 21                  NA"},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Data fit via a heuristic linear method — flFitLinear","title":"Data fit via a heuristic linear method — flFitLinear","text":"Determine maximum slopes using heuristic approach similar ``growth rates made easy''-method Hall et al. (2013).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data fit via a heuristic linear method — flFitLinear","text":"","code":"flFitLinear(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   quota = 0.95,   control = fl.control(x_type = c(\"growth\", \"time\"), log.x.lin = FALSE, log.y.lin =     FALSE, t0 = 0, min.growth = NA, lin.h = NULL, lin.R2 = 0.98, lin.RSD = 0.05, lin.dY =     0.05, biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data fit via a heuristic linear method — flFitLinear","text":"time Vector independent time variable (x_type = \"time\" control object). growth Vector independent time growth (x_type = \"growth\" control object). fl_data Vector dependent fluorescence variable. ID (Character) name analyzed sample. quota (Numeric, 0 1) Define fraction max_slope slope regression windows adjacent window highest slope included overall linear fit. control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data fit via a heuristic linear method — flFitLinear","text":"gcFitLinear object parameters fit. lag time estimated intersection fit horizontal line \\(y=y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize linear fit. raw.x Filtered x values used spline fit. raw.fl Filtered fluorescence values used spline fit. filt.x Filtered x values. filt.fl Filtered fluorescence values. ID (Character) Identifies tested sample. FUN Linear function used plotting tangent mumax. fit lm object; result final call lm perform linear regression. par List determined fluorescence parameters. y0: Minimum fluorescence value considered heuristic linear method. dY: Difference maximum fluorescence minimum fluorescence : Maximum fluorescence y0_lm: Intersection linear fit abscissa. max_slope: Maximum slope linear fit. tD: Doubling time. slope.se: Standard error maximum slope. lag: Lag X. x.max_start: X value first data point within window used linear regression. x.max_end: X value last data point within window used linear regression. x.turn: biphasic: X inflection point separates two phases. max.slope2: biphasic: Slope second phase. tD2: Doubling time second phase. y0_lm2: biphasic: Intersection linear fit second phase abscissa. lag2: biphasic: Lag time determined second phase.. x.max2_start: biphasic: X value first data point within window used linear regression second phase. x.max2_end: biphasic: X value last data point within window used linear regression second phase. ndx Index data points used linear regression. ndx2 Index data points used linear regression second phase. control Object class grofit.control containing list options passed function control. rsquared R2 linear regression. rsquared2 R2 linear regression second phase. fitFlag (Logical) Indicates whether linear regression successfully performed data. fitFlag2 (Logical) Indicates whether second phase identified. reliable (Logical) Indicates whether performed fit reliable (set manually).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data fit via a heuristic linear method — flFitLinear","text":"Hall, BG., Acar, H, Nandipati, Barlow, M (2014) Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-38, DOI: 10.1093/molbev/mst187 Petzoldt T (2022). growthrates: Estimate Growth Rates Experimental Data. R package version 0.8.3, https://CRAN.R-project.org/package=growthrates.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data fit via a heuristic linear method — flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"l\", x_type = \"time\",                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on fluorescence data — flFitSpline","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"flFitSpline performs smooth spline fit dataset determines greatest slope global maximum first derivative spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"","code":"flFitSpline(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   control = fl.control(biphasic = FALSE, x_type = c(\"growth\", \"time\"), log.x.spline =     FALSE, log.y.spline = FALSE, smooth.fl = 0.75, t0 = 0, min.growth = NA) )"},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"time Vector independent variable: time (x_type = 'time' fl.control object. growth Vector independent variable: growth (x_type = 'growth' fl.control object. fl_data Vector dependent variable: fluorescence. ID (Character) name analyzed sample. control fl.control object created fl.control, defining relevant fitting options. biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? x_type (Character) data type shall used independent variable? Options 'growth' 'time'. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 t0 (Numeric) Minimum time value considered linear spline fits. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"flFitSpline object. lag time estimated intersection tangent maximum slope horizontal line \\(y = y_0\\), y0 first value dependent variable. Use plot.flFitSpline visualize spline fit derivative time. x.Raw x values provided function time growth. fl.Raw fluorescence data provided function fl_data. raw.x Filtered x values used spline fit. raw.fl Filtered fluorescence values used spline fit. ID (Character) Identifies tested sample. fit.x Fitted x values. fit.fl Fitted fluorescence values. parameters List determined parameters. : Maximum fluorescence. dY: Difference maximum fluorescence minimum fluorescence. max_slope: Maximum slope fluorescence-vs.-x data (.e., maximum first derivative spline). x.max: Time maximum slope. lambda: Lag time. b.tangent: Intersection tangent maximum slope abscissa. max_slope2: biphasic course fluorescence: Maximum slope fluorescence-vs.-x data second phase. lambda2: biphasic course fluorescence: Lag time determined second phase. x.max2: biphasic course fluorescence: Time maximum slope second phase. b.tangent2: biphasic course fluorescence: Intersection tangent maximum slope second phase abscissa. integral: Area curve spline fit. spline smooth.spline object generated smooth.spline function. spline.deriv1 list time ('x') growth ('y') values describing first derivative spline fit. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether spline fit successfully performed data. fitFlag2 (Logical) Indicates whether second phase identified. control Object class fl.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"biphasic = TRUE, following steps performed define second phase: Determine local minima within first derivative smooth spline fit. Remove 'peak' containing highest value first derivative (.e., \\(mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(mu_{max}\\). Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time'))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grofit.control object. — growth.control","title":"Create a grofit.control object. — growth.control","text":"grofit.control object required perform various computations growth data stored within grodata objects (created read_data parse_data). grofit.control object created automatically part growth.workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grofit.control object. — growth.control","text":"","code":"growth.control(   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   suppress.messages = FALSE,   fit.opt = c(\"a\"),   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.gc = FALSE,   log.y.lin = TRUE,   log.y.spline = TRUE,   log.y.model = TRUE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.1,   lin.dY = 0.05,   biphasic = FALSE,   interactive = FALSE,   nboot.gc = 0,   smooth.gc = 0.55,   model.type = c(\"logistic\", \"richards\", \"gompertz\", \"gompertz.exp\", \"huang\", \"baranyi\"),   dr.method = c(\"model\", \"spline\"),   dr.model = c(\"gammadr\", \"multi2\", \"LL.2\", \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\",     \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\", \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\",     \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),   dr.have.atleast = 6,   dr.parameter = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu.spline\",     \"lambda.spline\", \"dY.spline\", \"A.spline\", \"mu.model\", \"lambda.model\",     \"dY.orig.model\", \"A.orig.model\"),   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   growth.thresh = 1.5 )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grofit.control object. — growth.control","text":"neg.nan.act (Logical) Indicates whether program stop negative growth values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. suppress.messages (Logical) Indicates whether messages (information current growth curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed processing high throughput data. Note: warnings still displayed. Default: FALSE. fit.opt (Character character vector) Indicates whether program perform linear regression ('l'), model fit ('m'), spline fit ('s'), (''). Combinations can freely chosen providing character vector, e.g. fit.opt = c('l', 's') Default:  fit.opt = c('l', 's'). t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Maximum time value considered linear spline fits. min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE log.y.spline (Logical) Indicates whether ln(y/y0) applied growth data spline fits. Default: TRUE log.y.model (Logical) Indicates whether ln(y/y0) applied growth data model fits. Default: TRUE lin.h (Numeric) Manually define size sliding window used growth.gcFitLinear NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). biphasic (Logical) Shall growth.gcFitLinear growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)? interactive (Logical) Controls whether fit growth curve method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.gc (Numeric) Number bootstrap samples used nonparametric growth curve fitting growth.gcBootSpline. Use nboot.gc = 0 disable bootstrap. Default: 0 smooth.gc (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating growth rates) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 model.type (Character) Vector providing names parametric models fitted data. Default: c('logistic', 'richards', 'gompertz', 'gompertz.exp', 'huang', 'baranyi'). dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grofit.control object. — growth.control","text":"Generates list arguments described entries.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a grofit.control object. — growth.control","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a grofit.control object. — growth.control","text":"","code":"# default option control_default <- growth.control() # user defined control_manual <- growth.control(fit.opt = c('s', 'm'),                                  smooth.gc = 0.5,                                  model.type = c('huang', 'baranyi'))"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"growth.drBootSpline resamples values dataset replacement performs spline fit bootstrap sample determine EC50.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"","code":"growth.drBootSpline(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"object class drBootSpline containing distribution growth parameters drFitSpline object bootstrap sample. Use plot.drBootSpline visualize bootstrapping splines well distribution EC50. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition. boot.conc Table concentration values per column, resulting spline fit bootstrap. boot.test Table response values per column, resulting spline fit bootstrap. boot.drSpline List containing drFitSpline objects generated call growth.drFitSpline. ec50.boot Vector estimated EC50 values bootstrap entry. ec50y.boot Vector estimated response EC50 values bootstrap entry. BootFlag (Logical) Indicates success bootstrapping operation. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = 'test',                control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8,                                         nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.924701829825736 StDev :  0.0593431811774919  #> 90% CI:  0.922749439164997 90% CI:  0.926654220486476 #> 95% CI:  0.922375577123579 95% CI:  0.927028082527894 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.52111642655227  #> 90% CI:  1.51619902429358 90% CI:  1.52604343887945 #> 95% CI:  1.51525848881595 95% CI:  1.52698800719434 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.9247018    0.05934318         0.512694     0.08265924 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.8270823           1.022321          0.8083892           1.041014 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.521116                1.286637                 1.77964 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                 1.24429                1.832089 plot(TestRun, combine = TRUE)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"growth.drFit serves determine dose-response curves every condition dataset. response parameter can chosen every physiological parameter gcTable table obtained via growth.gcFit. growth.drFit calls functions growth.drFitSpline growth.drBootSpline, growth.drFitModel generate table estimates EC50 respecting statistics.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"","code":"growth.drFit(   gcTable,   control = growth.control(dr.method = \"model\", dr.model = c(\"gammadr\", \"multi2\", \"LL.2\",     \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\", \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\",     \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\", \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),     dr.have.atleast = 6, dr.parameter = \"mu.linear\", nboot.dr = 0, smooth.dr = NULL,     log.x.dr = FALSE, log.y.dr = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"gcTable dataframe containing data dose-response curve estimation. table class gcTable can obtained running growth.gcFit. control grofit.control object created growth.control, defining relevant fitting options. dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"object class drFit. raw.data Data passed function gcTable. drTable Dataframe containing condition identifiers, fit options, results dose-response analysis. drBootSplines List drBootSpline objects generated call growth.drBootSpline distinct experiment. drFittedSplines List drFitSpline objects generated call growth.drFitSpline distinct experiment. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,              control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1604636     0.002556260  0.1552567  0.1656706 #> 2 Test2 FALSE FALSE       0     0.1138320     0.001968786  0.1098167  0.1178474 #>       yEC50      test model #> 1 0.3297931 mu.spline  W1.3 #> 2 0.2362420 mu.spline  W1.4 plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"Fit various models response vs. concentration data single sample determine EC50.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"","code":"growth.drFitModel(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"drFitModel object.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = 'test')  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper     yEC50      test #> e:1:50      3.976004      0.09719473   3.770941   4.181067 0.4721114 mu.linfit #>        model #> e:1:50  W1.3 plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"growth.drFitSpline performs smooth spline fit determines EC50 concentration half-maximum value response parameter spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"","code":"growth.drFitSpline(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"drFitSpline object. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition fit.conc Fitted concentration values. fit.test Fitted response values. spline smooth.spline object generated smooth.spline function. spline.low x y values lowess spline fit raw data. Used call smooth.spline. parameters List parameters estimated dose response curve fit. EC50: Concentration half-maximal response. yEC50: Response value related EC50. EC50.orig: EC50 value original scale, transformation applied. yEC50.orig: Response value EC50 original scale, transformation applied. fitFlag (Logical) Indicates whether spline fitted successfully data. reliable (Logical) Indicates whether performed fit reliable (set manually). control Object class grofit.control containing list options passed function control. Use plot.drFitSpline visualize spline fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"spline fit smooth.spline, higher weights assigned data points concentration value 0, well x-y pairs response parameter value 0 pairs concentration values zero-response parameter values.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07 Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = 'test',               control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.64900305546795 yEC50 0.47554453605515 #> --> Original scale  #> xEC50 4.20179134385741 yEC50 0.47554453605515 #>  #>   print(summary(TestRun)) #>       EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.649003 0.4755445  4.201791  0.4755445   NA  plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"growth.gcBootSpline resamples growth-time value pairs dataset replacement performs spline fit bootstrap sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"","code":"growth.gcBootSpline(time, data, gcID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"time Vector independent variable (usually: time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"gcBootSpline object containing distribution growth parameters gcFitSpline object bootstrap sample. Use plot.gcBootSpline visualize bootstrapping splines well distribution physiological parameters. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. gcID (Character) Identifies tested sample. boot.time Table time values per column, resulting spline fit bootstrap. boot.data Table growth values per column, resulting spline fit bootstrap. boot.gcSpline List gcFitSpline object, created growth.gcFitSpline resample bootstrap. lambda Vector estimated lambda (lag time) values bootstrap entry. mu Vector estimated mu (maximum growth rate) values bootstrap entry. Vector estimated (maximum growth) values bootstrap entry. integral Vector estimated integral values bootstrap entry. bootFlag (Logical) Indicates success bootstrapping operation. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = 'TestFit',               control = growth.control(fit.opt = 's', nboot.gc = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"growth.gcFit performs computational growth fitting operations based user input.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"","code":"growth.gcFit(time, data, control = growth.control(), parallelize = TRUE, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"time (optional) matrix containing time values sample. data Either... grodata object created read_data parse_data, list containing 'time' matrix well 'growth' , appropriate, 'fluorescence' dataframes, dataframe containing growth values (time matrix provided separate argument). control grofit.control object created growth.control, defining relevant fitting options. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"gcFit object contains growth fitting results, compatible various plotting functions QurvE package. raw.time Raw time matrix passed function time. raw.data Raw growth dataframe passed function data. gcTable Table growth parameters related statistics growth curve evaluation performed function. table, also returned generic summary.gcFit method applied gcFit object, used input growth.drFit. gcFittedLinear List gcFitLinear objects, generated call growth.gcFitLinear. Note: access object list via double brace: gcFittedLinear[[#n]]. gcFittedModels List gcFitModel objects, generated call growth.gcFitModel. Note: access object list via double brace: gcFittedModels[[#n]]. gcFittedSplines List gcFitSpline objects, generated call growth.gcFitSpline. Note: access object via double brace: gcFittedSplines[[#n]]. gcBootSplines List gcBootSpline objects, generated call growth.gcBootSpline. Note: access object via double brace: gcFittedSplines[[#n]]. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"","code":"# Create random growth data set   rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')   rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')    rnd.data <- list()   rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time)   rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow   res <- growth.gcFit(time = rnd.data$time,                       data = rnd.data$data,                       parallelize = FALSE,                       control = growth.control(suppress.messages = TRUE,                                                fit.opt = 's'))"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"Determine maximum growth rates log-linear part growth curve using heuristic approach similar ``growth rates made easy''-method Hall et al. (2013).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"","code":"growth.gcFitLinear(   time,   data,   gcID = \"undefined\",   quota = 0.95,   control = growth.control(t0 = 0, tmax = NA, log.x.gc = FALSE, log.y.lin = TRUE,     min.growth = NA, max.growth = NA, lin.h = NULL, lin.R2 = 0.97, lin.RSD = 0.1, lin.dY     = 0.05, biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"time Vector independent variable (usually: time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. quota (Numeric, 0 1) Define fraction \\(mu_{max}\\) slope regression windows adjacent window highest slope included overall linear fit. control grofit.control object created growth.control, defining relevant fitting options. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions. t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Minimum time value considered linear spline fits. lin.h (Numeric) Manually define size sliding window . NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Enter minimum percentage growth increase linear regression cover. biphasic (Logical) Shall growth.gcFitLinear try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"gcFitLinear object parameters fit. lag time estimated intersection fit horizontal line \\(y=y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize linear fit. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. filt.time Filtered time values used heuristic linear method. filt.data Filtered growth values. log.data Log-transformed, filtered growth values used heuristic linear method. gcID (Character) Identifies tested sample. FUN Linear function used plotting tangent mumax. fit lm object; result final call lm perform linear regression. par List determined growth parameters. y0: Minimum growth value considered heuristic linear method. dY: Difference maximum growth minimum growth. : Maximum growth. y0_lm: Intersection linear fit abscissa. mumax: Maximum growth rate (.e., slope linear fit). tD: Doubling time. mu.se: Standard error maximum growth rate. lag: Lag time. tmax_start: Time value first data point within window used linear regression. tmax_end: Time value last data point within window used linear regression. t_turn: biphasic growth: Time inflection point separates two growth phases. mumax2: biphasic growth: Growth rate second growth phase. tD2: Doubling time second growth phase. y0_lm2: biphasic growth: Intersection linear fit second growth phase abscissa. lag2: biphasic growth: Lag time determined second growth phase.. tmax2_start: biphasic growth: Time value first data point within window used linear regression second growth phase. tmax2_end: biphasic growth: Time value last data point within window used linear regression second growth phase. ndx Index data points used linear regression. ndx2 Index data points used linear regression second growth phase. control Object class grofit.control containing list options passed function control. rsquared R2 linear regression. rsquared2 R2 linear regression second growth phase. fitFlag (Logical) Indicates whether linear regression successfully performed data. fitFlag2 (Logical) Indicates whether second growth phase identified. reliable (Logical) Indicates whether performed fit reliable (set manually).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"algorithm works follows: Fit linear regressions (Theil-Sen estimator) subsets h consecutive, log-transformed data points (sliding window size h). example \\(h=5\\), fit linear regression points 1 ... 5, 2 ... 6, 3 ... 7 . Find subset highest slope \\(mu_{max}\\). R2 relative standard deviation (RSD) values regression meet lin.R2 lin.RSD defined thresholds data points within regression window account fraction least lin.dY total growth increase? , evaluate subset second highest slope, . Include also data points adjacent subsets slope least \\(quota \\cdot mu{max}\\), e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step 3. biphasic = TRUE, following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following \\(mu_{max}\\) repeat heuristic linear method later time values. Find local maximum \\(mu_{max}\\) repeat heuristic linear method earlier time values. Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"Hall, BG., Acar, H, Nandipati, Barlow, M (2014) Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-38, DOI: 10.1093/molbev/mst187 Petzoldt T (2022). growthrates: Estimate Growth Rates Experimental Data. R package version 0.8.3, https://CRAN.R-project.org/package=growthrates. Theil, H.(1992). rank-invariant method linear polynomial regression analysis. : Henri Theil’s contributions economics econometrics. Springer, pp. 345–381. DOI: 10.1007/978-94-011-2546-8_20","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"l\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nonlinear growth models to growth data — growth.gcFitModel","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"growth.gcFitModel determines parametric growth model best describes data.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"","code":"growth.gcFitModel(time, data, gcID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"time Vector independent variable (usually time). data Vector dependent variable (usually growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"gcFitModel object contains physiological parameters information best fit. Use plot.gcFitModel visualize parametric fit growth equation. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. gcID (Character) Identifies tested sample. fit.time Fitted time values. fit.data Fitted growth values. parameters List determined growth parameters. : Maximum growth. dY: Difference maximum growth minimum growth fitted model. mu: Maximum growth rate (.e., maximum first derivative spline). lambda: Lag time. b.tangent: Intersection tangent maximum growth rate abscissa. fitpar: models: list additional parameters used equations describing growth curve. integral: Area curve parametric fit. model (Character) model obtained fit lowest AIC, determined AIC. nls nls object chosen model generated nls function. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether parametric model successfully fitted data. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'm')) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  plot(TestFit, basesize = 18, eq.size = 1.5) #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on growth data — growth.gcFitSpline","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"growth.gcFitSpline performs smooth spline fit dataset determines highest growth rate global maximum first derivative spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"","code":"growth.gcFitSpline(   time,   data,   gcID = \"undefined\",   control = growth.control(biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"time Vector independent variable (usually time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options. biphasic (Logical) Shall growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"gcFitSpline object. lag time estimated intersection tangent maximum slope horizontal line \\(y = y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize spline fit derivative time. time.Raw time values provided function time. data.Raw growth data provided function data. raw.time Filtered time values used spline fit. raw.data Filtered growth values used spline fit. gcID (Character) Identifies tested sample. fit.time Fitted time values. fit.data Fitted growth values. parameters List determined growth parameters. : Maximum growth. dY: Difference maximum growth minimum growth. mu: Maximum growth rate (.e., maximum first derivative spline). tD: Doubling time. t.max: Time maximum growth rate. lambda: Lag time. b.tangent: Intersection tangent maximum growth rate abscissa. mu2: biphasic growth: Growth rate second growth phase. tD2: Doubling time second growth phase. lambda2: biphasic growth: Lag time determined second growth phase. t.max2: biphasic growth: Time maximum growth rate second growth phase. b.tangent2: biphasic growth: Intersection tangent maximum growth rate second growth phase abscissa. integral: Area curve spline fit. spline smooth.spline object generated smooth.spline function. spline.deriv1 list time ('x') growth ('y') values describing first derivative spline fit. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether spline fit successfully performed data. fitFlag2 (Logical) Indicates whether second growth phase identified. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"biphasic = TRUE, following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove 'peak' containing highest value first derivative (.e., \\(mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(mu_{max}\\). Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform spline fit TestFit <- growth.gcFitSpline(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 's'))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"growth.report requires grofit object creates report PDF HTML format summarizes results.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"","code":"growth.report(   grofit,   out.dir = tempdir(),   out.nm = NULL,   ec50 = FALSE,   format = c(\"pdf\", \"html\"),   export = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"grofit grofit object created growth.workflow. .dir (Character) path name folder report files created.  NULL, folder named combination 'Report.growth_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'GrowthReport_' current date time. ec50 (Logical) Display results dose-response analysis (TRUE) (FALSE). format (Character) Define file format report, PDF ('pdf') /HTML ('html'). Default: (c('pdf', 'html')) export (Logical) Shall plots generated report exported individual PDF PNG files TRUE FALSE? parallelize (Logical) Create plots using one available processor cores (TRUE) single core (FALSE). ... arguments passed create report. Currently supported: mean.grp: Define groups combine common plots report based sample identifiers. Partial matches sample/group names accepted. Can '', string vector, list string vectors. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc: Define concentrations combine common plots  report. Can numeric vector, list numeric vectors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"","code":"# \\donttest{ # Create random growth data set   rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')     # Run growth curve analysis workflow   res <- growth.workflow(time = rnd.data$time,                          data = rnd.data$data,                          fit.opt = 's',                          ec50 = FALSE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE)    growth.report(res, out.dir = tempdir(), parallelize = FALSE) #> Render reports... #> Report files saved in: '/C:\\Users\\nicwir\\AppData\\Local\\Temp\\RtmpywKmfy' # }"},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"growth.workflow runs growth.control create grofit.control object performs computational fitting operations based user input. Finally, desired, final report created PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"","code":"growth.workflow(   grodata = NULL,   time = NULL,   data = NULL,   ec50 = TRUE,   mean.grp = NA,   mean.conc = NA,   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   suppress.messages = FALSE,   fit.opt = c(\"a\"),   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.gc = FALSE,   log.y.lin = TRUE,   log.y.spline = TRUE,   log.y.model = TRUE,   biphasic = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.1,   lin.dY = 0.05,   interactive = FALSE,   nboot.gc = 0,   smooth.gc = 0.55,   model.type = c(\"logistic\", \"richards\", \"gompertz\", \"gompertz.exp\", \"huang\", \"baranyi\"),   dr.method = c(\"model\", \"spline\"),   dr.model = c(\"gammadr\", \"multi2\", \"LL.2\", \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\",     \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\", \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\",     \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),   growth.thresh = 1.5,   dr.have.atleast = 6,   dr.parameter = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu.spline\",     \"lambda.spline\", \"dY.spline\", \"A.spline\", \"mu.model\", \"lambda.model\",     \"dY.orig.model\", \"A.orig.model\"),   smooth.dr = 0.1,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   report = NULL,   out.dir = NULL,   out.nm = NULL,   export.fig = FALSE,   export.res = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"grodata grodata object created read_data parse_data, list containing 'time' matrix well 'growth' dataframe. time (optional) matrix containing time values sample. data (optional) dataframe containing growth data (time matrix provided separate argument). ec50 (Logical) Perform dose-response analysis (TRUE) (FALSE). mean.grp ('', string vector, list string vectors) Define groups combine common plots final report based sample identifiers (report == TRUE). Partial matches sample/group names accepted. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc (numeric vector, list numeric vectors) Define concentrations combine common plots final report (report == TRUE). neg.nan.act (Logical) Indicates whether program stop negative growth values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. suppress.messages (Logical) Indicates whether grofit messages (information current growth curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. fit.opt (Character character vector) Indicates whether program perform linear regression ('l'), model fit ('m'), spline fit ('s'), (''). Combinations can freely chosen providing character vector, e.g. fit.opt = c('l', 's') Default:  fit.opt = c('l', 's'). t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Maximum time value considered linear spline fits. min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE log.y.spline (Logical) Indicates whether ln(y/y0) applied growth data spline fits. Default: TRUE log.y.model (Logical) Indicates whether ln(y/y0) applied growth data model fits. Default: TRUE biphasic (Logical) Shall growth.gcFitLinear growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)? lin.h (Numeric) Manually define size sliding window used growth.gcFitLinear NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). interactive (Logical) Controls whether fit growth curve method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.gc (Numeric) Number bootstrap samples used nonparametric growth curve fitting growth.gcBootSpline. Use nboot.gc = 0 disable bootstrap. Default: 0 smooth.gc (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating growth rates) produce error smooth.spline lead overestimation. usage fixed value recommended reproducible results across samples. See ?smooth.spline details. Default: 0.55 model.type (Character) Vector providing names parametric models fitted data. Default: c('logistic', 'richards', 'gompertz', 'gompertz.exp', 'huang', 'baranyi'). dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See documentation smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. report (Character NULL) Create PDF ('pdf') /HTML ('html') report running computations. Define NULL report created. Default: (c('pdf', 'html')) .dir Character NULL Define name folder result files stored. NULL, folder named combination 'GrowthResults_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'GrowthReport_' current date time. export.fig (Logical) Export figures created report separate PNG PDF files (TRUE) (FALSE). effective report = TRUE. export.res (Logical) Create tab-separated TXT files containing calculated growth parameters dose-response analysis results well .RData file resulting grofit object. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"grofit object contains computation results, compatible various plotting functions QurvE package growth.report. time Raw time matrix passed function time (grofit object provided). data Raw growth dataframe passed function data (grofit object provided). gcFit gcFit object created call growth.gcFit. drFit drFit object created call growth.drFit. expdesign Experimental design table inherited grodata created identifier columns (columns 1-3) data. control Object class grofit.control created call growth.control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"","code":"# Create random growth data set   rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')   rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')    rnd.data <- list()   rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time)   rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)    # Run growth curve analysis workflow   res <- growth.workflow(time = rnd.data$time,                          data = rnd.data$data,                          fit.opt = 's',                          ec50 = FALSE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE)  # Load custom dataset   input <- read_data(data.growth = system.file('2-FMA_toxicity.csv', package = 'QurvE')) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.    res <- growth.workflow(grodata = input,                          fit.opt = 's',                          ec50 = TRUE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE) #> The chosen 'dr.parameter' is not compatible with the selected fitting options ('fit.opt'). Dose-response analysis will not be performed.    plot(res)"},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":null,"dir":"Reference","previous_headings":"","what":"Find indices of maxima an minima in a data series — inflect","title":"Find indices of maxima an minima in a data series — inflect","text":"Find indices maxima minima data series","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find indices of maxima an minima in a data series — inflect","text":"","code":"inflect(x, threshold = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find indices of maxima an minima in a data series — inflect","text":"x vector values minima maxima threshold Threshold consider minima maxima","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find indices of maxima an minima in a data series — inflect","text":"list 1. vector minima 2. vector maxima.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find indices of maxima an minima in a data series — inflect","text":"Evan Friedland","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find indices of maxima an minima in a data series — inflect","text":"","code":"# Pick a desired threshold to plot up to n <- 3 # Generate Data randomwalk <- 100 + cumsum(rnorm(50, 0.2, 1)) # climbs upwards most of the time bottoms <- lapply(1:n, function(x) inflect(randomwalk, threshold = x)$minima) tops <- lapply(1:n, function(x) inflect(randomwalk, threshold = x)$maxima) # Color functions cf.1 <- grDevices::colorRampPalette(c('pink','red')) cf.2 <- grDevices::colorRampPalette(c('cyan','blue')) plot(randomwalk, type = 'l', main = 'Minima & Maxima\\nVariable Thresholds') for(i in 1:n){   points(bottoms[[i]], randomwalk[bottoms[[i]]], pch = 16, col = cf.1(n)[i], cex = i/1.5) } for(i in 1:n){   points(tops[[i]], randomwalk[tops[[i]]], pch = 16, col = cf.2(n)[i], cex = i/1.5) } legend('topleft', legend = c('Minima',1:n,'Maxima',1:n),        pch = rep(c(NA, rep(16,n)), 2), col = c(1, cf.1(n),1, cf.2(n)),        pt.cex =  c(rep(c(1, c(1:n) / 1.5), 2)), cex = .75, ncol = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for handling linear fits. — lm_parms","title":"Helper functions for handling linear fits. — lm_parms","text":"lm_window performs linear regression Theil-Sen estimator subset data.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for handling linear fits. — lm_parms","text":"","code":"lm_parms(m)  lm_window(x, y, i0, h = 5)"},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for handling linear fits. — lm_parms","text":"m linear model (lm) object x vector independent variable (e.g. time). y vector dependent variable (concentration organisms). i0 index first value used window. h window (number data).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions for handling linear fits. — lm_parms","text":"linear model object class lm (lm_window) resp. vector parameters fit (lm_parms).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper functions for handling linear fits. — lm_parms","text":"Hall, B. G., H. Acar M. Barlow 2013. Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-238 doi:10.1093/molbev/mst197","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper functions for handling linear fits. — lm_parms","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- as.numeric(rnd.dataset$data[1,-(1:3)]) # Remove identifier columns data.log <- log(data/data[1])  # Perform linear fit on 8th window of size 8 linreg <- lm_window(time, data.log, 8, h=8)  summary(linreg) #>  #> Call: #> theil_sen_regression(formula = y ~ x) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.048331 -0.014876  0.000000  0.003766  0.009988  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.15825    0.03767  -4.201 0.005678 **  #> x            0.11603    0.01402   8.276 0.000168 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.02271 on 6 degrees of freedom #> Multiple R-squared:  0.9195,\tAdjusted R-squared:  0.906  #> F-statistic:  68.5 on 1 and 6 DF,  p-value: 0.0001684 #>   lm_parms(linreg) #>           a           b        b.se          r2       b.rsd  #> -0.15825206  0.11603370  0.01401989  0.91946111  0.12082603"},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"Function estimate area curve given x y(x) values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"","code":"low.integrate(x, y)"},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"x Numeric vector x values. y Numeric vector y values length x.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"Numeric value: Area smoothed spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"function uses R internal function smooth.spline.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- as.numeric(rnd.dataset$data[1,-(1:3)]) # Remove identifier columns  plot(time, data)   print(low.integrate(time, data)) #> [1] 83.21034"},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"parse_data takes raw export file plate reader experiment (similar device), extracts relevant information parses format required run growth.workflow. one read type found user prompted assign correct reads growth fluorescence.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"","code":"parse_data(   data.file = NULL,   map.file = NULL,   software = c(\"Gen5\", \"Gen6\", \"Biolector\", \"Chi.Bio\", \"GrowthProfiler\", \"Tecan\",     \"VictorNivo\", \"VictorX3\"),   convert.time = NULL,   sheet.data = 1,   sheet.map = 1,   csvsep.data = \";\",   dec.data = \".\",   csvsep.map = \";\",   dec.map = \".\",   subtract.blank = TRUE,   calib.growth = NULL,   calib.fl = NULL,   calib.fl2 = NULL,   fl.normtype = c(\"growth\", \"fl2\") )"},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"data.file (Character) table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing raw plate reader (similar device) data. map.file (Character) table file column format extension '.xlsx', '.xls', '.csv', '.tsv', '.txt'  'well', 'ID', 'replicate', 'concentration' first row. Used assign sample information wells plate. software (Character) name software/device used export plate reader data. convert.time (NULL string) Convert time values formula provided form 'y = function(x)'. example: convert.time = 'y = 24 * x' sheet.data, sheet.map (Numeric Character) Number name sheets XLS XLSX files containing experimental data mapping information, respectively (optional). csvsep.data, csvsep.map (Character) separator used CSV data files (ignored file types).  Default: \";\" dec.data, dec.map (Character) decimal separator used CSV, TSV TXT files measurements mapping information, respectively. subtract.blank (Logical) Shall blank values subtracted values within experiment (TRUE, default) (FALSE). calib.growth, calib.fl, calib.fl2 (Character NULL) Provide equation form 'y = function(x)' (example: 'y = x^2 * 0.3 - 0.5') convert growth fluorescence values. can used , e.g., convert plate reader absorbance values OD600 fluorescence intensity molecule concentrations. Caution!: utilizing calibration, carefully consider whether blanks subtracted determine calibration selecting input subtract.blank = TRUE. fl.normtype (Character string) Normalize fluorescence values either diving 'growth' fluorescence2 values ('fl2').","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"grodata object suitable run growth.workflow. See read_data structure.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"Metadata provided map.file needs following layout:","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"","code":"if(interactive()){ grodata <- parse_data(data.file = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\"),                       sheet.data = 1,                       map.file = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\"),                       sheet.map = \"mapping\",                       software = \"Gen5\",                       convert.time = \"y = x * 24\", # convert days to hours                       calib.growth = \"y = x * 3.058\") # convert absorbance to OD values }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated with the ","title":"Extract relevant data from a raw data export file generated with the ","text":"Extract relevant data raw data export file generated \"Gen5\" \"Gen6\" software.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"parse_Gen5Gen6(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated with the ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated with the ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\") ) parsed <- parse_Gen5Gen6(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor Nivo\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victornivo(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"nivo_output.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_victornivo(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor X3\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victorx3(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"victorx3_output.txt\", package = \"QurvE\") ) parsed <- parse_victorx3(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"Generic plot function gcBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"","code":"# S3 method for drBootSpline plot(   x,   pch = 19,   colData = 1,   colSpline = \"black\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"x drBootSpline object created growth.drBootSpline stored within grofit drFit object created growth.workflow growth.drFit, respectively. pch (Numeric) Shape raw data symbols. colData (Numeric Character) Color used plot raw data. colSpline (Numeric Character) Color used plot splines. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether dose-response curves parameter plots shall shown within window. ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"plot dose-response spline fits bootstrapping operation.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = \"test\",         control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8, nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.905655849904476 StDev :  0.105397867542688  #> 90% CI:  0.902188260062322 90% CI:  0.909123439746631 #> 95% CI:  0.901524253496803 95% CI:  0.90978744631215 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.47355367112661  #> 90% CI:  1.46499125559481 90% CI:  1.48214582914109 #> 95% CI:  1.46335502851003 95% CI:  1.48379453758425 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.9056558     0.1053979        0.5401743      0.1095877 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.7322764           1.079035           0.699076           1.112236 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.473554                 1.07981                 1.94184 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                1.011893                 2.04115 plot(TestRun, combine = TRUE)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFit objects. — plot.drFit","title":"Generic plot function for drFit objects. — plot.drFit","text":"codeplot.drFit calls codeplot.drFitSpline group used dose-response analysis","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFit objects. — plot.drFit","text":"","code":"# S3 method for drFit plot(   x,   combine = TRUE,   names = NULL,   exclude.nm = NULL,   pch = 16,   cex.point = 2,   basesize = 15,   colors = NULL,   lwd = 0.7,   ec50line = TRUE,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   log.y = FALSE,   log.x = FALSE,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFit objects. — plot.drFit","text":"x object class drFit, created growth.drFit. combine (Logical) Combine dose-response analysis results conditions single plot (TRUE) (FALSE). names (String vector strings) Define conditions combine single plot (combine = TRUE). Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. exclude.nm (String vector strings) Define conditions exclude plot (combine = TRUE). Partial matches sample/group names accepted. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. basesize (Numeric) Base font size. colors (Numeric character) Define colors different conditions. lwd (Numeric) Line width individual splines. ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis. x.title (Character) Optional: Provide title x-axis. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? log.x (Logical) Log-transform x-axis plot (TRUE) (FALSE)? plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFit objects. — plot.drFit","text":"One plot per condition tested dose-response analysis single plot showing conditions control = growth.control(dr.method = \"spline\") used growth.drFit combine = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFit objects. — plot.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = \"s\",                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,                  control = growth.control(dr.parameter = \"mu.spline\")) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1570760     0.002776673  0.1514201  0.1627319 #> 2 Test2 FALSE FALSE       0     0.1134759     0.001953526  0.1094967  0.1174551 #>       yEC50      test model #> 1 0.3341237 mu.spline  W1.3 #> 2 0.2384557 mu.spline  W1.3  plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitFL objects. — plot.drFitfl","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"codedrFitfl calls plot.drFitFLModel group used dose-response analysis dr.method = \"model\"","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"","code":"# S3 method for drFitfl plot(   x,   ec50line = TRUE,   log = c(\"xy\"),   pch = 1,   broken = TRUE,   bp,   n.xbreaks,   n.ybreaks,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"x object class drFit, created growth.drFit. ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. pch (Numeric) Shape raw data symbols. broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. colSpline (Numeric character) Spline line colour. colData (Numeric character) Contour color raw data circles. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. lwd (Numeric) Line width individual splines. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"One plot per condition tested dose-response analysis (fl.drFit control = fl.control(dr.method = \"model\")).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = \"s\",              x_type = \"time\", norm_fl = TRUE,              dr.parameter = \"max_slope.spline\",              dr.method = \"model\",              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = control)  # Perform dose-response analysis with biosensor model drFitfl <- fl.drFit(flTable = res$flTable, control = control)  plot(drFitfl)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"Generic plot function drFitFLModel objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"","code":"# S3 method for drFitFLModel plot(   x,   ec50line = TRUE,   broken = TRUE,   bp,   n.xbreaks,   n.ybreaks,   log = c(\"xy\"),   pch = 1,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"x Object class drFitFLModel, created fl.drFitModel. ec50line (Logical) Show pointed horizontal vertical lines EC50 value (TRUE) (FALSE). broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input.#' @param pch (Numeric) Size raw data circles. log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. pch (Numeric) Symbol used plot data points. colSpline (Numeric Character) Color used plot splines. colData (Numeric Character) Color used plot raw data. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lwd (Numeric) Line width. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"plot biosensor dose-response model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = \"test\", control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.515 | yEC50: 3060 | fold change: 53.89 | leakiness: 111.5 #>  #>   print(summary(TestRun)) #>      yEC50    y.min    y.max       fc        K        n yEC50.orig   K.orig #> 1 3060.142 111.4973 6008.787 53.89175 0.515249 1.964765   3060.142 0.515249 #>   test #> 1   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitModel objects. — plot.drFitModel","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"Generic plot function drFitModel objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"","code":"# S3 method for drFitModel plot(   x,   type = c(\"confidence\", \"all\", \"bars\", \"none\", \"obs\", \"average\"),   ec50line = TRUE,   add = FALSE,   broken = TRUE,   bp,   gridsize = 200,   log = \"x\",   n.xbreaks,   n.ybreaks,   x.lim,   y.lim,   pch = 1,   cex.point,   cex.axis = 1,   cex.lab = 1.3,   col = 1,   lwd = 2,   lty = 2,   xlab,   ylab,   legend = TRUE,   legendText,   legendPos,   cex.legend = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"x object class drFitModel, created growth.drFitModel. type (Character) Specify plot data. currently 5 options: \"average\" (averages fitted curve(s); default), \"none\" (fitted curve(s)), \"obs\" (data points), \"\" (data points fitted curve(s)), \"bars\" (averages fitted curve(s) model-based standard errors (see Details)), \"confidence\" (confidence bands fitted curve(s)). ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). add (Logical) TRUE add already existing plot. broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. gridsize (Numeric) Number points grid used plotting fitted curves. log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. pch (Numeric) Symbol used plot data points. cex.point (Numeric) Size raw data points. cex.axis (Numeric) Font size axis annotations. cex.lab (Numeric) Font size axis titles. col (Logical vector colors) TRUE default colours used. FALSE (default) colors used. lwd (Numeric) Line width. lty (Numeric) Specify line type. xlab (Character) optional label x axis. ylab (Character) optional label y axis. legend (Logical) TRUE legend displayed. legendText (Character) Specify legend text (position upper right corner legend box). legendPos (Numeric) Vector length 2 giving position legend. cex.legend numeric specifying legend text size. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"plot dose-response model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = \"test\")  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper    yEC50      test #> e:1:50      4.121508       0.0906462   3.930261   4.312755 0.467906 mu.linfit #>        model #> e:1:50  W1.3 plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitSpline objects. — plot.drFitSpline","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"codeplot.drFitSpline generates spline fit plot response-parameter vs. concentration data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"","code":"# S3 method for drFitSpline plot(   x,   add = FALSE,   ec50line = TRUE,   log = \"\",   pch = 16,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"x object class drFitSpline, created growth.drFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.drBootSpline. ec50line (Logical) Show pointed horizontal vertical lines EC50 value (TRUE) (FALSE). log (\"x\", \"y\", \"xy\") Display x- y-axis logarithmic scale. pch (Numeric) Shape raw data symbols. colSpline (Numeric character) Spline line colour. colData (Numeric character) Contour color raw data circles. cex.point (Numeric) Size raw data symbols. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis. x.title (Character) Optional: Provide title x-axis. lwd (Numeric) Line width spline. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"plot nonparametric dose-response fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = \"test\",                      control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.59139596182715 yEC50 0.464902465384036 #> --> Original scale  #> xEC50 3.91059915485542 yEC50 0.464902465384036 #>  #>   print(summary(TestRun)) #>       EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.591396 0.4649025  3.910599  0.4649025   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"plot.dr_parameter gathers parameters results dose-response analysis compares chosen parameter condition column plot. Error bars represent 95% confidence interval (shown > 2 replicates).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"","code":"# S3 method for dr_parameter plot(   x,   param = c(\"EC50\", \"EC50.Estimate\", \"y.max\", \"y.min\", \"fc\", \"K\", \"n\", \"yEC50\",     \"drboot.meanEC50\", \"drboot.meanEC50y\", \"EC50.orig\", \"yEC50.orig\"),   names = NULL,   exclude.nm = NULL,   basesize = 12,   reference.nm = NULL,   label.size = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"x grofit, drFit, drTable, flFitRes object obtained growth.workflow, growth.drFit, fl.drFit, fl.workflow. param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'y.max', 'y.min', 'fc', 'K', 'n' fluorescence dose-response analyses dr.type = 'model' control argument, 'EC50', 'yEC50', 'drboot.meanEC50', 'drboot.meanEC50y'. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. basesize (Numeric) Base font size. reference.nm (Character) Name reference condition, parameter values normalized. Partially matching strings tolerated long can uniquely identify condition. label.size (Numeric) Font size sample labels x-axis. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"column plot comparing selected parameter dose-response analysis tested conditions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = \"s\",                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,             control = growth.control(dr.parameter = \"mu.spline\")) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      plot.dr_parameter(drFit, param = 'EC50')  # }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fluorescence and growth over time — plot.dual","title":"Compare fluorescence and growth over time — plot.dual","text":"plot.dual creates two-panel plot fluorescence growth values shown time, allowing identification , e.g., expression patterns different growth stages.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fluorescence and growth over time — plot.dual","text":"","code":"# S3 method for dual plot(   x,   fluorescence = c(\"fl\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y.growth = FALSE,   log.y.fl = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim.growth = NULL,   y.lim.fl = NULL,   x.lim = NULL,   x.title = NULL,   y.title.growth = NULL,   y.title.fl = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fluorescence and growth over time — plot.dual","text":"x flFit, flFitRes, grodata object created flFit, fl.workflow read_data fluorescence (Character) Indicate, type fluorescence data displayed. IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y.growth (Logical) Log-transform y-axis growth plot (TRUE) (FALSE)? log.y.fl (Logical) Log-transform y-axis fluorescence plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim.growth (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.fl (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence plot vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence growth plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.growth (Character) Optional: Provide title y-axis growth plot. y.title.fl (Character) Optional: Provide title y-axis fluorescence plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fluorescence and growth over time — plot.dual","text":"two-panel plot, showing raw fluorescence (fluorescence = \"fl\") normalized fluorescence (fluorescence = \"norm.fl\") time top panel, growth time bottom panel.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare fluorescence and growth over time — plot.dual","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot.dual(res, legend.ncol = 3, basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flBootSpline objects. — plot.flBootSpline","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"Generic plot function flBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"","code":"# S3 method for flBootSpline plot(   x,   pch = 1,   colData = 1,   deriv = TRUE,   colSpline = \"dodgerblue3\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"x Object class flBootSpline, created flBootSpline. pch (Numeric) Size raw data circles. colData (Numeric Character) Color used plot raw data. deriv (Logical) Show derivatives (.e., slope) time secondary plot (TRUE) (FALSE). colSpline (Numeric Character) Color used plot splines. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether growth curves parameter plots shall shown within window. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"single plot spline fits bootstrapping operation statistical distribution parameters combine = TRUE separate plots fits parameter distributions (combine = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"s\", x_type = \"time\",                        nboot.fl = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"plot.flFitLinear shows results linear regression visualizes raw data, data points included fit, tangent obtained linear regression, lag time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"","code":"# S3 method for flFitLinear plot(   x,   log = \"\",   which = c(\"fit\", \"diagnostics\", \"fit_diagnostics\"),   pch = 21,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   color = \"firebrick3\",   y.lim = NULL,   x.lim = NULL,   plot = TRUE,   export = FALSE,   height = ifelse(which == \"fit\", 7, 5),   width = ifelse(which == \"fit\", 9, 9),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"x flFittedLinear object created flFitLinear stored within flFitRes flFit object created fl.workflow flFit, respectively. log (\"x\" \"y\") Display x- y-axis logarithmic scale. (\"fit\" \"diagnostics\") Display either results linear fit raw data statistical evaluation linear regression. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Line width. color (Character string) Enter color either name (e.g., red, blue, coral3) via hexadecimal code (e.g., #AE4371, #CCFF00FF, #0066FFFF). full list colors available name can found http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"plot linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"l\", x_type = \"time\",                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different groups of samples into a single plot — plot.flFitRes","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"Visualize fluorescence, normalized fluorescence, spline fits multiple sample groups single plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"","code":"# S3 method for flFitRes plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   deriv = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )  # S3 method for flFit plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   deriv = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"x flFitRes, flFit, grodata object created fl.workflow containing fluorescence data. data.type (Character) Indicate, type fluorescence data displayed. IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? deriv (Logical) Show derivatives time separate panel plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using axisTicks(). Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis fluorescence curve plot. x.title (Character) Optional: Provide title x-axis fluorescence curve derivative plots. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"plot curves (nonparametric fits, raw fluorescence measurements, raw normalized fluorescence time) flFitRes object created fl.workflow, replicates combined group averages (mean = TRUE) (mean = FALSE). plot curves (raw fluorescence measurements raw normalized fluorescence time) flFit object flFit, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"","code":"# \\donttest{ # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot(res, legend.ncol = 3, basesize = 15)  # }  # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = fl.control(fit.opt = \"s\", suppress.messages = TRUE,              x_type = \"time\", norm_fl = TRUE))  plot(res, legend.ncol = 3, basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flFitSpline objects. — plot.flFitSpline","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"plot.flFitSpline generates spline fit plot single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"","code":"# S3 method for flFitSpline plot(   x,   add = FALSE,   raw = TRUE,   slope = TRUE,   deriv = TRUE,   spline = TRUE,   log.y = FALSE,   basesize = 16,   pch = 1,   colData = 1,   colSpline = \"dodgerblue3\",   cex.point = 2,   lwd = 0.7,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   n.ybreaks = 6,   y.title = NULL,   x.title = NULL,   y.title.deriv = NULL,   plot = TRUE,   export = FALSE,   width = 8,   height = ifelse(deriv == TRUE, 8, 6),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"x Object class flFitSpline, created flFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.flBootSpline. raw (Logical) Display raw growth circles (TRUE) (FALSE). slope (Logical) Show slope maximum slope (TRUE) (FALSE). deriv (Logical) Show derivative (.e., slope) time secondary plot (TRUE) (FALSE). spline (Logical) add = TRUE: add current spline existing plot (FALSE). log.y (Logical) Log-transform y-axis (TRUE) (FALSE). basesize (Numeric) Base font size. pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. colSpline (Numeric character) Spline line colour. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using axisTicks(). Thus, final number breaks can deviate user input. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). width (Numeric) Width exported image inches. height (Numeric) Height exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"plot nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"s\", x_type = \"time\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"Generic plot function gcBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"","code":"# S3 method for gcBootSpline plot(   x,   pch = 1,   colData = 1,   deriv = TRUE,   colSpline = \"dodgerblue3\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"x object class gcBootSpline, created growth.gcBootSpline. pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. deriv (Logical) Show derivatives (.e., slope) time secondary plot (TRUE) (FALSE). colSpline (Numeric character) Spline line colour. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether growth curves parameter plots shall shown within window. ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"single plot spline growth fits bootstrapping operation statistical distribution growth parameters combine = TRUE separate plots growth fits parameter distributions (combine = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = \"TestFit\",               control = growth.control(fit.opt = \"s\", nboot.gc = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"plot.gcFitLinear shows results linear regression log-transformed data visualizes raw data, data points included fit, tangent obtained linear regression, lag time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"","code":"# S3 method for gcFitLinear plot(   x,   log = \"y\",   which = c(\"fit\", \"diagnostics\", \"fit_diagnostics\"),   pch = 21,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   color = \"firebrick3\",   y.lim = NULL,   x.lim = NULL,   plot = TRUE,   export = FALSE,   height = ifelse(which == \"fit\", 7, 5),   width = ifelse(which == \"fit\", 9, 9),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"x gcFittedLinear object created growth.gcFitLinear stored within grofit gcFit object created growth.workflow growth.gcFit, respectively. log (\"x\" \"y\") Display x- y-axis logarithmic scale. (\"fit\" \"diagnostics\") Display either results linear fit raw data statistical evaluation linear regression. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Line width. color (Character string) Enter color either name (e.g., red, blue, coral3) via hexadecimal code (e.g., #AE4371, #CCFF00FF, #0066FFFF). full list colors available name can found http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"plot linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"l\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFitModel objects. — plot.gcFitModel","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"Plot results parametric model fit growth vs. time data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"","code":"# S3 method for gcFitModel plot(   x,   raw = TRUE,   pch = 1,   colData = 1,   equation = TRUE,   eq.size = 1,   colModel = \"forestgreen\",   basesize = 16,   cex.point = 2,   lwd = 0.7,   x.lim = NULL,   y.lim = NULL,   n.ybreaks = 6,   plot = TRUE,   export = FALSE,   height = 6,   width = 8,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"x gcFittedModel object created growth.gcFitModel stored within grofit gcFit object created growth.workflow growth.gcFit, respectively. raw (Logical) Show raw data within plot (TRUE) (FALSE). pch (Numeric) Symbol used plot data points. colData (Numeric Character) Color used plot raw data. equation (Logical) Show equation fitted model within plot (TRUE) (FALSE). eq.size (Numeric) Provide value scale size displayed equation. colModel (Numeric Character) Color used plot fitted model. basesize (Numeric) Base font size. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated ggplot2 plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"plot parametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"m\")) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  plot(TestFit, basesize = 18, eq.size = 1.5) #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"codeplot.gcFitSpline generates spline fit plot single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"","code":"# S3 method for gcFitSpline plot(   x,   add = FALSE,   raw = TRUE,   slope = TRUE,   deriv = TRUE,   spline = TRUE,   log.y = TRUE,   pch = 1,   colData = 1,   colSpline = \"dodgerblue3\",   basesize = 16,   cex.point = 2,   lwd = 0.7,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   n.ybreaks = 6,   y.title = NULL,   x.title = NULL,   y.title.deriv = NULL,   plot = TRUE,   export = FALSE,   width = 8,   height = ifelse(deriv == TRUE, 8, 6),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"x object class gcFitSpline, created growth.gcFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.gcBootSpline. raw (Logical) Display raw growth circles (TRUE) (FALSE). slope (Logical) Show slope maximum growth rate (TRUE) (FALSE). deriv (Logical) Show derivative (.e., slope) time secondary plot (TRUE) (FALSE). spline (Logical) add = TRUE: add current spline existing plot (FALSE). log.y (Logical) Log-transform y-axis (TRUE) (FALSE). pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. colSpline (Numeric character) Spline line colour. basesize (Numeric) Base font size. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). width (Numeric) Width exported image inches. height (Numeric) Height exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot (add = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"plot nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform spline fit TestFit <- growth.gcFitSpline(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"s\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a matrix of growth curve panels — plot.grid","title":"Plot a matrix of growth curve panels — plot.grid","text":"plot.grid takes grofit flFitRes object returns facet grid individual growth fluorescence plots","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a matrix of growth curve panels — plot.grid","text":"","code":"# S3 method for grid plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   param = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu2.linfit\",     \"lambda2.linfit\", \"mu.model\", \"lambda.model\", \"A.model\", \"A.orig.model\", \"dY.model\",     \"dY.orig.model\", \"tD.linfit\", \"tD2.linfit\", \"tD.spline\", \"tD2.spline\", \"mu.spline\",     \"lambda.spline\", \"A.spline\", \"dY.spline\", \"integral.spline\", \"mu2.spline\",     \"lambda2.spline\", \"mu.bt\", \"lambda.bt\", \"A.bt\", \"integral.bt\", \"max_slope.linfit\",     \"max_slope.spline\"),   pal = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\", \"Cyan\",     \"Brown\", \"Mint\"),   invert.pal = FALSE,   IDs = NULL,   sort_by_ID = FALSE,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   mean = TRUE,   log.y = TRUE,   n.ybreaks = 6,   sort_by_conc = TRUE,   nrow = NULL,   basesize = 20,   y.lim = NULL,   x.lim = NULL,   legend.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 1.1,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a matrix of growth curve panels — plot.grid","text":"x grofit flFitRes object created growth.workflow codefl.workflow containing spline fits. data.type (Character) Plot either raw data (data.type = \"raw\") spline fit results param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'mu.linfit', 'lambda.linfit', 'dY.linfit', '.linfit', 'mu.model', 'lambda.model', '.model', 'mu.spline', 'lambda.spline', '.spline', 'dY.spline', 'integral.spline', 'mu.bt', 'lambda.bt', '.bt', 'integral.bt' pal (Character string) Choose one 'Green',   'Orange',  'Purple',  'Magenta', 'Grey', 'Blue', 'Grey', 'Red', 'Cyan', 'Brown', 'Mint' visualize value parameter chosen param sample condition. invert.pal (Logical) Shall colors chosen pal inverted (TRUE) FALSE? IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. order strings within vector defines order samples within grid. sort_by_ID (Logical) Shall samples/conditions ordered entered IDs (TRUE) alphabetically (FALSE)? names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)?#' n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. sort_by_conc (Logical) Shall samples/conditions sorted concentrations rows groups columns? nrow (Numeric) Defines number rows grid sort_by_conc FALSE. basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. legend.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds color scale applied param vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. lwd (Numeric) Line width individual plots. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a matrix of growth curve panels — plot.grid","text":"plot matrix growth curves (raw measurements nonparametric fits) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a matrix of growth curve panels — plot.grid","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        suppress.messages = TRUE,                        parallelize = FALSE)   plot.grid(res, param = \"mu.spline\")"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"plot.grodata calls plot.grofit plot.flFitRes based chosen data.type, respectively.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"","code":"# S3 method for grodata plot(   x,   data.type = c(\"growth\", \"fl\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"x grodata object created read_data parse_data. data.type (Character) Plot either raw growth (data.type = \"growth\"), raw fluorescence (data.type = \"fl\"), fluorescence normalized growth (data.type = \"norm.fl\"). IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"plot growth curves (raw measurements) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"","code":"# Create random growth data sets rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  # Create dataframe with both data sets and a single time vector time <- as.data.frame(matrix(t(c(\"Time\",NA,NA, rnd.data1$time[1,])),nrow=1),              stringsAsFactors=FALSE) colnames(time) <- colnames(rnd.data1$data) data <- rbind(time, rnd.data1$data, rnd.data2$data)   # Create a grodata object grodata <- read_data(data.growth = data, data.format = \"row\") #> Sample data are stored in rows. If they are stored in column format, please run read_data() with data.format = 'col'.  plot(grodata, exclude.nm = \"Test1\", legend.ncol = 4)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"plot.grofit extracts spline fits subset samples grofit object calculates averages standard deviations conditions replicates combines single plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"","code":"# S3 method for grofit plot(   x,   ...,   data.type = c(\"spline\", \"raw\"),   IDs = NULL,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   mean = TRUE,   log.y = TRUE,   deriv = TRUE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"x grofit object created growth.workflow containing spline fits. ... (optional) Additional grofit objects created separate workflows joint plotting single graph. data.type (Character) Plot either raw data (data.type = \"raw\") spline fit results IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? deriv (Logical) Show derivatives time separate panel plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"plot growth curves (raw measurements nonparametric fits) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        suppress.messages = TRUE,                        parallelize = FALSE)   plot(res, names = \"Test1\", legend.ncol = 4) # Show only samples for condition \"Test1\""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare growth parameters between samples or conditions — plot.parameter","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"plot.parameter gathers physiological parameters results growth fit analysis compares chosen parameter sample condition column plot. Error bars represent 95% confidence interval (shown > 2 replicates).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"","code":"# S3 method for parameter plot(   x,   param = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu2.linfit\",     \"lambda2.linfit\", \"mu.model\", \"lambda.model\", \"A.model\", \"A.orig.model\", \"dY.model\",     \"dY.orig.model\", \"tD.linfit\", \"tD2.linfit\", \"tD.spline\", \"tD2.spline\", \"mu.spline\",     \"lambda.spline\", \"A.spline\", \"dY.spline\", \"integral.spline\", \"mu2.spline\",     \"lambda2.spline\", \"mu.bt\", \"lambda.bt\", \"A.bt\", \"integral.bt\", \"max_slope.linfit\",     \"max_slope.spline\"),   IDs = NULL,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   reference.nm = NULL,   reference.conc = NULL,   order_by_conc = FALSE,   colors = NULL,   basesize = 12,   label.size = NULL,   shape.size = 2.5,   legend.position = \"right\",   legend.ncol = 1,   plot = TRUE,   export = FALSE,   height = 7,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"x grofit, gcFit, gcTable object obtained growth.workflow growth.gcFit. param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'mu.linfit', 'lambda.linfit', 'dY.linfit', '.linfit', 'mu.model', 'lambda.model', '.model', 'mu.spline', 'lambda.spline', '.spline', 'dY.spline', 'integral.spline', 'mu.bt', 'lambda.bt', '.bt', 'integral.bt' IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. reference.nm (Character) Name reference condition, parameter values normalized. Partially matching strings tolerated long can uniquely identify condition. reference.conc (Numeric) Concentration reference condition, parameter values normalized. order_by_conc (Logical) Shall columns sorted order ascending concentrations (TRUE) sample groups FALSE? colors (vector strings) Define color palette used draw columns. NULL, default palettes chosen. Note: number provided colors least match number groups. basesize (Numeric) Base font size. label.size (Numeric) Font size sample labels x-axis. shape.size (Numeric) size symbols indicating replicate values. Default: 2.5 legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"column plot comparing selected growth parameter tested conditions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)   plot.parameter(res,                param = \"mu.spline\",                legend.ncol = 4,                legend.position = \"bottom\",                basesize = 15,                label.size = 11)"},{"path":"https://nicwir.github.io/QurvE/reference/QurvE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","title":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","text":"High-throughput analysis growth curves fluorescence data using three methods: linear regression, growth model fitting, smooth spline fit. Analysis dose-response relationships via smoothing splines dose-response models. Complete data analysis workflows can executed single step via user-friendly wrapper functions. results workflows summarized detailed reports well intuitively navigable 'R' data containers. 'shiny' application provides access features without requiring programming knowledge.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/QurvE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","text":"Maintainer: Nicolas T. Wirth mail.nicowirth@gmail.com (ORCID) [copyright holder] Authors: Jonathan Funk funk.jonathan21@gmail.com (Co-developer shiny app.) contributors: Matthias Kahm (Author 'grofit' package, whose general data structure adopted QurvE.) [contributor] Maik Kschischo (Author 'grofit' package, whose general data structure adopted QurvE.) [contributor] Thomas Petzoldt thomas.petzoldt@tu-dresden.de (ORCID) (Creator package 'growthrates', whose function calculating linear regressions served template QurvE.) [contributor] Andrew Stein andy.stein@gmail.com (Creator 'xgxr' package QurvE adopted code plot axis ticks log10 scale.) [contributor] Michael W. Kearney kearneymw@missouri.edu (Creator 'tfse' package QurvE adopted match_arg function.) [contributor] Santiago . Hurtado santih@carina.fcaglp.unlp.edu.ar (Creator 'RobustLinearReg' package QurvE adopted Theil Sehn Regression method.) [contributor] Mark Heckmann (Creator 'zipFastener' function; source: https://ryouready.wordpress.com/2009/03/27/r-zip-fastener--two-data-frames-combining-rows--columns--two-dataframes---alternating-manner/) [contributor] Nicholas Hamilton (Creator 'colFmt' function.) [contributor] Evan Friedland (Creator 'inflect' function.) [contributor] Heather Turner (Creator 'base_breaks' function.) [contributor] Georgi N. Boshnakov georgi.boshnakov@manchester.ac.uk (Creator 'gbRd' package functions used display function help pages within shiny app.) [contributor]","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":null,"dir":"Reference","previous_headings":"","what":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"function calls baranyi function generate curves time zero t adds random noise x- y-axes. three growth parameters given input values slightly changed produce different growth curves. resulting datasets can used test growth.workflow function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"","code":"rdm.data(d, y0 = 0.05, tmax = 24, mu = 0.6, lambda = 5, A = 3, label = \"Test1\")"},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"d Numeric value, number data sets. d vector, first entry used. y0 Numeric value, start growth. t vector, first entry used. tmax Numeric value, number time points per data set. t vector, first entry used. mu Numeric value, maximum slope. mu vector, first entry used. lambda Numeric value, lag-phase. lambda vector, first entry used. Numeric value, maximum growth. vector, first entry used. label Character string, condition label  label vector, first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"list containing simulated data three tests (e.g., 'organisms'): time numeric matrix size dxt, row represent time points growth data simulated stored row data. data data.frame size dx(3+t), 1. column, character experiment identifier; 2. column: Replicate number; 3. column: concentration substrate compound experiment obtained; 4.-(3+t). column: growth data corresponding time points time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # \\donttest{ # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,              control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1593246     0.002542702  0.1541452  0.1645039 #> 2 Test2 FALSE FALSE       0     0.1128245     0.001879372  0.1089964  0.1166527 #>       yEC50      test model #> 1 0.3311379 mu.spline  W1.3 #> 2 0.2381912 mu.spline  W1.3 plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read growth and fluorescence data in table format — read_data","title":"Read growth and fluorescence data in table format — read_data","text":"read_data reads table files R dataframe objects containing growth fluorescence data extracts datasets, sample group information, performs blank correction, applies data transformation (calibration), combines technical replicates.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read growth and fluorescence data in table format — read_data","text":"","code":"read_data(   data.growth = NA,   data.fl = NA,   data.fl2 = NA,   data.format = \"col\",   csvsep = \";\",   dec = \".\",   csvsep.fl = \";\",   dec.fl = \".\",   csvsep.fl2 = \";\",   dec.fl2 = \".\",   sheet.growth = 1,   sheet.fl = 1,   sheet.fl2 = 1,   fl.normtype = c(\"growth\", \"fl2\"),   subtract.blank = TRUE,   convert.time = NULL,   calib.growth = NULL,   calib.fl = NULL,   calib.fl2 = NULL )"},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read growth and fluorescence data in table format — read_data","text":"data.growth R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing growth data. first three table rows contain sample description replicate number (optional: followed letter indicate technical replicates) concentration value (optional) data.fl (optional) R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing fluorescence data. Table layout must mimic data.growth. data.fl2 (optional) R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing measurements second fluorescence channel (used normalize fluorescence data). Table layout must mimic data.growth. data.format (Character) \"col\" samples columns, \"row\" samples rows. Default: \"col\" csvsep (Character) separator used CSV file storing growth data (ignored file types). Default: \";\" dec (Character) decimal separator used CSV, TSV TXT file storing growth data. Default: \".\" csvsep.fl, csvsep.fl2 (Character) separator used CSV file storing fluorescence data (ignored file types). Default: \";\" dec.fl, dec.fl2 (Character) decimal separator used CSV, TSV TXT file storing fluorescence data. Default: \".\" sheet.growth, sheet.fl, sheet.fl2 (Numeric Character) Number name sheet respective data type XLS XLSX files (optional). fl.normtype (Character string) Normalize fluorescence values either diving 'growth' fluorescence2 values ('fl2'). subtract.blank (Logical) Shall blank values subtracted values within experiment (TRUE, default) (FALSE). convert.time (NULL string) Convert time values formula provided form 'y = function(x)'. example: convert.time = 'y = 24 * x' calib.growth, calib.fl, calib.fl2 (Character NULL) Provide equation form 'y = function(x)' (example: 'y = x^2 * 0.3 - 0.5') convert growth fluorescence values. can used , e.g., convert plate reader absorbance values OD600 fluorescence intensity molecule concentrations. Caution!: utilizing calibration, carefully consider whether blanks subtracted determine calibration selecting input subtract.blank = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read growth and fluorescence data in table format — read_data","text":"R list object class grodata containing time matrix, dataframes growth fluorescence data (applicable), experimental design table. grodata object can directly used run growth.workflow/fl.workflow , together growth.control/fl.control object, growth.gcFit/flFit. time Matrix raw time values extracted data.growth. growth Dataframe raw growth values sample identifiers extracted data.growth. fluorescence Dataframe raw fluorescence values sample identifiers extracted data.fl. NA, fluorescence data provided. norm.fluorescence fluorescence data divided growth values. NA, fluorescence data provided. expdesign Experimental design table created first three identifier rows/columns (see argument data.format) (data.growth.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read growth and fluorescence data in table format — read_data","text":"","code":"# Load CSV file containing only growth data data_growth <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",                          package = \"QurvE\"), csvsep = \";\" ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Load XLSX file containing both growth and fluorescence data data_growth_fl <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                             sheet.growth = \"OD\",                             data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                             sheet.fl = 2) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'."},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"read_file automatically detects format file provided filename calls appropriate function read table file.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"","code":"read_file(filename, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"filename (Character) Name path table file read. Can type CSV, XLS, XLSX, TSV, TXT. csvsep (Character) separator used CSV file (ignored file types). dec (Character) decimal separator used CSV, TSV TXT files. sheet (Numeric Character) Number name sheet XLS XLSX files (optional). Default: \";\"","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"dataframe object headers first row.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"","code":"input <- read_file(filename = system.file(\"2-FMA_toxicity.csv\", package = \"QurvE\"), csvsep = \";\" )"},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny QurvE App — run_app","title":"Run Shiny QurvE App — run_app","text":"Run Shiny QurvE App","code":""},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny QurvE App — run_app","text":"","code":"run_app()"},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Shiny QurvE App — run_app","text":"Launches browser shiny app","code":""},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Shiny QurvE App — run_app","text":"","code":"if(interactive()){ # Run the app run_app() }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drBootSpline objects — summary.drBootSpline","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"Generic summary function drBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"","code":"# S3 method for drBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"object object class drBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"dataframe statistical parameters extracted dose-response bootstrapping analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = 'test',         control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8, nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.921383478180529 StDev :  0.0734170184403769  #> 90% CI:  0.918968058273841 90% CI:  0.923798898087218 #> 95% CI:  0.918505531057667 95% CI:  0.924261425303392 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.512764340953  #> 90% CI:  1.50670228409675 90% CI:  1.5188410579201 #> 95% CI:  1.50554313415737 95% CI:  1.52000635993378 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.9213835    0.07341702        0.5180385      0.0877263 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.8006125           1.042154          0.7774861           1.065281 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.512764                1.226904                1.835319 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                1.175995                1.901654"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFit objects — summary.drFit","title":"Generic summary function for drFit objects — summary.drFit","text":"Generic summary function drFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFit objects — summary.drFit","text":"","code":"# S3 method for drFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFit objects — summary.drFit","text":"object object class drFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFit objects — summary.drFit","text":"dataframe parameters samples extracted dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFit objects — summary.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,                  control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1641071     0.003359743  0.1572456  0.1709686 #> 2 Test2 FALSE FALSE       0     0.1142823     0.001785143  0.1106461  0.1179185 #>       yEC50      test model #> 1 0.3260680 mu.spline  LL.5 #> 2 0.2383971 mu.spline  W1.3 # }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitfl objects — summary.drFitfl","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"Generic summary function drFitfl objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"","code":"# S3 method for drFitfl summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"object object class drFitfl ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"dataframe parameters samples extracted dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = 's',              x_type = 'time', norm_fl = TRUE,              dr.parameter = 'max_slope.spline',              dr.method = 'model',              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = control)  # Perform dose-response analysis with biosensor model drFitfl <- fl.drFit(flTable = res$flTable, control = control)  summary(drFitfl) #>             Test log.x log.y    yEC50    y.min    y.max        fc          K #> 1 pSEVA634rκ∙GFP FALSE FALSE 205.9582 64.17578 347.7406  5.418564 0.01018009 #> 2  pSEVA634r∙GFP FALSE FALSE 190.4522 30.77274 350.1317 11.377983 0.04563582 #> 3   pSEVA634∙GFP FALSE FALSE 446.4530 92.26689 800.6390  8.677425 0.03285861 #>           n yEC50.orig     K.orig             test #> 1 0.9764881   205.9582 0.01018009 max_slope.spline #> 2 2.7157933   190.4522 0.04563582 max_slope.spline #> 3 1.1757144   446.4530 0.03285861 max_slope.spline"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"Generic summary function drFitFLModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"","code":"# S3 method for drFitFLModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"object object class drFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"dataframe biosensor response parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = 'test', control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.511 | yEC50: 3096 | fold change: 33.31 | leakiness: 180.5 #>  #>   print(summary(TestRun)) #>      yEC50    y.min    y.max       fc         K        n yEC50.orig    K.orig #> 1 3096.136 180.4841 6011.788 33.30924 0.5110607 2.048794   3096.136 0.5110607 #>   test #> 1   NA"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitModel objects — summary.drFitModel","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"Generic summary function drFitModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"","code":"# S3 method for drFitModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"object object class drFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"dataframe parameters extracted dose-response analysis single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = 'test')  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper     yEC50      test #> e:1:50      4.063593      0.07288019    3.90983   4.217357 0.4706629 mu.linfit #>        model #> e:1:50  W1.3"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitSpline objects — summary.drFitSpline","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"Generic summary function drFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"","code":"# S3 method for drFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"object object class drFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"dataframe parameters extracted dose-response analysis single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = 'test',               control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.62500009978428 yEC50 0.476158471871305 #> --> Original scale  #> xEC50 4.0784195439265 yEC50 0.476158471871305 #>  #>   print(summary(TestRun)) #>    EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.625 0.4761585   4.07842  0.4761585   NA"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flBootSpline objects — summary.flBootSpline","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"Generic summary function flBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"","code":"# S3 method for flBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"object object class flBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"dataframe statistical parameters extracted dose-response bootstrapping analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time',                        nboot.fl = 50))  summary(TestFit) #>       max_slope.bt        lambda.bt             A.bt            dY.bt #> 1 242.980631060435 15.0221474954768 7560.85417130307 6034.99219837899 #>        integral.bt stdmax_slope.bt      stdlambda.bt          stdA.bt #> 1 149301.213515551 2.7734320723842 0.281696616869246 54.8748388684145 #>          stddY.bt   stdintegral.bt reliable_fit.bt    ci90.mu.bt.lo #> 1 87.345612976255 2789.58175655828            TRUE 238.418335301363 #>      ci90.mu.bt.up ci90.lambda.bt.lo ci90.lambda.bt.up     ci90.A.bt.lo #> 1 247.542926819507  14.5587565607269  15.4855384302267 7470.58506136453 #>       ci90.A.bt.up ci90.integral.bt.lo ci90.integral.bt.up    ci95.mu.bt.lo #> 1 7651.12328124161    144712.351526013    153890.075505089 237.544704198562 #>      ci95.mu.bt.up ci95.lambda.bt.lo ci95.lambda.bt.up     ci95.A.bt.lo #> 1 248.416557922308   14.470022126413  15.5742728645405 7453.29948712097 #>       ci95.A.bt.up ci95.integral.bt.lo ci95.integral.bt.up #> 1 7668.40885548516    143833.633272697    154768.793758405"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFit objects — summary.flFit","title":"Generic summary function for flFit objects — summary.flFit","text":"Generic summary function flFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFit objects — summary.flFit","text":"","code":"# S3 method for flFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFit objects — summary.flFit","text":"object object class flFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFit objects — summary.flFit","text":"dataframe parameters extracted fits workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFit objects — summary.flFit","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = fl.control(fit.opt = 's', suppress.messages = TRUE,              x_type = 'time', norm_fl = TRUE, nboot.fl = 20))  summary(res) #>            TestId AddId concentration reliability_tag log.x.spline log.y.spline #> 1    pSEVA634∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 2   pSEVA634r∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 3  pSEVA634rκ∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 4    pSEVA634∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 5   pSEVA634r∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 6  pSEVA634rκ∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 7    pSEVA634∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 8   pSEVA634r∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 9  pSEVA634rκ∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 10   pSEVA634∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 11  pSEVA634r∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 12 pSEVA634rκ∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 13   pSEVA634∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 14  pSEVA634r∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 15 pSEVA634rκ∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 16   pSEVA634∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 17  pSEVA634r∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 18 pSEVA634rκ∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 19   pSEVA634∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 20  pSEVA634r∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 21 pSEVA634rκ∙GFP  <NA>             1            TRUE        FALSE        FALSE #>    log.x.lin log.y.lin nboot.fl max_slope.linfit lambda.linfit dY.linfit #> 1      FALSE     FALSE       20                0          <NA>      <NA> #> 2      FALSE     FALSE       20                0          <NA>      <NA> #> 3      FALSE     FALSE       20                0          <NA>      <NA> #> 4      FALSE     FALSE       20                0          <NA>      <NA> #> 5      FALSE     FALSE       20                0          <NA>      <NA> #> 6      FALSE     FALSE       20                0          <NA>      <NA> #> 7      FALSE     FALSE       20                0          <NA>      <NA> #> 8      FALSE     FALSE       20                0          <NA>      <NA> #> 9      FALSE     FALSE       20                0          <NA>      <NA> #> 10     FALSE     FALSE       20                0          <NA>      <NA> #> 11     FALSE     FALSE       20                0          <NA>      <NA> #> 12     FALSE     FALSE       20                0          <NA>      <NA> #> 13     FALSE     FALSE       20                0          <NA>      <NA> #> 14     FALSE     FALSE       20                0          <NA>      <NA> #> 15     FALSE     FALSE       20                0          <NA>      <NA> #> 16     FALSE     FALSE       20                0          <NA>      <NA> #> 17     FALSE     FALSE       20                0          <NA>      <NA> #> 18     FALSE     FALSE       20                0          <NA>      <NA> #> 19     FALSE     FALSE       20                0          <NA>      <NA> #> 20     FALSE     FALSE       20                0          <NA>      <NA> #> 21     FALSE     FALSE       20                0          <NA>      <NA> #>    A.linfit x.mu.start.linfit x.mu.end.linfit r2mu.linfit reliable_fit.linfit #> 1      <NA>              <NA>            <NA>        <NA>               FALSE #> 2      <NA>              <NA>            <NA>        <NA>               FALSE #> 3      <NA>              <NA>            <NA>        <NA>               FALSE #> 4      <NA>              <NA>            <NA>        <NA>               FALSE #> 5      <NA>              <NA>            <NA>        <NA>               FALSE #> 6      <NA>              <NA>            <NA>        <NA>               FALSE #> 7      <NA>              <NA>            <NA>        <NA>               FALSE #> 8      <NA>              <NA>            <NA>        <NA>               FALSE #> 9      <NA>              <NA>            <NA>        <NA>               FALSE #> 10     <NA>              <NA>            <NA>        <NA>               FALSE #> 11     <NA>              <NA>            <NA>        <NA>               FALSE #> 12     <NA>              <NA>            <NA>        <NA>               FALSE #> 13     <NA>              <NA>            <NA>        <NA>               FALSE #> 14     <NA>              <NA>            <NA>        <NA>               FALSE #> 15     <NA>              <NA>            <NA>        <NA>               FALSE #> 16     <NA>              <NA>            <NA>        <NA>               FALSE #> 17     <NA>              <NA>            <NA>        <NA>               FALSE #> 18     <NA>              <NA>            <NA>        <NA>               FALSE #> 19     <NA>              <NA>            <NA>        <NA>               FALSE #> 20     <NA>              <NA>            <NA>        <NA>               FALSE #> 21     <NA>              <NA>            <NA>        <NA>               FALSE #>    max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1               <NA>               <NA>             <NA>         <NA> #> 2               <NA>               <NA>             <NA>         <NA> #> 3               <NA>               <NA>             <NA>         <NA> #> 4               <NA>               <NA>             <NA>         <NA> #> 5               <NA>               <NA>             <NA>         <NA> #> 6               <NA>               <NA>             <NA>         <NA> #> 7               <NA>               <NA>             <NA>         <NA> #> 8               <NA>               <NA>             <NA>         <NA> #> 9               <NA>               <NA>             <NA>         <NA> #> 10              <NA>               <NA>             <NA>         <NA> #> 11              <NA>               <NA>             <NA>         <NA> #> 12              <NA>               <NA>             <NA>         <NA> #> 13              <NA>               <NA>             <NA>         <NA> #> 14              <NA>               <NA>             <NA>         <NA> #> 15              <NA>               <NA>             <NA>         <NA> #> 16              <NA>               <NA>             <NA>         <NA> #> 17              <NA>               <NA>             <NA>         <NA> #> 18              <NA>               <NA>             <NA>         <NA> #> 19              <NA>               <NA>             <NA>         <NA> #> 20              <NA>               <NA>             <NA>         <NA> #> 21              <NA>               <NA>             <NA>         <NA> #>    reliable_fit2.linfit max_slope.spline x.max.spline     lambda.spline #> 1                 FALSE 92.2668917228847         20.5  15.5467166096294 #> 2                 FALSE 30.7727385498294           20  31.2872267087641 #> 3                 FALSE 64.1757831646195           16  20.8131240327289 #> 4                 FALSE 242.557704041626         23.5   14.982628746023 #> 5                 FALSE 64.6529094536605           19  21.6712998092256 #> 6                 FALSE 205.579719130273           18  12.5662904914231 #> 7                 FALSE 509.394721871828         21.5  6.95952698278091 #> 8                 FALSE 204.031623957349         17.5  13.4360564669416 #> 9                 FALSE 290.961299939404           13  4.67379381987626 #> 10                FALSE 670.985334314906            6 0.373248436531125 #> 11                FALSE 327.194544214636           17  9.86802427129631 #> 12                FALSE  335.24358478568         17.5  3.65080407904796 #> 13                FALSE 728.625260083634          6.5 0.553816578577824 #> 14                FALSE 346.268113254507         16.5  9.75821807365783 #> 15                FALSE 320.246598452139         17.5  3.21350390586807 #> 16                FALSE  774.05398642078          5.5 0.246732777852533 #> 17                FALSE 337.909403917534         16.5  8.08916482172041 #> 18                FALSE 351.643501664612           18  4.84484452250892 #> 19                FALSE 779.134078966909            6 0.462268482214904 #> 20                FALSE 353.185039298395         16.5   9.5717850859864 #> 21                FALSE 338.826806405161           18  5.01597033523556 #>    max_slope2.spline x.max2.spline lambda2.spline        y0.spline #> 1               <NA>          <NA>           <NA>  1291.4242870252 #> 2               <NA>          <NA>           <NA> 1188.27831547782 #> 3               <NA>          <NA>           <NA> 1565.59217809736 #> 4               <NA>          <NA>           <NA> 1519.80363776351 #> 5               <NA>          <NA>           <NA>  1255.7213080438 #> 6               <NA>          <NA>           <NA> 1624.15289883901 #> 7               <NA>          <NA>           <NA> 1132.18524639308 #> 8               <NA>          <NA>           <NA> 1405.71652864703 #> 9               <NA>          <NA>           <NA> 1468.52438340082 #> 10              <NA>          <NA>           <NA> 1209.47395589045 #> 11              <NA>          <NA>           <NA> 1187.83879461914 #> 12              <NA>          <NA>           <NA> 1467.93981010311 #> 13              <NA>          <NA>           <NA> 891.795404947046 #> 14              <NA>          <NA>           <NA> 1282.77700477438 #> 15              <NA>          <NA>           <NA> 1542.64869773804 #> 16              <NA>          <NA>           <NA> 1132.44043950227 #> 17              <NA>          <NA>           <NA> 862.662992687727 #> 18              <NA>          <NA>           <NA> 1602.42470098365 #> 19              <NA>          <NA>           <NA> 1017.04362101536 #> 20              <NA>          <NA>           <NA>  1323.6959493112 #> 21              <NA>          <NA>           <NA> 1707.52183129309 #>            A.spline        dY.spline  integral.spline reliable_fit.spline #> 1   3427.1255242313  2135.7012372061  82881.406474157                TRUE #> 2  1470.99207749982 282.713762021994 43222.9360971386                TRUE #> 3  2196.18856426073 630.596386163366 67033.6678589485                TRUE #> 4  7592.80063751346 6072.99699974995 151370.675832012                TRUE #> 5  2384.30375521349 1128.58244716969 58249.0814015737                TRUE #> 6  4820.28715109276 3196.13425225375 132414.081549265                TRUE #> 7  17121.2144379564 15989.0291915634 367233.851934483                TRUE #> 8    5206.543176868 3800.82664822097 120525.231431367                TRUE #> 9  7768.18866992603 6299.66428652521  223919.42858498                TRUE #> 10 20079.0095008516 18869.5355449612 490254.828661569                TRUE #> 11 6840.37784263295 5652.53904801381 169914.301957325                TRUE #> 12 9191.86346478591  7723.9236546828 269744.222628614                TRUE #> 13  20481.097768094  19589.302363147 497122.375105375                TRUE #> 14 7000.84532046262 5718.06831568824 179100.135589319                TRUE #> 15 9006.21056404733 7463.56186630929 267724.576457373                TRUE #> 16 20704.0909872879 19571.6505477857 520199.730690857                TRUE #> 17 6952.68659445902 6090.02360177129 178120.140852737                TRUE #> 18 9322.62835009364 7720.20364910999  273698.19440202                TRUE #> 19  19774.702139564 18757.6585185487 508722.732093212                TRUE #> 20 7189.59680355244 5865.90085424124 182547.707805716                TRUE #> 21 9258.53106887529 7551.00923758219 271383.083788705                TRUE #>    reliable_fit2.spline smooth.spline     max_slope.bt         lambda.bt #> 1                 FALSE          0.75  92.130021210824  15.5560587508401 #> 2                 FALSE          0.75 32.3809778993067   31.265808464409 #> 3                 FALSE          0.75 64.6583361159513   20.227313631379 #> 4                 FALSE          0.75 241.451730584773  14.9547860564372 #> 5                 FALSE          0.75 65.8684829813076   21.657979699665 #> 6                 FALSE          0.75 204.049885510265  12.2021966467906 #> 7                 FALSE          0.75 508.583332357459  7.09078215443886 #> 8                 FALSE          0.75 201.238468032627    13.34886912427 #> 9                 FALSE          0.75 289.750396866723   4.6811787509396 #> 10                FALSE          0.75 656.547592772416 0.530758257269013 #> 11                FALSE          0.75  319.72957523147  9.68626620792523 #> 12                FALSE          0.75 333.579293208917  3.74285371862528 #> 13                FALSE          0.75 728.361027547843 0.784037328556102 #> 14                FALSE          0.75 344.507826927097  9.81779624422939 #> 15                FALSE          0.75 317.288353977005  3.36971693282976 #> 16                FALSE          0.75 774.857879784214 0.548935910907531 #> 17                FALSE          0.75 334.873650150577  8.13036110107368 #> 18                FALSE          0.75 349.062084588651  4.93647345618348 #> 19                FALSE          0.75 771.600714368039 0.569174765965002 #> 20                FALSE          0.75 349.775731773778   9.5214300291355 #> 21                FALSE          0.75 341.492657746879  5.40080388356303 #>                A.bt            dY.bt      integral.bt  stdmax_slope.bt #> 1  3408.45022322997 2114.21096511256  81271.192343031 2.12079728873264 #> 2  1456.49403719394 263.024077306644 42588.9925221689 1.71899263809294 #> 3   2196.9091605457 685.082501159119 66089.4856267802 1.46876380712309 #> 4  7567.49431426271 6047.46584233362 149490.712033443 2.99340783743846 #> 5  2352.57355672199 1145.57608561773 57108.8574248513 3.08341438107468 #> 6  4819.43919866924 3259.52318044644 131159.694731256 2.61688724171357 #> 7  17006.7636475043 15781.7402795549 360068.981276918 13.8013034181732 #> 8  5175.79800818707 3773.97600198148 118686.093359017 7.39973875820126 #> 9   7767.4946000843 6275.17850861079 222445.064660392 6.63825200728558 #> 10 20067.1792485065  18656.826914251 485556.259693977 19.4849415579773 #> 11 6808.13905680496 5620.25830077515 168061.608694395 18.0158902968117 #> 12 9190.77113677231 7672.82576638208 267294.428510167 3.53182031993604 #> 13 20468.2408997329 19429.1913082827 493807.019963602 27.0723783120891 #> 14 6982.22064682398 5652.65812272904 177331.352599736  15.815776032283 #> 15 9007.11144243064 7374.18060292836 263221.134465187 5.92441314232654 #> 16 20664.3523698725 19319.3408834327 511208.420029072 23.3097746514936 #> 17 6929.53826184644 6026.04133675506 176896.989926136 13.5164441621801 #> 18  9322.0817649444 7658.32222218805 272877.081881312 5.25669166029214 #> 19 19805.6089772016 18659.2677256766 502161.883052453  27.436094984768 #> 20 7171.05538780584 5827.90596100551 181839.732485552 12.8906622825699 #> 21  9255.3430063807 7445.31283257353 269472.550272545 8.27017086363643 #>         stdlambda.bt          stdA.bt         stddY.bt   stdintegral.bt #> 1  0.639634191405854 21.6319920008514 68.5921081248263 1727.46595116915 #> 2   2.36964279761597 20.5370514694439 93.0143808364453 892.155629674998 #> 3   1.57388772754309 4.63943397872938 97.1874463911834 1147.16804789889 #> 4  0.323343017963329 54.3904145403189 89.6455715494057 2927.37147686252 #> 5   2.73803716839759 44.0511426534883 151.159120490189 1848.41453161556 #> 6  0.572718109688139 8.97821898841558 113.150796062097 1454.93942803142 #> 7   0.52594282371622 198.887559605981 206.440091321941 10987.8895868463 #> 8   0.70162587765858 62.1493005825099 124.561364073871 2799.34210267133 #> 9  0.425164560591061 13.7149998816592 68.7154325873727 2376.85172341215 #> 10 0.302244726344253 77.3171965596772 238.717042703052 8184.39501899504 #> 11 0.848958397914783  53.869885047575 217.954543040189 2103.34325922902 #> 12 0.343231292193193 12.1752261063722 81.9397894875738 3212.77571408169 #> 13 0.225652193947613 63.0196881331232 217.791992754502 5149.73802184862 #> 14 0.679443850654513 42.4021702191617 205.322338833944 2987.17267469035 #> 15 0.493660045578939 16.3237225462368 134.104449122564 9255.25627999208 #> 16 0.331879474120612 91.6251749086949 214.365835519927 10766.8818171121 #> 17 0.551708754745188 45.6194209415301 164.973770013787 1823.38752337431 #> 18 0.279346015474829 7.70906851450893 76.6123477255936 1787.12877181611 #> 19 0.258483255286509 77.6060356633253 207.217586557611 8242.91413498899 #> 20 0.435698532194185 61.9179455245569 111.299988106738 2001.09660915363 #> 21 0.712583718775949 10.1672881857581 174.654005108491 2770.47623002582 #>    reliable_fit.bt    ci90.mu.bt.lo    ci90.mu.bt.up   ci90.lambda.bt.lo #> 1             TRUE 88.6413096708588 95.6187327507892    14.5038605059775 #> 2             TRUE 29.5532350096438 35.2087207889696    27.3677460623307 #> 3             TRUE 62.2422196532339 67.0744525786688    17.6382683195706 #> 4             TRUE 236.527574692187 246.375886477359    14.4228867918875 #> 5             TRUE 60.7962663244397 70.9406996381754     17.153908557651 #> 6             TRUE 199.745105997646 208.354665022884    11.2600753563536 #> 7             TRUE 485.880188234564 531.286476480354    6.22560620942568 #> 8             TRUE 189.065897775386 213.411038289868    12.1946945555216 #> 9             TRUE 278.830472314738 300.670321418708    3.98178304876731 #> 10            TRUE 624.494863909544 688.600321635289  0.0335656824327166 #> 11            TRUE 290.093435693215 349.365714769725    8.28972964335541 #> 12            TRUE 327.769448782622 339.389137635212    3.17823824296747 #> 13            TRUE 683.826965224456  772.89508987123   0.412839469512279 #> 14            TRUE 318.490875353991 370.524778500202    8.70011110990272 #> 15            TRUE 307.542694357878 327.034013596132    2.55764615785241 #> 16            TRUE 736.513300482507 813.202459085921 0.00299417597912499 #> 17            TRUE 312.639099503791 357.108200797364    7.22280019951785 #> 18            TRUE 340.414826807471 357.709342369832    4.47694926072739 #> 19            TRUE 726.468338118096 816.733090617982   0.143969811018695 #> 20            TRUE 328.570592318951 370.980871228606    8.80470594367607 #> 21            TRUE 327.888226676197 355.097088817561    4.22860366617659 #>    ci90.lambda.bt.up     ci90.A.bt.lo     ci90.A.bt.up ci90.integral.bt.lo #> 1   16.6082569957027 3372.86559638857 3444.03485007137    78429.5108533577 #> 2   35.1638708664872  1422.7105875267 1490.27748686117    41121.3965113535 #> 3   22.8163589431873 2189.27729165069 2204.54102944071    64202.3941879866 #> 4   15.4866853209869 7478.02208234388 7656.96654618153    144675.185954004 #> 5   26.1620508416791   2280.109427057 2425.03768638698    54068.2155203437 #> 6   13.1443179372276  4804.6700284333 4834.20836890518    128766.319372144 #> 7   7.95595809945205 16679.5936119524 17333.9336830561    341993.902906556 #> 8   14.5030436930184 5073.56240872884  5278.0336076453    114081.175600123 #> 9    5.3805744531119 7744.93342527897 7790.05577488963    218535.143575379 #> 10  1.02795083210531 19939.9924601658 20194.3660368472     472092.92988773 #> 11   11.082802772495  6719.5230959017 6896.75501770822    164601.609032963 #> 12  4.30746919428308 9170.74288982733  9210.7993837173    262009.412460502 #> 13  1.15523518759993 20364.5735127539 20571.9082867118    485335.700917661 #> 14  10.9354813785561 6912.46907681346  7051.9722168345    172417.453549871 #> 15  4.18178770780712 8980.25891884208  9033.9639660192      247996.2378846 #> 16  1.09487764583594 20513.6289571477 20815.0757825973    493496.899439923 #> 17  9.03792200262952 6854.49431439762 7004.58220929526    173897.517450185 #> 18  5.39599765163957 9309.40034723803 9334.76318265076    269937.255051674 #> 19  0.99437972091131 19677.9470485355 19933.2709058678    488602.289300396 #> 20  10.2381541145949 7069.20036741795 7272.91040819374    178547.928563495 #> 21  6.57300410094946 9238.61781731513 9272.06819544627    264915.116874153 #>    ci90.integral.bt.up    ci95.mu.bt.lo    ci95.mu.bt.up   ci95.lambda.bt.lo #> 1     84112.8738327042  87.973258524908   96.28678389674    14.3023757356846 #> 2     44056.5885329843 29.0117523286445 35.7502034699689    26.6213085810817 #> 3     67976.5770655739 61.7795590539901 67.5371131779126    17.1424936853945 #> 4     154306.238112882 235.584651223394 247.318809946152    14.3210337412291 #> 5     60149.4993293589 59.8249907944012 71.9119751682139    16.2914268496058 #> 6     133553.070090367 198.920786516507 209.178984504024    11.0796691518019 #> 7      378144.05964728  481.53277765784 535.633887057078    6.05993421995507 #> 8     123291.011117911 186.734980066553 215.741955998702    11.9736824040592 #> 9     226354.985745405 276.739422932443 302.761370801003    3.84785621218112 #> 10    499019.589500224 618.357107318781 694.738078226052 -0.0616414063657231 #> 11    171521.608355826 284.418430249719 355.040720213221    8.02230774801225 #> 12    272579.444559831 326.656925381842 340.501661035992    3.07012038592662 #> 13    502278.339009543 675.299166056148 781.422889039538   0.341759028418781 #> 14    182245.251649602 313.508905903822 375.506747950372    8.48608629694655 #> 15    278446.031045774 305.676504218045 328.900203735965    2.40214324349504 #> 16    528919.940618222 729.170721467286 820.545038101141  -0.101547858368868 #> 17    179896.462402087 308.381419592704  361.36588070845    7.04901194177311 #> 18    275816.908710949 338.758968934479 359.365200242824    4.38895526585282 #> 19     515721.47680451 717.825968197894 825.375460538184  0.0625475856034449 #> 20     185131.53640761 324.510033699941 375.041429847615     8.6674609060349 #> 21    274029.983670938 325.283122854152 357.702192639606    4.00413979476217 #>    ci95.lambda.bt.up     ci95.A.bt.lo     ci95.A.bt.up ci95.integral.bt.lo #> 1   16.8097417659956  3366.0515189083 3450.84892755163    77885.3590787394 #> 2   35.9103083477363 1416.24141631383 1496.74665807405    40840.3674880059 #> 3   23.3121335773634 2187.81586994739 2206.00245114401    63841.0362528984 #> 4   15.5885383716453 7460.88910176368 7674.09952676173    143753.063938792 #> 5   27.0245325497243 2266.23331712115 2438.91379632283    53485.9649428848 #> 6   13.3247241417794 4801.84188945195 4837.03650788653    128308.013452314 #> 7   8.12163008892265 16616.9440306765  17396.583264332      338532.7176867 #> 8   14.7240558444808 5053.98537904535 5297.61063732879    113199.382837781 #> 9   5.51450128969809 7740.61320031625 7794.37599985235    217786.435282505 #> 10  1.12315792090375 19915.6375432495 20218.7209537635    469514.845456747 #> 11  11.3502246678382 6702.55408211171 6913.72403149821    163939.055906306 #> 12  4.41558705132394 9166.90769360382  9214.6345799408    260997.388110567 #> 13  1.22631562869342 20344.7223109919 20591.7594884738    483713.533440778 #> 14  11.1495061915122 6899.11239319442 7065.32890045354    171476.494157343 #> 15  4.33729062216448 8975.11694624001 9039.10593862126    245080.832156403 #> 16  1.19941968018393 20484.7670270515 20843.9377126936    490105.331667533 #> 17  9.21171026037425 6840.12419680104 7018.95232689184    173323.150380322 #> 18  5.48399164651414 9306.97199065596 9337.19153923283    269374.309488552 #> 19  1.07580194632656 19653.5011473015 19957.7168071018    486005.771347874 #> 20  10.3753991522361 7049.69621457771 7292.41456103398    177917.583131611 #> 21  6.79746797236389 9235.41512153661 9275.27089122479    264042.416861695 #>    ci95.integral.bt.up #> 1     84657.0256073225 #> 2     44337.6175563319 #> 3     68337.9350006621 #> 4     155228.360128093 #> 5     60731.7499068178 #> 6     134011.376010197 #> 7     381605.244867137 #> 8     124172.803880253 #> 9      227103.69403828 #> 10    501597.673931208 #> 11    172184.161482484 #> 12    273591.468909767 #> 13    503900.506486425 #> 14    183186.211042129 #> 15    281361.436773972 #> 16    532311.508390612 #> 17     180470.82947195 #> 18    276379.854274071 #> 19    518317.994757031 #> 20    185761.881839494 #> 21    274902.683683396"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFitLinear objects — summary.flFitLinear","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"Generic summary function flFitLinear objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"","code":"# S3 method for flFitLinear summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"object object class flFitLinear ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"dataframe parameters extracted linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 'l', x_type = 'time',                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  summary(TestFit) #>   max_slope.linfit    lambda.linfit        dY.linfit         A.linfit #> 1 233.480098034089 15.2207558251445 5820.56714471966 7503.25945241197 #>   x.mu.start.linfit x.mu.end.linfit       r2mu.linfit reliable_fit.linfit #> 1              14.5            30.5 0.996370266149326                TRUE #>   max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1              <NA>               <NA>             <NA>         <NA> #>   reliable_fit2.linfit #> 1                FALSE"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFitSpline objects — summary.flFitSpline","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"Generic summary function flFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"","code":"# S3 method for flFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"object object class flFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"dataframe parameters extracted nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time'))  summary(TestFit) #>   max_slope.spline x.max.spline   lambda.spline max_slope2.spline x.max2.spline #> 1 242.557704041626         23.5 14.982628746023              <NA>          <NA> #>   lambda2.spline        y0.spline         A.spline        dY.spline #> 1           <NA> 1519.80363776351 7592.80063751346 6072.99699974995 #>    integral.spline reliable_fit.spline reliable_fit2.spline smooth.spline #> 1 151370.675832012                TRUE                FALSE          0.75"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"Generic summary function gcBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"","code":"# S3 method for gcBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"object object class gcBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"dataframe statistical parameters extracted spline fit bootstrapping computation.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = 'TestFit',               control = growth.control(fit.opt = 's', nboot.gc = 50))  summary(TestFit) #>               mu.bt        lambda.bt             A.bt            dY.bt #> 1 0.637655252604367 4.76178378213837 6.32882507987873 6.25833295295494 #>       integral.bt           stdmu.bt      stdlambda.bt            stdA.bt #> 1 71.601291618785 0.0263718600505295 0.198370553863881 0.0164416227324412 #>             stddY.bt   stdintegral.bt reliable_fit.bt     ci90.mu.bt.lo #> 1 0.0182765696594312 1.23087056884066            TRUE 0.594273542821246 #>       ci90.mu.bt.up ci90.lambda.bt.lo ci90.lambda.bt.up     ci90.A.bt.lo #> 1 0.681036962387488  4.43546422103229  5.08810334324446 6.30177861048386 #>      ci90.A.bt.up ci90.integral.bt.lo ci90.integral.bt.up     ci95.mu.bt.lo #> 1 6.3558715492736    69.5765095330421    73.6260737045279 0.585966406905329 #>       ci95.mu.bt.up ci95.lambda.bt.lo ci95.lambda.bt.up     ci95.A.bt.lo #> 1 0.689344098303405  4.37297749656517  5.15059006771158 6.29659949932315 #>       ci95.A.bt.up ci95.integral.bt.lo ci95.integral.bt.up #> 1 6.36105066043431    69.1887853038573    74.0137979337127"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFit objects — summary.gcFit","title":"Generic summary function for gcFit objects — summary.gcFit","text":"Generic summary function gcFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFit objects — summary.gcFit","text":"","code":"# S3 method for gcFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFit objects — summary.gcFit","text":"object object class gcFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFit objects — summary.gcFit","text":"dataframe parameters extracted fits workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFit objects — summary.gcFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE,                                                 nboot.gc = 20)) summary(gcFit) #>    TestId AddId concentration reliability_tag used.model log.x log.y.lin #> 1   Test1     1         0.000            TRUE         NA FALSE      TRUE #> 2   Test1     1         0.017            TRUE         NA FALSE      TRUE #> 3   Test1     1         0.026            TRUE         NA FALSE      TRUE #> 4   Test1     1         0.039            TRUE         NA FALSE      TRUE #> 5   Test1     1         0.059            TRUE         NA FALSE      TRUE #> 6   Test1     1         0.088            TRUE         NA FALSE      TRUE #> 7   Test1     1         0.130            TRUE         NA FALSE      TRUE #> 8   Test1     1         0.200            TRUE         NA FALSE      TRUE #> 9   Test1     1         0.300            TRUE         NA FALSE      TRUE #> 10  Test1     1         0.440            TRUE         NA FALSE      TRUE #> 11  Test1     1         0.670            TRUE         NA FALSE      TRUE #> 12  Test1     1         1.000            TRUE         NA FALSE      TRUE #> 13  Test1     2         0.000            TRUE         NA FALSE      TRUE #> 14  Test1     2         0.017            TRUE         NA FALSE      TRUE #> 15  Test1     2         0.026            TRUE         NA FALSE      TRUE #> 16  Test1     2         0.039            TRUE         NA FALSE      TRUE #> 17  Test1     2         0.059            TRUE         NA FALSE      TRUE #> 18  Test1     2         0.088            TRUE         NA FALSE      TRUE #> 19  Test1     2         0.130            TRUE         NA FALSE      TRUE #> 20  Test1     2         0.200            TRUE         NA FALSE      TRUE #> 21  Test1     2         0.300            TRUE         NA FALSE      TRUE #> 22  Test1     2         0.440            TRUE         NA FALSE      TRUE #> 23  Test1     2         0.670            TRUE         NA FALSE      TRUE #> 24  Test1     2         1.000            TRUE         NA FALSE      TRUE #> 25  Test1     3         0.000            TRUE         NA FALSE      TRUE #> 26  Test1     3         0.026            TRUE         NA FALSE      TRUE #> 27  Test1     3         0.039            TRUE         NA FALSE      TRUE #> 28  Test1     3         0.059            TRUE         NA FALSE      TRUE #> 29  Test1     3         0.088            TRUE         NA FALSE      TRUE #> 30  Test1     3         0.130            TRUE         NA FALSE      TRUE #> 31  Test1     3         0.200            TRUE         NA FALSE      TRUE #> 32  Test1     3         0.300            TRUE         NA FALSE      TRUE #> 33  Test1     3         0.440            TRUE         NA FALSE      TRUE #> 34  Test1     3         0.670            TRUE         NA FALSE      TRUE #> 35  Test1     3         1.000            TRUE         NA FALSE      TRUE #> 36  Test2     1         0.000            TRUE         NA FALSE      TRUE #> 37  Test2     1         0.017            TRUE         NA FALSE      TRUE #> 38  Test2     1         0.026            TRUE         NA FALSE      TRUE #> 39  Test2     1         0.039            TRUE         NA FALSE      TRUE #> 40  Test2     1         0.059            TRUE         NA FALSE      TRUE #> 41  Test2     1         0.088            TRUE         NA FALSE      TRUE #> 42  Test2     1         0.130            TRUE         NA FALSE      TRUE #> 43  Test2     1         0.200            TRUE         NA FALSE      TRUE #> 44  Test2     1         0.300            TRUE         NA FALSE      TRUE #> 45  Test2     1         0.440            TRUE         NA FALSE      TRUE #> 46  Test2     1         0.670            TRUE         NA FALSE      TRUE #> 47  Test2     1         1.000            TRUE         NA FALSE      TRUE #> 48  Test2     2         0.000            TRUE         NA FALSE      TRUE #> 49  Test2     2         0.017            TRUE         NA FALSE      TRUE #> 50  Test2     2         0.026            TRUE         NA FALSE      TRUE #> 51  Test2     2         0.039            TRUE         NA FALSE      TRUE #> 52  Test2     2         0.059            TRUE         NA FALSE      TRUE #> 53  Test2     2         0.088            TRUE         NA FALSE      TRUE #> 54  Test2     2         0.130            TRUE         NA FALSE      TRUE #> 55  Test2     2         0.200            TRUE         NA FALSE      TRUE #> 56  Test2     2         0.300            TRUE         NA FALSE      TRUE #> 57  Test2     2         0.440            TRUE         NA FALSE      TRUE #> 58  Test2     2         0.670            TRUE         NA FALSE      TRUE #> 59  Test2     2         1.000            TRUE         NA FALSE      TRUE #> 60  Test2     3         0.000            TRUE         NA FALSE      TRUE #> 61  Test2     3         0.026            TRUE         NA FALSE      TRUE #> 62  Test2     3         0.039            TRUE         NA FALSE      TRUE #> 63  Test2     3         0.059            TRUE         NA FALSE      TRUE #> 64  Test2     3         0.088            TRUE         NA FALSE      TRUE #> 65  Test2     3         0.130            TRUE         NA FALSE      TRUE #> 66  Test2     3         0.200            TRUE         NA FALSE      TRUE #> 67  Test2     3         0.300            TRUE         NA FALSE      TRUE #> 68  Test2     3         0.440            TRUE         NA FALSE      TRUE #> 69  Test2     3         0.670            TRUE         NA FALSE      TRUE #> 70  Test2     3         1.000            TRUE         NA FALSE      TRUE #>    log.y.spline log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit #> 1          TRUE        TRUE       20         0      <NA>          <NA> #> 2          TRUE        TRUE       20         0      <NA>          <NA> #> 3          TRUE        TRUE       20         0      <NA>          <NA> #> 4          TRUE        TRUE       20         0      <NA>          <NA> #> 5          TRUE        TRUE       20         0      <NA>          <NA> #> 6          TRUE        TRUE       20         0      <NA>          <NA> #> 7          TRUE        TRUE       20         0      <NA>          <NA> #> 8          TRUE        TRUE       20         0      <NA>          <NA> #> 9          TRUE        TRUE       20         0      <NA>          <NA> #> 10         TRUE        TRUE       20         0      <NA>          <NA> #> 11         TRUE        TRUE       20         0      <NA>          <NA> #> 12         TRUE        TRUE       20         0      <NA>          <NA> #> 13         TRUE        TRUE       20         0      <NA>          <NA> #> 14         TRUE        TRUE       20         0      <NA>          <NA> #> 15         TRUE        TRUE       20         0      <NA>          <NA> #> 16         TRUE        TRUE       20         0      <NA>          <NA> #> 17         TRUE        TRUE       20         0      <NA>          <NA> #> 18         TRUE        TRUE       20         0      <NA>          <NA> #> 19         TRUE        TRUE       20         0      <NA>          <NA> #> 20         TRUE        TRUE       20         0      <NA>          <NA> #> 21         TRUE        TRUE       20         0      <NA>          <NA> #> 22         TRUE        TRUE       20         0      <NA>          <NA> #> 23         TRUE        TRUE       20         0      <NA>          <NA> #> 24         TRUE        TRUE       20         0      <NA>          <NA> #> 25         TRUE        TRUE       20         0      <NA>          <NA> #> 26         TRUE        TRUE       20         0      <NA>          <NA> #> 27         TRUE        TRUE       20         0      <NA>          <NA> #> 28         TRUE        TRUE       20         0      <NA>          <NA> #> 29         TRUE        TRUE       20         0      <NA>          <NA> #> 30         TRUE        TRUE       20         0      <NA>          <NA> #> 31         TRUE        TRUE       20         0      <NA>          <NA> #> 32         TRUE        TRUE       20         0      <NA>          <NA> #> 33         TRUE        TRUE       20         0      <NA>          <NA> #> 34         TRUE        TRUE       20         0      <NA>          <NA> #> 35         TRUE        TRUE       20         0      <NA>          <NA> #> 36         TRUE        TRUE       20         0      <NA>          <NA> #> 37         TRUE        TRUE       20         0      <NA>          <NA> #> 38         TRUE        TRUE       20         0      <NA>          <NA> #> 39         TRUE        TRUE       20         0      <NA>          <NA> #> 40         TRUE        TRUE       20         0      <NA>          <NA> #> 41         TRUE        TRUE       20         0      <NA>          <NA> #> 42         TRUE        TRUE       20         0      <NA>          <NA> #> 43         TRUE        TRUE       20         0      <NA>          <NA> #> 44         TRUE        TRUE       20         0      <NA>          <NA> #> 45         TRUE        TRUE       20         0      <NA>          <NA> #> 46         TRUE        TRUE       20         0      <NA>          <NA> #> 47         TRUE        TRUE       20         0      <NA>          <NA> #> 48         TRUE        TRUE       20         0      <NA>          <NA> #> 49         TRUE        TRUE       20         0      <NA>          <NA> #> 50         TRUE        TRUE       20         0      <NA>          <NA> #> 51         TRUE        TRUE       20         0      <NA>          <NA> #> 52         TRUE        TRUE       20         0      <NA>          <NA> #> 53         TRUE        TRUE       20         0      <NA>          <NA> #> 54         TRUE        TRUE       20         0      <NA>          <NA> #> 55         TRUE        TRUE       20         0      <NA>          <NA> #> 56         TRUE        TRUE       20         0      <NA>          <NA> #> 57         TRUE        TRUE       20         0      <NA>          <NA> #> 58         TRUE        TRUE       20         0      <NA>          <NA> #> 59         TRUE        TRUE       20         0      <NA>          <NA> #> 60         TRUE        TRUE       20         0      <NA>          <NA> #> 61         TRUE        TRUE       20         0      <NA>          <NA> #> 62         TRUE        TRUE       20         0      <NA>          <NA> #> 63         TRUE        TRUE       20         0      <NA>          <NA> #> 64         TRUE        TRUE       20         0      <NA>          <NA> #> 65         TRUE        TRUE       20         0      <NA>          <NA> #> 66         TRUE        TRUE       20         0      <NA>          <NA> #> 67         TRUE        TRUE       20         0      <NA>          <NA> #> 68         TRUE        TRUE       20         0      <NA>          <NA> #> 69         TRUE        TRUE       20         0      <NA>          <NA> #> 70         TRUE        TRUE       20         0      <NA>          <NA> #>    dY.linfit A.linfit tmu.start.linfit tmu.end.linfit r2mu.linfit #> 1          0     <NA>             <NA>           <NA>        <NA> #> 2          0     <NA>             <NA>           <NA>        <NA> #> 3          0     <NA>             <NA>           <NA>        <NA> #> 4          0     <NA>             <NA>           <NA>        <NA> #> 5          0     <NA>             <NA>           <NA>        <NA> #> 6          0     <NA>             <NA>           <NA>        <NA> #> 7          0     <NA>             <NA>           <NA>        <NA> #> 8          0     <NA>             <NA>           <NA>        <NA> #> 9          0     <NA>             <NA>           <NA>        <NA> #> 10         0     <NA>             <NA>           <NA>        <NA> #> 11         0     <NA>             <NA>           <NA>        <NA> #> 12         0     <NA>             <NA>           <NA>        <NA> #> 13         0     <NA>             <NA>           <NA>        <NA> #> 14         0     <NA>             <NA>           <NA>        <NA> #> 15         0     <NA>             <NA>           <NA>        <NA> #> 16         0     <NA>             <NA>           <NA>        <NA> #> 17         0     <NA>             <NA>           <NA>        <NA> #> 18         0     <NA>             <NA>           <NA>        <NA> #> 19         0     <NA>             <NA>           <NA>        <NA> #> 20         0     <NA>             <NA>           <NA>        <NA> #> 21         0     <NA>             <NA>           <NA>        <NA> #> 22         0     <NA>             <NA>           <NA>        <NA> #> 23         0     <NA>             <NA>           <NA>        <NA> #> 24         0     <NA>             <NA>           <NA>        <NA> #> 25         0     <NA>             <NA>           <NA>        <NA> #> 26         0     <NA>             <NA>           <NA>        <NA> #> 27         0     <NA>             <NA>           <NA>        <NA> #> 28         0     <NA>             <NA>           <NA>        <NA> #> 29         0     <NA>             <NA>           <NA>        <NA> #> 30         0     <NA>             <NA>           <NA>        <NA> #> 31         0     <NA>             <NA>           <NA>        <NA> #> 32         0     <NA>             <NA>           <NA>        <NA> #> 33         0     <NA>             <NA>           <NA>        <NA> #> 34         0     <NA>             <NA>           <NA>        <NA> #> 35         0     <NA>             <NA>           <NA>        <NA> #> 36         0     <NA>             <NA>           <NA>        <NA> #> 37         0     <NA>             <NA>           <NA>        <NA> #> 38         0     <NA>             <NA>           <NA>        <NA> #> 39         0     <NA>             <NA>           <NA>        <NA> #> 40         0     <NA>             <NA>           <NA>        <NA> #> 41         0     <NA>             <NA>           <NA>        <NA> #> 42         0     <NA>             <NA>           <NA>        <NA> #> 43         0     <NA>             <NA>           <NA>        <NA> #> 44         0     <NA>             <NA>           <NA>        <NA> #> 45         0     <NA>             <NA>           <NA>        <NA> #> 46         0     <NA>             <NA>           <NA>        <NA> #> 47         0     <NA>             <NA>           <NA>        <NA> #> 48         0     <NA>             <NA>           <NA>        <NA> #> 49         0     <NA>             <NA>           <NA>        <NA> #> 50         0     <NA>             <NA>           <NA>        <NA> #> 51         0     <NA>             <NA>           <NA>        <NA> #> 52         0     <NA>             <NA>           <NA>        <NA> #> 53         0     <NA>             <NA>           <NA>        <NA> #> 54         0     <NA>             <NA>           <NA>        <NA> #> 55         0     <NA>             <NA>           <NA>        <NA> #> 56         0     <NA>             <NA>           <NA>        <NA> #> 57         0     <NA>             <NA>           <NA>        <NA> #> 58         0     <NA>             <NA>           <NA>        <NA> #> 59         0     <NA>             <NA>           <NA>        <NA> #> 60         0     <NA>             <NA>           <NA>        <NA> #> 61         0     <NA>             <NA>           <NA>        <NA> #> 62         0     <NA>             <NA>           <NA>        <NA> #> 63         0     <NA>             <NA>           <NA>        <NA> #> 64         0     <NA>             <NA>           <NA>        <NA> #> 65         0     <NA>             <NA>           <NA>        <NA> #> 66         0     <NA>             <NA>           <NA>        <NA> #> 67         0     <NA>             <NA>           <NA>        <NA> #> 68         0     <NA>             <NA>           <NA>        <NA> #> 69         0     <NA>             <NA>           <NA>        <NA> #> 70         0     <NA>             <NA>           <NA>        <NA> #>    reliable_fit.linfit mu2.linfit tD2.linfit tmu2.start.linfit tmu2.end.linfit #> 1                FALSE       <NA>       <NA>              <NA>            <NA> #> 2                FALSE       <NA>       <NA>              <NA>            <NA> #> 3                FALSE       <NA>       <NA>              <NA>            <NA> #> 4                FALSE       <NA>       <NA>              <NA>            <NA> #> 5                FALSE       <NA>       <NA>              <NA>            <NA> #> 6                FALSE       <NA>       <NA>              <NA>            <NA> #> 7                FALSE       <NA>       <NA>              <NA>            <NA> #> 8                FALSE       <NA>       <NA>              <NA>            <NA> #> 9                FALSE       <NA>       <NA>              <NA>            <NA> #> 10               FALSE       <NA>       <NA>              <NA>            <NA> #> 11               FALSE       <NA>       <NA>              <NA>            <NA> #> 12               FALSE       <NA>       <NA>              <NA>            <NA> #> 13               FALSE       <NA>       <NA>              <NA>            <NA> #> 14               FALSE       <NA>       <NA>              <NA>            <NA> #> 15               FALSE       <NA>       <NA>              <NA>            <NA> #> 16               FALSE       <NA>       <NA>              <NA>            <NA> #> 17               FALSE       <NA>       <NA>              <NA>            <NA> #> 18               FALSE       <NA>       <NA>              <NA>            <NA> #> 19               FALSE       <NA>       <NA>              <NA>            <NA> #> 20               FALSE       <NA>       <NA>              <NA>            <NA> #> 21               FALSE       <NA>       <NA>              <NA>            <NA> #> 22               FALSE       <NA>       <NA>              <NA>            <NA> #> 23               FALSE       <NA>       <NA>              <NA>            <NA> #> 24               FALSE       <NA>       <NA>              <NA>            <NA> #> 25               FALSE       <NA>       <NA>              <NA>            <NA> #> 26               FALSE       <NA>       <NA>              <NA>            <NA> #> 27               FALSE       <NA>       <NA>              <NA>            <NA> #> 28               FALSE       <NA>       <NA>              <NA>            <NA> #> 29               FALSE       <NA>       <NA>              <NA>            <NA> #> 30               FALSE       <NA>       <NA>              <NA>            <NA> #> 31               FALSE       <NA>       <NA>              <NA>            <NA> #> 32               FALSE       <NA>       <NA>              <NA>            <NA> #> 33               FALSE       <NA>       <NA>              <NA>            <NA> #> 34               FALSE       <NA>       <NA>              <NA>            <NA> #> 35               FALSE       <NA>       <NA>              <NA>            <NA> #> 36               FALSE       <NA>       <NA>              <NA>            <NA> #> 37               FALSE       <NA>       <NA>              <NA>            <NA> #> 38               FALSE       <NA>       <NA>              <NA>            <NA> #> 39               FALSE       <NA>       <NA>              <NA>            <NA> #> 40               FALSE       <NA>       <NA>              <NA>            <NA> #> 41               FALSE       <NA>       <NA>              <NA>            <NA> #> 42               FALSE       <NA>       <NA>              <NA>            <NA> #> 43               FALSE       <NA>       <NA>              <NA>            <NA> #> 44               FALSE       <NA>       <NA>              <NA>            <NA> #> 45               FALSE       <NA>       <NA>              <NA>            <NA> #> 46               FALSE       <NA>       <NA>              <NA>            <NA> #> 47               FALSE       <NA>       <NA>              <NA>            <NA> #> 48               FALSE       <NA>       <NA>              <NA>            <NA> #> 49               FALSE       <NA>       <NA>              <NA>            <NA> #> 50               FALSE       <NA>       <NA>              <NA>            <NA> #> 51               FALSE       <NA>       <NA>              <NA>            <NA> #> 52               FALSE       <NA>       <NA>              <NA>            <NA> #> 53               FALSE       <NA>       <NA>              <NA>            <NA> #> 54               FALSE       <NA>       <NA>              <NA>            <NA> #> 55               FALSE       <NA>       <NA>              <NA>            <NA> #> 56               FALSE       <NA>       <NA>              <NA>            <NA> #> 57               FALSE       <NA>       <NA>              <NA>            <NA> #> 58               FALSE       <NA>       <NA>              <NA>            <NA> #> 59               FALSE       <NA>       <NA>              <NA>            <NA> #> 60               FALSE       <NA>       <NA>              <NA>            <NA> #> 61               FALSE       <NA>       <NA>              <NA>            <NA> #> 62               FALSE       <NA>       <NA>              <NA>            <NA> #> 63               FALSE       <NA>       <NA>              <NA>            <NA> #> 64               FALSE       <NA>       <NA>              <NA>            <NA> #> 65               FALSE       <NA>       <NA>              <NA>            <NA> #> 66               FALSE       <NA>       <NA>              <NA>            <NA> #> 67               FALSE       <NA>       <NA>              <NA>            <NA> #> 68               FALSE       <NA>       <NA>              <NA>            <NA> #> 69               FALSE       <NA>       <NA>              <NA>            <NA> #> 70               FALSE       <NA>       <NA>              <NA>            <NA> #>    r2mu2.linfit reliable_fit2.linfit mu.model tD.model lambda.model A.model #> 1          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 2          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 3          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 4          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 5          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 6          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 7          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 8          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 9          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 10         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 11         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 12         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 13         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 14         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 15         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 16         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 17         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 18         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 19         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 20         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 21         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 22         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 23         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 24         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 25         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 26         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 27         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 28         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 29         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 30         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 31         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 32         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 33         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 34         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 35         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 36         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 37         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 38         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 39         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 40         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 41         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 42         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 43         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 44         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 45         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 46         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 47         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 48         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 49         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 50         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 51         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 52         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 53         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 54         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 55         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 56         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 57         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 58         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 59         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 60         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 61         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 62         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 63         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 64         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 65         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 66         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 67         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 68         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 69         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 70         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #>    dY.model A.orig.model dY.orig.model integral.model parameter_nu.model #> 1      <NA>         <NA>          <NA>           <NA>               <NA> #> 2      <NA>         <NA>          <NA>           <NA>               <NA> #> 3      <NA>         <NA>          <NA>           <NA>               <NA> #> 4      <NA>         <NA>          <NA>           <NA>               <NA> #> 5      <NA>         <NA>          <NA>           <NA>               <NA> #> 6      <NA>         <NA>          <NA>           <NA>               <NA> #> 7      <NA>         <NA>          <NA>           <NA>               <NA> #> 8      <NA>         <NA>          <NA>           <NA>               <NA> #> 9      <NA>         <NA>          <NA>           <NA>               <NA> #> 10     <NA>         <NA>          <NA>           <NA>               <NA> #> 11     <NA>         <NA>          <NA>           <NA>               <NA> #> 12     <NA>         <NA>          <NA>           <NA>               <NA> #> 13     <NA>         <NA>          <NA>           <NA>               <NA> #> 14     <NA>         <NA>          <NA>           <NA>               <NA> #> 15     <NA>         <NA>          <NA>           <NA>               <NA> #> 16     <NA>         <NA>          <NA>           <NA>               <NA> #> 17     <NA>         <NA>          <NA>           <NA>               <NA> #> 18     <NA>         <NA>          <NA>           <NA>               <NA> #> 19     <NA>         <NA>          <NA>           <NA>               <NA> #> 20     <NA>         <NA>          <NA>           <NA>               <NA> #> 21     <NA>         <NA>          <NA>           <NA>               <NA> #> 22     <NA>         <NA>          <NA>           <NA>               <NA> #> 23     <NA>         <NA>          <NA>           <NA>               <NA> #> 24     <NA>         <NA>          <NA>           <NA>               <NA> #> 25     <NA>         <NA>          <NA>           <NA>               <NA> #> 26     <NA>         <NA>          <NA>           <NA>               <NA> #> 27     <NA>         <NA>          <NA>           <NA>               <NA> #> 28     <NA>         <NA>          <NA>           <NA>               <NA> #> 29     <NA>         <NA>          <NA>           <NA>               <NA> #> 30     <NA>         <NA>          <NA>           <NA>               <NA> #> 31     <NA>         <NA>          <NA>           <NA>               <NA> #> 32     <NA>         <NA>          <NA>           <NA>               <NA> #> 33     <NA>         <NA>          <NA>           <NA>               <NA> #> 34     <NA>         <NA>          <NA>           <NA>               <NA> #> 35     <NA>         <NA>          <NA>           <NA>               <NA> #> 36     <NA>         <NA>          <NA>           <NA>               <NA> #> 37     <NA>         <NA>          <NA>           <NA>               <NA> #> 38     <NA>         <NA>          <NA>           <NA>               <NA> #> 39     <NA>         <NA>          <NA>           <NA>               <NA> #> 40     <NA>         <NA>          <NA>           <NA>               <NA> #> 41     <NA>         <NA>          <NA>           <NA>               <NA> #> 42     <NA>         <NA>          <NA>           <NA>               <NA> #> 43     <NA>         <NA>          <NA>           <NA>               <NA> #> 44     <NA>         <NA>          <NA>           <NA>               <NA> #> 45     <NA>         <NA>          <NA>           <NA>               <NA> #> 46     <NA>         <NA>          <NA>           <NA>               <NA> #> 47     <NA>         <NA>          <NA>           <NA>               <NA> #> 48     <NA>         <NA>          <NA>           <NA>               <NA> #> 49     <NA>         <NA>          <NA>           <NA>               <NA> #> 50     <NA>         <NA>          <NA>           <NA>               <NA> #> 51     <NA>         <NA>          <NA>           <NA>               <NA> #> 52     <NA>         <NA>          <NA>           <NA>               <NA> #> 53     <NA>         <NA>          <NA>           <NA>               <NA> #> 54     <NA>         <NA>          <NA>           <NA>               <NA> #> 55     <NA>         <NA>          <NA>           <NA>               <NA> #> 56     <NA>         <NA>          <NA>           <NA>               <NA> #> 57     <NA>         <NA>          <NA>           <NA>               <NA> #> 58     <NA>         <NA>          <NA>           <NA>               <NA> #> 59     <NA>         <NA>          <NA>           <NA>               <NA> #> 60     <NA>         <NA>          <NA>           <NA>               <NA> #> 61     <NA>         <NA>          <NA>           <NA>               <NA> #> 62     <NA>         <NA>          <NA>           <NA>               <NA> #> 63     <NA>         <NA>          <NA>           <NA>               <NA> #> 64     <NA>         <NA>          <NA>           <NA>               <NA> #> 65     <NA>         <NA>          <NA>           <NA>               <NA> #> 66     <NA>         <NA>          <NA>           <NA>               <NA> #> 67     <NA>         <NA>          <NA>           <NA>               <NA> #> 68     <NA>         <NA>          <NA>           <NA>               <NA> #> 69     <NA>         <NA>          <NA>           <NA>               <NA> #> 70     <NA>         <NA>          <NA>           <NA>               <NA> #>    parameter_alpha.model parameter_t_shift.model parameter_y0.model stdmu.model #> 1                   <NA>                    <NA>               <NA>        <NA> #> 2                   <NA>                    <NA>               <NA>        <NA> #> 3                   <NA>                    <NA>               <NA>        <NA> #> 4                   <NA>                    <NA>               <NA>        <NA> #> 5                   <NA>                    <NA>               <NA>        <NA> #> 6                   <NA>                    <NA>               <NA>        <NA> #> 7                   <NA>                    <NA>               <NA>        <NA> #> 8                   <NA>                    <NA>               <NA>        <NA> #> 9                   <NA>                    <NA>               <NA>        <NA> #> 10                  <NA>                    <NA>               <NA>        <NA> #> 11                  <NA>                    <NA>               <NA>        <NA> #> 12                  <NA>                    <NA>               <NA>        <NA> #> 13                  <NA>                    <NA>               <NA>        <NA> #> 14                  <NA>                    <NA>               <NA>        <NA> #> 15                  <NA>                    <NA>               <NA>        <NA> #> 16                  <NA>                    <NA>               <NA>        <NA> #> 17                  <NA>                    <NA>               <NA>        <NA> #> 18                  <NA>                    <NA>               <NA>        <NA> #> 19                  <NA>                    <NA>               <NA>        <NA> #> 20                  <NA>                    <NA>               <NA>        <NA> #> 21                  <NA>                    <NA>               <NA>        <NA> #> 22                  <NA>                    <NA>               <NA>        <NA> #> 23                  <NA>                    <NA>               <NA>        <NA> #> 24                  <NA>                    <NA>               <NA>        <NA> #> 25                  <NA>                    <NA>               <NA>        <NA> #> 26                  <NA>                    <NA>               <NA>        <NA> #> 27                  <NA>                    <NA>               <NA>        <NA> #> 28                  <NA>                    <NA>               <NA>        <NA> #> 29                  <NA>                    <NA>               <NA>        <NA> #> 30                  <NA>                    <NA>               <NA>        <NA> #> 31                  <NA>                    <NA>               <NA>        <NA> #> 32                  <NA>                    <NA>               <NA>        <NA> #> 33                  <NA>                    <NA>               <NA>        <NA> #> 34                  <NA>                    <NA>               <NA>        <NA> #> 35                  <NA>                    <NA>               <NA>        <NA> #> 36                  <NA>                    <NA>               <NA>        <NA> #> 37                  <NA>                    <NA>               <NA>        <NA> #> 38                  <NA>                    <NA>               <NA>        <NA> #> 39                  <NA>                    <NA>               <NA>        <NA> #> 40                  <NA>                    <NA>               <NA>        <NA> #> 41                  <NA>                    <NA>               <NA>        <NA> #> 42                  <NA>                    <NA>               <NA>        <NA> #> 43                  <NA>                    <NA>               <NA>        <NA> #> 44                  <NA>                    <NA>               <NA>        <NA> #> 45                  <NA>                    <NA>               <NA>        <NA> #> 46                  <NA>                    <NA>               <NA>        <NA> #> 47                  <NA>                    <NA>               <NA>        <NA> #> 48                  <NA>                    <NA>               <NA>        <NA> #> 49                  <NA>                    <NA>               <NA>        <NA> #> 50                  <NA>                    <NA>               <NA>        <NA> #> 51                  <NA>                    <NA>               <NA>        <NA> #> 52                  <NA>                    <NA>               <NA>        <NA> #> 53                  <NA>                    <NA>               <NA>        <NA> #> 54                  <NA>                    <NA>               <NA>        <NA> #> 55                  <NA>                    <NA>               <NA>        <NA> #> 56                  <NA>                    <NA>               <NA>        <NA> #> 57                  <NA>                    <NA>               <NA>        <NA> #> 58                  <NA>                    <NA>               <NA>        <NA> #> 59                  <NA>                    <NA>               <NA>        <NA> #> 60                  <NA>                    <NA>               <NA>        <NA> #> 61                  <NA>                    <NA>               <NA>        <NA> #> 62                  <NA>                    <NA>               <NA>        <NA> #> 63                  <NA>                    <NA>               <NA>        <NA> #> 64                  <NA>                    <NA>               <NA>        <NA> #> 65                  <NA>                    <NA>               <NA>        <NA> #> 66                  <NA>                    <NA>               <NA>        <NA> #> 67                  <NA>                    <NA>               <NA>        <NA> #> 68                  <NA>                    <NA>               <NA>        <NA> #> 69                  <NA>                    <NA>               <NA>        <NA> #> 70                  <NA>                    <NA>               <NA>        <NA> #>    stdlambda.model stdA.model reliable_fit.model ci90.mu.model.lo #> 1             <NA>       <NA>              FALSE             <NA> #> 2             <NA>       <NA>              FALSE             <NA> #> 3             <NA>       <NA>              FALSE             <NA> #> 4             <NA>       <NA>              FALSE             <NA> #> 5             <NA>       <NA>              FALSE             <NA> #> 6             <NA>       <NA>              FALSE             <NA> #> 7             <NA>       <NA>              FALSE             <NA> #> 8             <NA>       <NA>              FALSE             <NA> #> 9             <NA>       <NA>              FALSE             <NA> #> 10            <NA>       <NA>              FALSE             <NA> #> 11            <NA>       <NA>              FALSE             <NA> #> 12            <NA>       <NA>              FALSE             <NA> #> 13            <NA>       <NA>              FALSE             <NA> #> 14            <NA>       <NA>              FALSE             <NA> #> 15            <NA>       <NA>              FALSE             <NA> #> 16            <NA>       <NA>              FALSE             <NA> #> 17            <NA>       <NA>              FALSE             <NA> #> 18            <NA>       <NA>              FALSE             <NA> #> 19            <NA>       <NA>              FALSE             <NA> #> 20            <NA>       <NA>              FALSE             <NA> #> 21            <NA>       <NA>              FALSE             <NA> #> 22            <NA>       <NA>              FALSE             <NA> #> 23            <NA>       <NA>              FALSE             <NA> #> 24            <NA>       <NA>              FALSE             <NA> #> 25            <NA>       <NA>              FALSE             <NA> #> 26            <NA>       <NA>              FALSE             <NA> #> 27            <NA>       <NA>              FALSE             <NA> #> 28            <NA>       <NA>              FALSE             <NA> #> 29            <NA>       <NA>              FALSE             <NA> #> 30            <NA>       <NA>              FALSE             <NA> #> 31            <NA>       <NA>              FALSE             <NA> #> 32            <NA>       <NA>              FALSE             <NA> #> 33            <NA>       <NA>              FALSE             <NA> #> 34            <NA>       <NA>              FALSE             <NA> #> 35            <NA>       <NA>              FALSE             <NA> #> 36            <NA>       <NA>              FALSE             <NA> #> 37            <NA>       <NA>              FALSE             <NA> #> 38            <NA>       <NA>              FALSE             <NA> #> 39            <NA>       <NA>              FALSE             <NA> #> 40            <NA>       <NA>              FALSE             <NA> #> 41            <NA>       <NA>              FALSE             <NA> #> 42            <NA>       <NA>              FALSE             <NA> #> 43            <NA>       <NA>              FALSE             <NA> #> 44            <NA>       <NA>              FALSE             <NA> #> 45            <NA>       <NA>              FALSE             <NA> #> 46            <NA>       <NA>              FALSE             <NA> #> 47            <NA>       <NA>              FALSE             <NA> #> 48            <NA>       <NA>              FALSE             <NA> #> 49            <NA>       <NA>              FALSE             <NA> #> 50            <NA>       <NA>              FALSE             <NA> #> 51            <NA>       <NA>              FALSE             <NA> #> 52            <NA>       <NA>              FALSE             <NA> #> 53            <NA>       <NA>              FALSE             <NA> #> 54            <NA>       <NA>              FALSE             <NA> #> 55            <NA>       <NA>              FALSE             <NA> #> 56            <NA>       <NA>              FALSE             <NA> #> 57            <NA>       <NA>              FALSE             <NA> #> 58            <NA>       <NA>              FALSE             <NA> #> 59            <NA>       <NA>              FALSE             <NA> #> 60            <NA>       <NA>              FALSE             <NA> #> 61            <NA>       <NA>              FALSE             <NA> #> 62            <NA>       <NA>              FALSE             <NA> #> 63            <NA>       <NA>              FALSE             <NA> #> 64            <NA>       <NA>              FALSE             <NA> #> 65            <NA>       <NA>              FALSE             <NA> #> 66            <NA>       <NA>              FALSE             <NA> #> 67            <NA>       <NA>              FALSE             <NA> #> 68            <NA>       <NA>              FALSE             <NA> #> 69            <NA>       <NA>              FALSE             <NA> #> 70            <NA>       <NA>              FALSE             <NA> #>    ci90.mu.model.up ci90.lambda.model.lo ci90.lambda.model.up ci90.A.model.lo #> 1              <NA>                 <NA>                 <NA>            <NA> #> 2              <NA>                 <NA>                 <NA>            <NA> #> 3              <NA>                 <NA>                 <NA>            <NA> #> 4              <NA>                 <NA>                 <NA>            <NA> #> 5              <NA>                 <NA>                 <NA>            <NA> #> 6              <NA>                 <NA>                 <NA>            <NA> #> 7              <NA>                 <NA>                 <NA>            <NA> #> 8              <NA>                 <NA>                 <NA>            <NA> #> 9              <NA>                 <NA>                 <NA>            <NA> #> 10             <NA>                 <NA>                 <NA>            <NA> #> 11             <NA>                 <NA>                 <NA>            <NA> #> 12             <NA>                 <NA>                 <NA>            <NA> #> 13             <NA>                 <NA>                 <NA>            <NA> #> 14             <NA>                 <NA>                 <NA>            <NA> #> 15             <NA>                 <NA>                 <NA>            <NA> #> 16             <NA>                 <NA>                 <NA>            <NA> #> 17             <NA>                 <NA>                 <NA>            <NA> #> 18             <NA>                 <NA>                 <NA>            <NA> #> 19             <NA>                 <NA>                 <NA>            <NA> #> 20             <NA>                 <NA>                 <NA>            <NA> #> 21             <NA>                 <NA>                 <NA>            <NA> #> 22             <NA>                 <NA>                 <NA>            <NA> #> 23             <NA>                 <NA>                 <NA>            <NA> #> 24             <NA>                 <NA>                 <NA>            <NA> #> 25             <NA>                 <NA>                 <NA>            <NA> #> 26             <NA>                 <NA>                 <NA>            <NA> #> 27             <NA>                 <NA>                 <NA>            <NA> #> 28             <NA>                 <NA>                 <NA>            <NA> #> 29             <NA>                 <NA>                 <NA>            <NA> #> 30             <NA>                 <NA>                 <NA>            <NA> #> 31             <NA>                 <NA>                 <NA>            <NA> #> 32             <NA>                 <NA>                 <NA>            <NA> #> 33             <NA>                 <NA>                 <NA>            <NA> #> 34             <NA>                 <NA>                 <NA>            <NA> #> 35             <NA>                 <NA>                 <NA>            <NA> #> 36             <NA>                 <NA>                 <NA>            <NA> #> 37             <NA>                 <NA>                 <NA>            <NA> #> 38             <NA>                 <NA>                 <NA>            <NA> #> 39             <NA>                 <NA>                 <NA>            <NA> #> 40             <NA>                 <NA>                 <NA>            <NA> #> 41             <NA>                 <NA>                 <NA>            <NA> #> 42             <NA>                 <NA>                 <NA>            <NA> #> 43             <NA>                 <NA>                 <NA>            <NA> #> 44             <NA>                 <NA>                 <NA>            <NA> #> 45             <NA>                 <NA>                 <NA>            <NA> #> 46             <NA>                 <NA>                 <NA>            <NA> #> 47             <NA>                 <NA>                 <NA>            <NA> #> 48             <NA>                 <NA>                 <NA>            <NA> #> 49             <NA>                 <NA>                 <NA>            <NA> #> 50             <NA>                 <NA>                 <NA>            <NA> #> 51             <NA>                 <NA>                 <NA>            <NA> #> 52             <NA>                 <NA>                 <NA>            <NA> #> 53             <NA>                 <NA>                 <NA>            <NA> #> 54             <NA>                 <NA>                 <NA>            <NA> #> 55             <NA>                 <NA>                 <NA>            <NA> #> 56             <NA>                 <NA>                 <NA>            <NA> #> 57             <NA>                 <NA>                 <NA>            <NA> #> 58             <NA>                 <NA>                 <NA>            <NA> #> 59             <NA>                 <NA>                 <NA>            <NA> #> 60             <NA>                 <NA>                 <NA>            <NA> #> 61             <NA>                 <NA>                 <NA>            <NA> #> 62             <NA>                 <NA>                 <NA>            <NA> #> 63             <NA>                 <NA>                 <NA>            <NA> #> 64             <NA>                 <NA>                 <NA>            <NA> #> 65             <NA>                 <NA>                 <NA>            <NA> #> 66             <NA>                 <NA>                 <NA>            <NA> #> 67             <NA>                 <NA>                 <NA>            <NA> #> 68             <NA>                 <NA>                 <NA>            <NA> #> 69             <NA>                 <NA>                 <NA>            <NA> #> 70             <NA>                 <NA>                 <NA>            <NA> #>    ci90.A.model.up ci95.mu.model.lo ci95.mu.model.up ci95.lambda.model.lo #> 1             <NA>             <NA>             <NA>                 <NA> #> 2             <NA>             <NA>             <NA>                 <NA> #> 3             <NA>             <NA>             <NA>                 <NA> #> 4             <NA>             <NA>             <NA>                 <NA> #> 5             <NA>             <NA>             <NA>                 <NA> #> 6             <NA>             <NA>             <NA>                 <NA> #> 7             <NA>             <NA>             <NA>                 <NA> #> 8             <NA>             <NA>             <NA>                 <NA> #> 9             <NA>             <NA>             <NA>                 <NA> #> 10            <NA>             <NA>             <NA>                 <NA> #> 11            <NA>             <NA>             <NA>                 <NA> #> 12            <NA>             <NA>             <NA>                 <NA> #> 13            <NA>             <NA>             <NA>                 <NA> #> 14            <NA>             <NA>             <NA>                 <NA> #> 15            <NA>             <NA>             <NA>                 <NA> #> 16            <NA>             <NA>             <NA>                 <NA> #> 17            <NA>             <NA>             <NA>                 <NA> #> 18            <NA>             <NA>             <NA>                 <NA> #> 19            <NA>             <NA>             <NA>                 <NA> #> 20            <NA>             <NA>             <NA>                 <NA> #> 21            <NA>             <NA>             <NA>                 <NA> #> 22            <NA>             <NA>             <NA>                 <NA> #> 23            <NA>             <NA>             <NA>                 <NA> #> 24            <NA>             <NA>             <NA>                 <NA> #> 25            <NA>             <NA>             <NA>                 <NA> #> 26            <NA>             <NA>             <NA>                 <NA> #> 27            <NA>             <NA>             <NA>                 <NA> #> 28            <NA>             <NA>             <NA>                 <NA> #> 29            <NA>             <NA>             <NA>                 <NA> #> 30            <NA>             <NA>             <NA>                 <NA> #> 31            <NA>             <NA>             <NA>                 <NA> #> 32            <NA>             <NA>             <NA>                 <NA> #> 33            <NA>             <NA>             <NA>                 <NA> #> 34            <NA>             <NA>             <NA>                 <NA> #> 35            <NA>             <NA>             <NA>                 <NA> #> 36            <NA>             <NA>             <NA>                 <NA> #> 37            <NA>             <NA>             <NA>                 <NA> #> 38            <NA>             <NA>             <NA>                 <NA> #> 39            <NA>             <NA>             <NA>                 <NA> #> 40            <NA>             <NA>             <NA>                 <NA> #> 41            <NA>             <NA>             <NA>                 <NA> #> 42            <NA>             <NA>             <NA>                 <NA> #> 43            <NA>             <NA>             <NA>                 <NA> #> 44            <NA>             <NA>             <NA>                 <NA> #> 45            <NA>             <NA>             <NA>                 <NA> #> 46            <NA>             <NA>             <NA>                 <NA> #> 47            <NA>             <NA>             <NA>                 <NA> #> 48            <NA>             <NA>             <NA>                 <NA> #> 49            <NA>             <NA>             <NA>                 <NA> #> 50            <NA>             <NA>             <NA>                 <NA> #> 51            <NA>             <NA>             <NA>                 <NA> #> 52            <NA>             <NA>             <NA>                 <NA> #> 53            <NA>             <NA>             <NA>                 <NA> #> 54            <NA>             <NA>             <NA>                 <NA> #> 55            <NA>             <NA>             <NA>                 <NA> #> 56            <NA>             <NA>             <NA>                 <NA> #> 57            <NA>             <NA>             <NA>                 <NA> #> 58            <NA>             <NA>             <NA>                 <NA> #> 59            <NA>             <NA>             <NA>                 <NA> #> 60            <NA>             <NA>             <NA>                 <NA> #> 61            <NA>             <NA>             <NA>                 <NA> #> 62            <NA>             <NA>             <NA>                 <NA> #> 63            <NA>             <NA>             <NA>                 <NA> #> 64            <NA>             <NA>             <NA>                 <NA> #> 65            <NA>             <NA>             <NA>                 <NA> #> 66            <NA>             <NA>             <NA>                 <NA> #> 67            <NA>             <NA>             <NA>                 <NA> #> 68            <NA>             <NA>             <NA>                 <NA> #> 69            <NA>             <NA>             <NA>                 <NA> #> 70            <NA>             <NA>             <NA>                 <NA> #>    ci95.lambda.model.up ci95.A.model.lo ci95.A.model.up          mu.spline #> 1                  <NA>            <NA>            <NA>  0.667140820438078 #> 2                  <NA>            <NA>            <NA>   0.61280336864229 #> 3                  <NA>            <NA>            <NA>  0.613368372250434 #> 4                  <NA>            <NA>            <NA>  0.572808711254386 #> 5                  <NA>            <NA>            <NA>  0.525034463017592 #> 6                  <NA>            <NA>            <NA>   0.48685408544353 #> 7                  <NA>            <NA>            <NA>  0.389119272260891 #> 8                  <NA>            <NA>            <NA>  0.261612205700809 #> 9                  <NA>            <NA>            <NA>  0.151578446466328 #> 10                 <NA>            <NA>            <NA> 0.0773141308734593 #> 11                 <NA>            <NA>            <NA> 0.0366123645518497 #> 12                 <NA>            <NA>            <NA>                  0 #> 13                 <NA>            <NA>            <NA>  0.680721388458907 #> 14                 <NA>            <NA>            <NA>  0.618579650431166 #> 15                 <NA>            <NA>            <NA>   0.60846180317541 #> 16                 <NA>            <NA>            <NA>  0.564988763459032 #> 17                 <NA>            <NA>            <NA>   0.53869773268827 #> 18                 <NA>            <NA>            <NA>  0.462670203119322 #> 19                 <NA>            <NA>            <NA>  0.395237373487956 #> 20                 <NA>            <NA>            <NA>  0.264871826872972 #> 21                 <NA>            <NA>            <NA>  0.150229887696203 #> 22                 <NA>            <NA>            <NA> 0.0767764523219027 #> 23                 <NA>            <NA>            <NA> 0.0338893787821394 #> 24                 <NA>            <NA>            <NA>                  0 #> 25                 <NA>            <NA>            <NA>  0.675363042236823 #> 26                 <NA>            <NA>            <NA>  0.608409090629137 #> 27                 <NA>            <NA>            <NA>  0.585517531137592 #> 28                 <NA>            <NA>            <NA>  0.537914662765498 #> 29                 <NA>            <NA>            <NA>  0.464238663222996 #> 30                 <NA>            <NA>            <NA>  0.387983806062127 #> 31                 <NA>            <NA>            <NA>  0.262349225908205 #> 32                 <NA>            <NA>            <NA>  0.144650217094181 #> 33                 <NA>            <NA>            <NA> 0.0711124817780699 #> 34                 <NA>            <NA>            <NA> 0.0369395628748499 #> 35                 <NA>            <NA>            <NA>                  0 #> 36                 <NA>            <NA>            <NA>  0.477571154977895 #> 37                 <NA>            <NA>            <NA>  0.436739396825705 #> 38                 <NA>            <NA>            <NA>  0.419108566513398 #> 39                 <NA>            <NA>            <NA>   0.40801097808362 #> 40                 <NA>            <NA>            <NA>  0.342371692836174 #> 41                 <NA>            <NA>            <NA>  0.294447933724478 #> 42                 <NA>            <NA>            <NA>  0.204846553309825 #> 43                 <NA>            <NA>            <NA>  0.114808606632899 #> 44                 <NA>            <NA>            <NA> 0.0367583373300721 #> 45                 <NA>            <NA>            <NA>                  0 #> 46                 <NA>            <NA>            <NA>                  0 #> 47                 <NA>            <NA>            <NA>                  0 #> 48                 <NA>            <NA>            <NA>  0.469520221973564 #> 49                 <NA>            <NA>            <NA>  0.449933836911541 #> 50                 <NA>            <NA>            <NA>   0.42135298330971 #> 51                 <NA>            <NA>            <NA>  0.385474341574044 #> 52                 <NA>            <NA>            <NA>  0.358186771200308 #> 53                 <NA>            <NA>            <NA>  0.283211409681297 #> 54                 <NA>            <NA>            <NA>  0.224959091909749 #> 55                 <NA>            <NA>            <NA>  0.110287133280357 #> 56                 <NA>            <NA>            <NA> 0.0505808876846522 #> 57                 <NA>            <NA>            <NA>                  0 #> 58                 <NA>            <NA>            <NA>                  0 #> 59                 <NA>            <NA>            <NA>                  0 #> 60                 <NA>            <NA>            <NA>  0.484221188476036 #> 61                 <NA>            <NA>            <NA>  0.430992547107518 #> 62                 <NA>            <NA>            <NA>  0.406082061666366 #> 63                 <NA>            <NA>            <NA>   0.36151517436871 #> 64                 <NA>            <NA>            <NA>  0.291015409537501 #> 65                 <NA>            <NA>            <NA>  0.208033414743184 #> 66                 <NA>            <NA>            <NA>  0.122713030363972 #> 67                 <NA>            <NA>            <NA> 0.0386156435771226 #> 68                 <NA>            <NA>            <NA>                  0 #> 69                 <NA>            <NA>            <NA>                  0 #> 70                 <NA>            <NA>            <NA>                  0 #>           tD.spline tmax.spline        lambda.spline mu2.spline tD2.spline #> 1  1.03898181512082        8.25     4.66303840403407       <NA>       <NA> #> 2  1.13110863293011           8     4.63347000990316       <NA>       <NA> #> 3  1.13006671344465           8     4.73057752031169       <NA>       <NA> #> 4   1.2100849148087           8     4.44800307827247       <NA>       <NA> #> 5  1.32019368133692           8     4.47053153633825       <NA>       <NA> #> 6  1.42372674130582        8.25     4.74476206581615       <NA>       <NA> #> 7   1.7813231828189           8     4.12537047188872       <NA>       <NA> #> 8  2.64952156457355         8.5     3.75440579729228       <NA>       <NA> #> 9  4.57286109416567       10.75     3.01333523009471       <NA>       <NA> #> 10  8.9653362552109         8.5      2.3870005598864       <NA>       <NA> #> 11 18.9320517547651        3.75    0.881876946326809       <NA>       <NA> #> 12             <NA>        <NA>                 <NA>       <NA>       <NA> #> 13 1.01825385879114           8     4.68233614358942       <NA>       <NA> #> 14 1.12054636792013         7.5     4.22537136145643       <NA>       <NA> #> 15 1.13917944716099        7.75      4.2732896648168       <NA>       <NA> #> 16  1.2268335680099           8     4.62546543491833       <NA>       <NA> #> 17 1.28670892506067        7.75     4.31694266816254       <NA>       <NA> #> 18  1.4981452790492        7.75     4.21211929311712       <NA>       <NA> #> 19 1.75374908107233        8.75     4.62669209777218       <NA>       <NA> #> 20  2.6169154671643        9.75      4.1190997187666       <NA>       <NA> #> 21 4.61390999613631          10     3.09679074090108       <NA>       <NA> #> 22 9.02812202957449        5.75     1.30895680221973       <NA>       <NA> #> 23 20.4532276916581           7     1.62667736379723       <NA>       <NA> #> 24             <NA>        <NA>                 <NA>       <NA>       <NA> #> 25 1.02633270879647        7.75     4.21163499231674       <NA>       <NA> #> 26 1.13927814563583           8     4.55215271211912       <NA>       <NA> #> 27 1.18381968719748           8      4.6183577877482       <NA>       <NA> #> 28 1.28858205313901        8.25     4.67206924257363       <NA>       <NA> #> 29 1.49308369912093        8.25     4.65571756763544       <NA>       <NA> #> 30 1.78653637015189        8.25     4.22348209409727       <NA>       <NA> #> 31 2.64207823812095        8.75     3.90516454293433       <NA>       <NA> #> 32 4.79188482730477         9.5     3.09651705160893       <NA>       <NA> #> 33 9.74719434941311        13.5     2.26806568389481       <NA>       <NA> #> 34 18.7643579570312         9.5     2.34535038641367       <NA>       <NA> #> 35             <NA>        <NA>                 <NA>       <NA>       <NA> #> 36 1.45140085060629           8     3.87277636173566       <NA>       <NA> #> 37   1.587095612619         8.5     3.95302389809353       <NA>       <NA> #> 38 1.65386068418095         8.5     4.20899503509812       <NA>       <NA> #> 39 1.69884443750895        8.75     4.36476939738816       <NA>       <NA> #> 40 2.02454582275182           9     4.15411622974283       <NA>       <NA> #> 41 2.35405686768561         8.5      3.9648162999026       <NA>       <NA> #> 42 3.38373855630159         8.5     3.30806902652532       <NA>       <NA> #> 43 6.03741479744882        8.75     2.46845218368534       <NA>       <NA> #> 44 18.8568697853719        11.5     2.33551129980289       <NA>       <NA> #> 45             <NA>        <NA>                 <NA>       <NA>       <NA> #> 46             <NA>        <NA>                 <NA>       <NA>       <NA> #> 47             <NA>        <NA>                 <NA>       <NA>       <NA> #> 48 1.47628823663099         8.5     4.00830209020423       <NA>       <NA> #> 49  1.5405535740941        8.25     3.87264866764031       <NA>       <NA> #> 50 1.64505108072406         8.5     4.06362834491613       <NA>       <NA> #> 51  1.7981668448529        8.25     3.81970555509182       <NA>       <NA> #> 52 1.93515572402957        8.75     4.24038842988383       <NA>       <NA> #> 53 2.44745499957066        8.25     3.46057372328315       <NA>       <NA> #> 54  3.0812143429083         9.5     3.34884802764809       <NA>       <NA> #> 55 6.28493242995008       13.75     2.49445929164588       <NA>       <NA> #> 56 13.7037369704025        8.75     2.06842499812024       <NA>       <NA> #> 57             <NA>        <NA>                 <NA>       <NA>       <NA> #> 58             <NA>        <NA>                 <NA>       <NA>       <NA> #> 59             <NA>        <NA>                 <NA>       <NA>       <NA> #> 60 1.43146809155843        8.75     4.36103927092264       <NA>       <NA> #> 61  1.6082579274556        8.25     3.88081426345223       <NA>       <NA> #> 62 1.70691405997005         8.5     4.12748105809955       <NA>       <NA> #> 63 1.91733910414782        8.75     3.99630303556476       <NA>       <NA> #> 64 2.38182294766293        8.25     3.61663404994694       <NA>       <NA> #> 65 3.33190310516044        8.75     3.24002899527914       <NA>       <NA> #> 66 5.64852142029286       10.75     2.71013075596768       <NA>       <NA> #> 67 17.9499062128954        0.25 -0.00184454516658471       <NA>       <NA> #> 68             <NA>        <NA>                 <NA>       <NA>       <NA> #> 69             <NA>        <NA>                 <NA>       <NA>       <NA> #> 70             <NA>        <NA>                 <NA>       <NA>       <NA> #>    tmax2.spline lambda2.spline          y0.spline           A.spline #> 1          <NA>           <NA> 0.0548747667645584   6.97195358135167 #> 2          <NA>           <NA> 0.0527606334630182   3.64192332660676 #> 3          <NA>           <NA> 0.0538287913374265   3.46171132450674 #> 4          <NA>           <NA> 0.0539618848656778   2.69196468349963 #> 5          <NA>           <NA>   0.05005143161808   1.91174464669693 #> 6          <NA>           <NA> 0.0493348332909151   1.58653433875994 #> 7          <NA>           <NA> 0.0551537447838275   1.34603760022924 #> 8          <NA>           <NA> 0.0545391021978949  0.775076841843378 #> 9          <NA>           <NA> 0.0559438440918583  0.463733455720524 #> 10         <NA>           <NA> 0.0499347033259468  0.201391321459485 #> 11         <NA>           <NA> 0.0519645252424931 0.0987244242687426 #> 12         <NA>           <NA>               <NA>               <NA> #> 13         <NA>           <NA> 0.0514613237105843   6.44007787479362 #> 14         <NA>           <NA> 0.0538683931369799   3.86081871862373 #> 15         <NA>           <NA> 0.0569731001557274   3.63492108143563 #> 16         <NA>           <NA> 0.0558363533331705   2.65600775451455 #> 17         <NA>           <NA> 0.0509652765387929   2.24232680412365 #> 18         <NA>           <NA> 0.0508313286851285   1.48615185441091 #> 19         <NA>           <NA>   0.04733416731533   1.06565574826826 #> 20         <NA>           <NA> 0.0488802505051645  0.770187684401321 #> 21         <NA>           <NA> 0.0498076874887378  0.450013517713911 #> 22         <NA>           <NA> 0.0467596688127904   0.20042701024638 #> 23         <NA>           <NA> 0.0525710860421592 0.0966883686438771 #> 24         <NA>           <NA>               <NA>               <NA> #> 25         <NA>           <NA> 0.0567893942128368   6.92144095693444 #> 26         <NA>           <NA> 0.0520575028749755   3.49140389244672 #> 27         <NA>           <NA> 0.0484653484830537   2.65218950182519 #> 28         <NA>           <NA> 0.0493030387414093   2.13882530301783 #> 29         <NA>           <NA> 0.0495957598919272   1.53858435947961 #> 30         <NA>           <NA> 0.0542921990150602   1.27459418214662 #> 31         <NA>           <NA> 0.0534823296056544  0.770711348824627 #> 32         <NA>           <NA> 0.0529286098105183  0.446109080699042 #> 33         <NA>           <NA>  0.050145673110637  0.187299806548173 #> 34         <NA>           <NA> 0.0499669892792545 0.0911247629649204 #> 35         <NA>           <NA>               <NA>               <NA> #> 36         <NA>           <NA> 0.0538876318368908   3.94095914487588 #> 37         <NA>           <NA> 0.0502445511817022    2.3820531205532 #> 38         <NA>           <NA> 0.0472510448435643    1.7933536669207 #> 39         <NA>           <NA> 0.0582765301984862   2.17253988113366 #> 40         <NA>           <NA> 0.0565362275983758   1.48225238797572 #> 41         <NA>           <NA>  0.057073554303734   1.27830750092759 #> 42         <NA>           <NA>  0.053621071139294  0.809676948466432 #> 43         <NA>           <NA> 0.0507824287850298  0.424895027088414 #> 44         <NA>           <NA>   0.05780878415887  0.113714994719881 #> 45         <NA>           <NA>               <NA>               <NA> #> 46         <NA>           <NA>               <NA>               <NA> #> 47         <NA>           <NA>               <NA>               <NA> #> 48         <NA>           <NA> 0.0517921247160018   3.95302330979278 #> 49         <NA>           <NA> 0.0476295244551688   2.49377156115436 #> 50         <NA>           <NA> 0.0484566700198921   2.02131303154104 #> 51         <NA>           <NA> 0.0573208043166373   1.84625486057343 #> 52         <NA>           <NA> 0.0564171201275487   1.76744272416336 #> 53         <NA>           <NA> 0.0489073283240677   1.02206435973109 #> 54         <NA>           <NA> 0.0472460568275789  0.801845169456546 #> 55         <NA>           <NA> 0.0476485043341316  0.383194096601423 #> 56         <NA>           <NA> 0.0512430104924577  0.130857944524479 #> 57         <NA>           <NA>               <NA>               <NA> #> 58         <NA>           <NA>               <NA>               <NA> #> 59         <NA>           <NA>               <NA>               <NA> #> 60         <NA>           <NA> 0.0574776648437192   4.30636559172575 #> 61         <NA>           <NA> 0.0509024899425312   2.11394249436771 #> 62         <NA>           <NA> 0.0481474847493428   1.87717130707073 #> 63         <NA>           <NA> 0.0506697862139853   1.47121917866252 #> 64         <NA>           <NA> 0.0509856224021119   1.15776063119731 #> 65         <NA>           <NA> 0.0532334939046206  0.842965528277537 #> 66         <NA>           <NA>  0.054536811471572  0.473025341076834 #> 67         <NA>           <NA> 0.0541773289065851  0.114424722165524 #> 68         <NA>           <NA>               <NA>               <NA> #> 69         <NA>           <NA>               <NA>               <NA> #> 70         <NA>           <NA>               <NA>               <NA> #>             dY.spline  integral.spline reliable_fit.spline reliable_fit2.spline #> 1    6.91707881458711 75.5142985073796                TRUE                FALSE #> 2    3.58916269314374 67.1957720683941                TRUE                FALSE #> 3    3.40788253316931 65.4738926892843                TRUE                FALSE #> 4    2.63800279863395 62.6254182180978                TRUE                FALSE #> 5    1.86169321507885  57.841091499653                TRUE                FALSE #> 6    1.53719950546903 54.6455481667734                TRUE                FALSE #> 7    1.29088385544541 49.8831906236167                TRUE                FALSE #> 8   0.720537739645483  39.508337223901                TRUE                FALSE #> 9   0.407789611628666 29.2782387092047                TRUE                FALSE #> 10  0.151456618133539 16.2151754822287                TRUE                FALSE #> 11 0.0467598990262495 7.42031257402196                TRUE                FALSE #> 12                  0                0               FALSE                FALSE #> 13   6.38861655108303 75.9231767453043                TRUE                FALSE #> 14   3.80695032548675 69.1964754292224                TRUE                FALSE #> 15    3.5779479812799  67.270665679211                TRUE                FALSE #> 16   2.60017140118138 61.6999516693306                TRUE                FALSE #> 17   2.19136152758486 60.4401656922723                TRUE                FALSE #> 18   1.43532052572578 53.5835060727233                TRUE                FALSE #> 19   1.01832158095293 48.0864585180749                TRUE                FALSE #> 20  0.721307433896157 40.3647401655987                TRUE                FALSE #> 21  0.400205830225174 29.7408885881247                TRUE                FALSE #> 22   0.15366734143359 18.6094683480839                TRUE                FALSE #> 23 0.0441172826017178 7.56740803542176                TRUE                FALSE #> 24                  0                0               FALSE                FALSE #> 25    6.8646515627216 77.5542173525257                TRUE                FALSE #> 26   3.43934638957174 66.8547704913691                TRUE                FALSE #> 27   2.60372415334214 63.3373516019487                TRUE                FALSE #> 28   2.08952226427642 59.5929532950674                TRUE                FALSE #> 29   1.48898859958768 53.2011043932891                TRUE                FALSE #> 30   1.22030198313156 49.1160782821508                TRUE                FALSE #> 31  0.717229019218973 39.8901352095077                TRUE                FALSE #> 32  0.393180470888523 28.0238802539872                TRUE                FALSE #> 33  0.137154133437536 16.7111487247587                TRUE                FALSE #> 34 0.0411577736856659 7.96770991935129                TRUE                FALSE #> 35                  0                0               FALSE                FALSE #> 36   3.88707151303899 66.2474403078397                TRUE                FALSE #> 37    2.3318085693715 59.9146286679782                TRUE                FALSE #> 38   1.74610262207714 55.8517499334689                TRUE                FALSE #> 39   2.11426335093517 54.5120418979453                TRUE                FALSE #> 40   1.42571616037735 48.6656978232104                TRUE                FALSE #> 41   1.22123394662386 45.1954393627918                TRUE                FALSE #> 42  0.756055877327138 37.8685636411437                TRUE                FALSE #> 43  0.374112598303384 25.2577980364377                TRUE                FALSE #> 44 0.0559062105610111 8.08869400504429                TRUE                FALSE #> 45                  0                0               FALSE                FALSE #> 46                  0                0               FALSE                FALSE #> 47                  0                0               FALSE                FALSE #> 48   3.90123118507678 66.0785782611398                TRUE                FALSE #> 49    2.4461420366992 61.7857262784014                TRUE                FALSE #> 50   1.97285636152115 57.2384019485556                TRUE                FALSE #> 51   1.78893405625679  53.787985081525                TRUE                FALSE #> 52   1.71102560403581  51.203923909792                TRUE                FALSE #> 53  0.973157031407022 45.4917423860641                TRUE                FALSE #> 54  0.754599112628967 40.2252725676137                TRUE                FALSE #> 55  0.335545592267291 24.9397903906734                TRUE                FALSE #> 56 0.0796149340320217  11.413166512473                TRUE                FALSE #> 57                  0                0               FALSE                FALSE #> 58                  0                0               FALSE                FALSE #> 59                  0                0               FALSE                FALSE #> 60   4.24888792688203 64.7768061592125                TRUE                FALSE #> 61   2.06304000442518 58.2650976751699                TRUE                FALSE #> 62   1.82902382232139  55.887251549149                TRUE                FALSE #> 63   1.42054939244854 51.2815154374959                TRUE                FALSE #> 64   1.10677500879519 46.3793478161829                TRUE                FALSE #> 65  0.789732034372916 37.7480151929619                TRUE                FALSE #> 66  0.418488529605262 26.3920302752595                TRUE                FALSE #> 67 0.0602473932589387 9.25557432476133                TRUE                FALSE #> 68                  0                0               FALSE                FALSE #> 69                  0                0               FALSE                FALSE #> 70                  0                0               FALSE                FALSE #>    smooth.spline              mu.bt        lambda.bt               A.bt #> 1           0.55  0.664685371189106 4.65393389874604   6.98387387799604 #> 2           0.55  0.611779735416733 4.62147949482138   3.64822322446327 #> 3           0.55  0.615310793445261 4.74800397322825   3.46504177932201 #> 4           0.55  0.571146519457712 4.44167754072066   2.69570958421903 #> 5           0.55   0.52417099461904 4.47635506894412    1.9234532747746 #> 6           0.55  0.485610767625323 4.72110414868498   1.59512281156487 #> 7           0.55   0.38905605086526 4.13313338405731   1.35415029690841 #> 8           0.55  0.261023803557537 3.75784595126072  0.771632120444772 #> 9           0.55  0.151704377780738 3.00579692450967  0.457838611068596 #> 10          0.55 0.0779152868735669 2.69999936240022  0.196182096105816 #> 11          0.55 0.0406671039685573  2.0364809526188 0.0968760608315434 #> 12          0.55               <NA>             <NA>               <NA> #> 13          0.55  0.674756339248353  4.6531292113592   6.40628571648629 #> 14          0.55  0.616212347749902 4.21641389145924    3.8782999268889 #> 15          0.55  0.603533600027481 4.24900990489058   3.67634816336116 #> 16          0.55  0.564438080170208 4.62101284853998   2.66202964845772 #> 17          0.55  0.535734624499481 4.31461575459253   2.24653585318107 #> 18          0.55   0.46224008796444 4.22412942893674   1.48800538965557 #> 19          0.55   0.39405409320872 4.61179568769903   1.07067874756617 #> 20          0.55  0.265278088193323 4.12396403369713  0.773926261940511 #> 21          0.55  0.149934130398423 3.01328578118243  0.444209885886762 #> 22          0.55   0.07858210772523 1.61150226410756  0.196120914229608 #> 23          0.55 0.0403039839855304 5.74549283074179 0.0963245470613223 #> 24          0.55               <NA>             <NA>               <NA> #> 25          0.55  0.673951212049003 4.20850014945035   6.89339373068816 #> 26          0.55  0.608861839006644   4.557070324313   3.49761856360194 #> 27          0.55   0.58408008396122 4.61759258435577   2.65242848541301 #> 28          0.55   0.53475534963002 4.64977378500947   2.13728735276256 #> 29          0.55  0.462826640837104 4.64391756611014   1.54124117808589 #> 30          0.55  0.387625601311705 4.22436176229384   1.27778377324003 #> 31          0.55  0.261739070744258 3.87884077609495  0.769970154704302 #> 32          0.55  0.146082909358071 3.20839383040656  0.441252763923337 #> 33          0.55 0.0750771462253499 2.47218128617773  0.183332800657669 #> 34          0.55 0.0387507914491883 3.01154038127845 0.0907197535966507 #> 35          0.55               <NA>             <NA>               <NA> #> 36          0.55  0.476858173778829 3.88244776364509   3.92703978759534 #> 37          0.55  0.435566448881458 3.94248688485163   2.38540279580147 #> 38          0.55  0.418879778673342 4.20143975601029    1.7835381085678 #> 39          0.55  0.407003984495073 4.35632105237573   2.18221345604963 #> 40          0.55  0.342465587282015 4.16123193806875   1.48352552782996 #> 41          0.55  0.294714786492858 3.97509321108275   1.26853976560393 #> 42          0.55  0.207308262865055  3.3834666185251  0.805102299803301 #> 43          0.55  0.115466945381901 2.63669652834978  0.419082941717152 #> 44          0.55 0.0383405377795385 2.00894743672014  0.113752489654647 #> 45          0.55               <NA>             <NA>               <NA> #> 46          0.55               <NA>             <NA>               <NA> #> 47          0.55               <NA>             <NA>               <NA> #> 48          0.55  0.468311224872132  3.9986096469783   3.94554016901921 #> 49          0.55  0.449987690823658 3.87325088221366   2.49457879145312 #> 50          0.55  0.419313215686888 4.04652124962824   2.02213709381934 #> 51          0.55  0.383805962166364 3.80720415930324   1.82745444597263 #> 52          0.55  0.356665561888732 4.21511819286458   1.77433328231136 #> 53          0.55  0.284710990231216 3.49071825049026   1.02250667445564 #> 54          0.55  0.226190896288311 3.37613711026373  0.802329631371469 #> 55          0.55  0.112146348590271 2.70533710476954  0.374853872667727 #> 56          0.55 0.0527517822240978 3.40295562636211  0.129007152743855 #> 57          0.55               <NA>             <NA>               <NA> #> 58          0.55               <NA>             <NA>               <NA> #> 59          0.55               <NA>             <NA>               <NA> #> 60          0.55  0.483232619514113 4.35499640648977    4.2899757847436 #> 61          0.55  0.431099124340823 3.88565245961624   2.10100803080023 #> 62          0.55  0.404907593301573  4.1142768758154   1.87779037165379 #> 63          0.55  0.360798923630193  3.9829928927918   1.46162019049154 #> 64          0.55  0.292007260271353 3.63572276749167   1.15476720321007 #> 65          0.55  0.209028875750033 3.31145768702802  0.834613664715167 #> 66          0.55  0.122566961998025 2.72194541387507  0.462878512230364 #> 67          0.55 0.0420759032972399 2.29492955692512  0.112809995369902 #> 68          0.55               <NA>             <NA>               <NA> #> 69          0.55               <NA>             <NA>               <NA> #> 70          0.55               <NA>             <NA>               <NA> #>                 dY.bt      integral.bt            stdmu.bt       stdlambda.bt #> 1    6.92888809567903 73.6353211671764 0.00357435405246384 0.0187252046488969 #> 2    3.59560490853546 65.7189828253779 0.00559032537287262 0.0327191360888507 #> 3    3.41092417214098 63.9818065779185 0.00434609693148134 0.0265766610867558 #> 4    2.64156933682175 61.1206945974352 0.00387184792877145 0.0329099634513171 #> 5    1.87309939145796 56.3552998755003 0.00249310377880111 0.0239006332990916 #> 6     1.5461271742862 53.2057076424029 0.00487464506847034 0.0510471511200136 #> 7     1.2988356567274 48.5330094715909 0.00362385309803464 0.0423255598308741 #> 8    0.71692202593247 38.2288845831433 0.00252184969202595 0.0505187388885598 #> 9   0.401944819569584  28.413909688402 0.00302080708711008  0.174263348617736 #> 10  0.145948493640287 15.7339131181775 0.00229525066731227  0.346402897511049 #> 11 0.0444941719532502 7.19799132769253 0.00219755689825626   1.05721406082362 #> 12               <NA>             <NA>                <NA>               <NA> #> 13   6.35487289813401  73.683345053954 0.00806109488990721  0.043524491679682 #> 14   3.82429715656424 67.6673898149086 0.00493474339236273 0.0290906363289021 #> 15   3.61922832135263 65.7196898398346  0.0063507810842216 0.0463426676315128 #> 16   2.60629918765933 60.0110462959096 0.00315809157014937  0.019565484652558 #> 17   2.19512291064808 58.8019425821684 0.00445330068858516  0.028789853041736 #> 18   1.43681194545821 52.4639223554067 0.00427404043053901 0.0425859099405588 #> 19   1.02339491910786 47.0228233147861 0.00434955449535796 0.0430972292462779 #> 20  0.725052104600248 39.2618014617993 0.00395024311332537 0.0800499264334985 #> 21  0.394690139735068 28.9935203653974 0.00237328798997501  0.115445804768675 #> 22  0.149593733744036 18.0912832603629 0.00298599435878714  0.256594278711614 #> 23 0.0437437630083058 7.34589804248592  0.0061149620040062   3.97235850564088 #> 24               <NA>             <NA>                <NA>               <NA> #> 25   6.83651842078012 75.6893402457748 0.00420581138074541 0.0259848507788783 #> 26   3.44545507609804 65.3482195326335 0.00261400716716562 0.0151094971964976 #> 27   2.60381400861417 62.1411789131164  0.0075665441392675 0.0406357330598807 #> 28   2.08795318092007 58.0488071635288 0.00499215532293532  0.037361317692412 #> 29   1.49163778237787 51.7115300461949 0.00478649405421954 0.0440459899281027 #> 30   1.22340786135189 48.0866453882316 0.00287916433721735 0.0411567020165972 #> 31  0.716708122114303 39.1091347362457 0.00282806435704831 0.0561505090880653 #> 32   0.38810829481624 27.1612213327578  0.0037637966485812  0.184368048830463 #> 33  0.133334673772255 16.2046983027459 0.00498643586375506  0.737024496486661 #> 34  0.040880136074157  7.7646614959085 0.00246734154961377  0.990565636069614 #> 35               <NA>             <NA>                <NA>               <NA> #> 36   3.87284605191684 64.8175428617341 0.00337816138611569 0.0309369649741816 #> 37   2.33506402907506 58.8088693481716 0.00464740789031593 0.0511799227195622 #> 38   1.73634050291345 54.4922436355021 0.00289351481082667  0.027826908022018 #> 39   2.12385008824179 53.0938863186518 0.00311607152935354 0.0364408623534715 #> 40   1.42681013974863 47.7391912673173 0.00383222421497901 0.0542538393375858 #> 41   1.21137217268569 43.6853348705211 0.00361253899493485 0.0566327792357842 #> 42  0.751722079401946 36.7080563517394 0.00181292711974292 0.0777841733939004 #> 43  0.368053318542217 24.5347414707767 0.00270999155404844  0.238475631761107 #> 44 0.0558281002196951 7.83975737065335 0.00185782645838179  0.984186809522653 #> 45               <NA>             <NA>                <NA>               <NA> #> 46               <NA>             <NA>                <NA>               <NA> #> 47               <NA>             <NA>                <NA>               <NA> #> 48   3.89367718207132 63.9136643505524 0.00355663820173057  0.040647902088574 #> 49   2.44697216058239 59.9102153214838 0.00266634743298305 0.0284079046379815 #> 50   1.97354919187321  55.908098545495 0.00393606783589978 0.0437129982620164 #> 51   1.76993055496303 52.2406579809348 0.00516926717014496 0.0576676635577591 #> 52   1.71807888787916 49.7755853851273 0.00466670581732844  0.064451438731421 #> 53  0.973504086890748 44.5381813192083 0.00473042491609529 0.0787522356715272 #> 54  0.755096066247884 39.1344677132216 0.00364895698680234  0.110525305332992 #> 55    0.3270863060844 24.1606300007625  0.0025769774685854  0.277563428723329 #> 56 0.0778754910218673 11.0473680039561 0.00354463176524788   1.96714439854017 #> 57               <NA>             <NA>                <NA>               <NA> #> 58               <NA>             <NA>                <NA>               <NA> #> 59               <NA>             <NA>                <NA>               <NA> #> 60   4.23228137013872 62.7907451091992  0.0037428523721675 0.0400478610655914 #> 61   2.04999029377022 56.7886423410983  0.0055144432708218 0.0609597725564142 #> 62   1.82965829860451 54.2506789753015 0.00501193817286104  0.047707441186669 #> 63   1.41097327515288 49.8880250871603 0.00336170349629692 0.0494910128776441 #> 64   1.10377243213561 45.1382699783275 0.00279529731895077 0.0492919665759434 #> 65   0.78090624140764 36.7644947357035 0.00222402345030208 0.0711029105699665 #> 66   0.40816792123528 25.5139178531688 0.00268270150953497  0.178479843577003 #> 67 0.0587696778987642 9.00779417971814 0.00306228703905092    2.0915745552542 #> 68               <NA>             <NA>                <NA>               <NA> #> 69               <NA>             <NA>                <NA>               <NA> #> 70               <NA>             <NA>                <NA>               <NA> #>                 stdA.bt             stddY.bt     stdintegral.bt reliable_fit.bt #> 1    0.0235155348376257   0.0233948018668494   1.13447584418552            TRUE #> 2    0.0174657226236165   0.0174749333124297  0.791045319061867            TRUE #> 3   0.00896000691478266  0.00902543325491346   1.18793628766828            TRUE #> 4    0.0149993051058857   0.0150620487922692  0.605886560399374            TRUE #> 5    0.0136473379919781   0.0134964826144209  0.785769280416452            TRUE #> 6    0.0055960023170666  0.00585698927826746  0.950469011012973            TRUE #> 7   0.00877285224742841  0.00869885262810902  0.809475839188496            TRUE #> 8   0.00674344357973925  0.00677035363978764  0.872503145759732            TRUE #> 9   0.00333277803992274  0.00337378075821242  0.444315539544839            TRUE #> 10  0.00160423901876075  0.00156034942314702  0.219129258507689            TRUE #> 11  0.00102024099723907  0.00113598679989787  0.142879564170613            TRUE #> 12                 <NA>                 <NA>               <NA>            <NA> #> 13   0.0288762707271792   0.0289184671116026   1.63285247535918            TRUE #> 14   0.0182700659095674   0.0182020235795202  0.649889295790557            TRUE #> 15   0.0196604804543207   0.0196192422491803  0.710146429723653            TRUE #> 16   0.0131937300600871   0.0131967313817798   1.06441262889903            TRUE #> 17  0.00744953317996944  0.00751563472755121   1.17225501928494            TRUE #> 18  0.00434298917735765  0.00455233458177012  0.491995824408507            TRUE #> 19  0.00302200325526358  0.00300575144777887  0.577658467298835            TRUE #> 20   0.0021297229618348  0.00215895074216422  0.734384909590482            TRUE #> 21  0.00342208913182603  0.00342870362635122  0.412404776434854            TRUE #> 22  0.00194634972032135  0.00196662342149411  0.292931480804653            TRUE #> 23 0.000709286408699663 0.000750032904973762  0.125307107417056            TRUE #> 24                 <NA>                 <NA>               <NA>            <NA> #> 25   0.0326505550831737   0.0325672785367617  0.967985082556776            TRUE #> 26   0.0110392675299235   0.0110089604064203  0.633462495088354            TRUE #> 27  0.00576401551843461  0.00567525594556649  0.520983323654778            TRUE #> 28  0.00849726777025546  0.00848678941478001   1.02128165182868            TRUE #> 29  0.00412246340809539  0.00406403018752451  0.920440616552347            TRUE #> 30  0.00576752911872446  0.00572584413860972  0.444026813331035            TRUE #> 31  0.00604422044204769  0.00607236105750676  0.242731075538947            TRUE #> 32  0.00408798398073495   0.0041820782866503  0.491839185525216            TRUE #> 33  0.00218492092155845  0.00220499801254098  0.281436245979207            TRUE #> 34  0.00058112999245457 0.000582514436776008 0.0941123839847224            TRUE #> 35                 <NA>                 <NA>               <NA>            <NA> #> 36   0.0180535384704998   0.0180487543981681   1.19988484986686            TRUE #> 37  0.00645336831581059  0.00644075471236288  0.356982393772314            TRUE #> 38   0.0077040443357108  0.00767971808769236  0.689931869639112            TRUE #> 39  0.00899703383100808   0.0089710951839945  0.689439990370446            TRUE #> 40  0.00694346880442243  0.00687544951113671   0.39690849430603            TRUE #> 41   0.0102485771578445   0.0101669510552393   1.21389199166306            TRUE #> 42  0.00917371284311082  0.00919519755560727  0.682752721063564            TRUE #> 43  0.00538916386365165  0.00543526311264025  0.397317362090112            TRUE #> 44 0.000549985496054444 0.000771488102854812  0.129797204152726            TRUE #> 45                 <NA>                 <NA>               <NA>            <NA> #> 46                 <NA>                 <NA>               <NA>            <NA> #> 47                 <NA>                 <NA>               <NA>            <NA> #> 48   0.0229256761341795   0.0229530374051178  0.991513382018106            TRUE #> 49   0.0145015581776553   0.0145380987724733   1.22881815661986            TRUE #> 50   0.0043559315860968  0.00434502430317218  0.702548423693346            TRUE #> 51  0.00868763102700423  0.00867902476381507  0.897828116907452            TRUE #> 52   0.0123720294971208    0.012427347730705  0.713203370580646            TRUE #> 53  0.00385898189376137  0.00382946651036852  0.416466843082655            TRUE #> 54  0.00448641445169279  0.00448072305912612   0.58719015383258            TRUE #> 55  0.00431318646745448  0.00437928425000381   0.39268015015797            TRUE #> 56 0.000701989339218844 0.000803548019823431  0.186380957510331            TRUE #> 57                 <NA>                 <NA>               <NA>            <NA> #> 58                 <NA>                 <NA>               <NA>            <NA> #> 59                 <NA>                 <NA>               <NA>            <NA> #> 60   0.0101460026318942   0.0100847368388832    1.1598144705983            TRUE #> 61  0.00536224150451344  0.00536295367012768  0.691445959313858            TRUE #> 62  0.00684132449629616  0.00688418504368284  0.911994206342625            TRUE #> 63  0.00779434735573736  0.00781134780470956  0.772469002470624            TRUE #> 64  0.00437694870879856  0.00442416177576886  0.528229001918564            TRUE #> 65  0.00680800753812628  0.00682665771769539  0.568329111117448            TRUE #> 66  0.00852300807687781  0.00855374230432042  0.540204605214674            TRUE #> 67  0.00140880722989746  0.00143650522654546  0.109166354659246            TRUE #> 68                 <NA>                 <NA>               <NA>            <NA> #> 69                 <NA>                 <NA>               <NA>            <NA> #> 70                 <NA>                 <NA>               <NA>            <NA> #>         ci90.mu.bt.lo      ci90.mu.bt.up  ci90.lambda.bt.lo ci90.lambda.bt.up #> 1   0.658805558772803  0.670565183605409    4.6231309370986  4.68473686039347 #> 2   0.602583650178357  0.620975820655108   4.56765651595522  4.67530247368754 #> 3   0.608161463992975  0.622460122897548   4.70428536574054  4.79172258071596 #> 4   0.564777329614883  0.577515709300541   4.38754065084324  4.49581443059808 #> 5   0.520069838902912  0.528272150335168   4.43703852716711  4.51567161072113 #> 6   0.477591976487689  0.493629558762957   4.63713158509256   4.8050767122774 #> 7   0.383094812518993  0.395017289211527   4.06350783813553   4.2027589299791 #> 8   0.256875360814155   0.26517224630092   3.67474262578904   3.8409492767324 #> 9   0.146735150122441  0.156673605439034   2.71913371603349  3.29246013298585 #> 10 0.0741395995258382 0.0816909742212956   2.13016659599455   3.2698321288059 #> 11 0.0370521228709258 0.0442820850661889   0.29736382256395  3.77559808267365 #> 12               <NA>               <NA>               <NA>              <NA> #> 13  0.661495838154455   0.68801684034225   4.58153142254612  4.72472700017228 #> 14  0.608094694869465  0.624330000630338    4.1685597946982  4.26426798822028 #> 15  0.593086565143936  0.613980634911025   4.17277621663675  4.32524359314442 #> 16  0.559243019537312  0.569633140803104   4.58882762628653  4.65319807079344 #> 17  0.528408944866758  0.543060304132204   4.26725644633888  4.36197506284619 #> 18  0.455209291456203  0.469270884472677   4.15407560708452  4.29418325078896 #> 19  0.386899076063857  0.401209110353584    4.5409007455889  4.68269062980916 #> 20  0.258779938271903  0.271776238114743   3.99228190471403  4.25564616268024 #> 21  0.146030071654914  0.153838189141932   2.82337743233796   3.2031941300269 #> 22 0.0736701470050251 0.0834940684454348   1.18940467562695  2.03359985258816 #> 23 0.0302448714889402 0.0503630964821206 -0.789036911037455   12.280022572521 #> 24               <NA>               <NA>               <NA>              <NA> #> 25  0.667032652327677  0.680869771770329   4.16575506991909   4.2512452289816 #> 26  0.604561797216657  0.613161880796632   4.53221520142476  4.58192544720124 #> 27  0.571633118852125  0.596527049070315   4.55074680347227  4.68443836523928 #> 28  0.526543254123792  0.542967445136249   4.58831441740545  4.71123315261349 #> 29  0.454952858117913  0.470700423556295   4.57146191267841  4.71637321954187 #> 30  0.382889375976982  0.392361826646427   4.15665898747653  4.29206453711114 #> 31  0.257086904876913  0.266391236611602   3.78647318864508  3.97120836354482 #> 32  0.139891463871155  0.152274354844987   2.90510839008045  3.51167927073267 #> 33 0.0668744592294728  0.083279833221227   1.25977598945717  3.68458658289829 #> 34 0.0346920146000736 0.0428095682983029   1.38205990994394  4.64102085261297 #> 35               <NA>               <NA>               <NA>              <NA> #> 36  0.471301098298669   0.48241524925899   3.83155645626256  3.93333907102762 #> 37  0.427921462901888  0.443211434861027   3.85829591197795  4.02667785772531 #> 38  0.414119946809532  0.423639610537152   4.15566449231407  4.24721501970651 #> 39  0.401878046829286  0.412129922160859   4.29637583380427  4.41626627094719 #> 40  0.336161578448375  0.348769596115656   4.07198437235842  4.25047950377908 #> 41   0.28877215984619  0.300657413139526   3.88193228923989  4.06825413292562 #> 42  0.204325997753078  0.210290527977032   3.25551165329214  3.51142158375807 #> 43  0.111009009275491  0.119924881488311   2.24440411410276   3.0289889425968 #> 44 0.0352844132555005 0.0413966623035766   0.38996013505538  3.62793473838491 #> 45               <NA>               <NA>               <NA>              <NA> #> 46               <NA>               <NA>               <NA>              <NA> #> 47               <NA>               <NA>               <NA>              <NA> #> 48  0.462460555030285  0.474161894713979   3.93174384804259    4.065475445914 #> 49  0.445601549296401  0.454373832350915   3.82651987908418  3.91998188534314 #> 50  0.412838384096833  0.425788047276943   3.97461336748722  4.11842913176926 #> 51  0.375302517671475  0.392309406661252   3.71234085275073  3.90206746585575 #> 52  0.348988830819227  0.364342292958237   4.10909557615139  4.32114080957777 #> 53  0.276929441244239  0.292492539218193    3.3611708228106  3.62026567816992 #> 54  0.220188362045021  0.232193430531601   3.19432298299096  3.55795123753651 #> 55  0.107907220654448  0.116385476526093   2.24874526451967  3.16192894501942 #> 56 0.0469208629702651 0.0585827014779306   0.16700309076353  6.63890816196069 #> 57               <NA>               <NA>               <NA>              <NA> #> 58               <NA>               <NA>               <NA>              <NA> #> 59               <NA>               <NA>               <NA>              <NA> #> 60  0.477075627361897  0.489389611666328   4.28911767503687  4.42087513794267 #> 61  0.422027865160321  0.440170383521325   3.78537363376094  3.98593128547154 #> 62  0.396662955007217   0.41315223159593   4.03579813506333  4.19275561656747 #> 63  0.355268921378785  0.366328925881602   3.90158017660808  4.06440560897553 #> 64  0.287408996181679  0.296605524361027   3.55463748247424  3.71680805250909 #> 65  0.205370357174287   0.21268739432578   3.19449339914042  3.42842197491561 #> 66   0.11815391801484   0.12698000598121    2.4283460711909  3.01554475655924 #> 67 0.0370384411180012 0.0471133654764787  -1.14571058646803  5.73556970031828 #> 68               <NA>               <NA>               <NA>              <NA> #> 69               <NA>               <NA>               <NA>              <NA> #> 70               <NA>               <NA>               <NA>              <NA> #>          ci90.A.bt.lo       ci90.A.bt.up ci90.integral.bt.lo #> 1    6.94519082318814   7.02255693280393    71.7691084034912 #> 2    3.61949211074742   3.67695433817912    64.4177132755211 #> 3    3.45030256794719   3.47978099069682    62.0276513847042 #> 4    2.67103572731984   2.72038344111821    60.1240112055782 #> 5     1.9010034037778   1.94590314577141    55.0627094092152 #> 6     1.5859173877533   1.60432823537644    51.6421861192865 #> 7    1.33971895496139   1.36858163885543    47.2014217161259 #> 8   0.760539155756101  0.782725085133443    36.7936169083685 #> 9   0.452356191192923  0.463321030944269    27.6830106258508 #> 10  0.193543122919954  0.198821069291677    15.3734454879324 #> 11 0.0951977643910851 0.0985543572720017    6.96295444463187 #> 12               <NA>               <NA>                <NA> #> 13   6.35878425114008    6.4537871818325    70.9973027319881 #> 14   3.84824566846766   3.90835418531014    66.5983219233332 #> 15    3.6440066730138   3.70868965370851    64.5514989629392 #> 16   2.64032596250888   2.68373333440657    58.2600875213707 #> 17   2.23428137110002   2.25879033526212    56.8735830754446 #> 18   1.48086117245882   1.49514960685233    51.6545892242547 #> 19   1.06570755221127   1.07564994292108    46.0725751360795 #> 20  0.770422867668292  0.777429656212729     38.053738285523 #> 21  0.438580549264908  0.449839222508615     28.315114508162 #> 22   0.19291916893968  0.199322659519537    17.6094109744393 #> 23 0.0951577709190113 0.0974913232036332    7.13976785078487 #> 24               <NA>               <NA>                <NA> #> 25   6.83968356757634   6.94710389379998    74.0970047849689 #> 26   3.47945896851522   3.51577815868867    64.3061737282131 #> 27   2.64294667988518   2.66191029094083    61.2841613457042 #> 28   2.12330934728049   2.15126535824463    56.3687988462706 #> 29   1.53445972577957    1.5480226303922    50.1974052319663 #> 30   1.26829618783973   1.28727135864033    47.3562212803021 #> 31  0.760027412077134  0.779912897331471    38.7098421169841 #> 32  0.434528030275028  0.447977497571646    26.3521458725688 #> 33  0.179738605741705  0.186926995573632    15.7417356781101 #> 34 0.0897637947590629 0.0916757124342384    7.60984662425363 #> 35               <NA>               <NA>                <NA> #> 36   3.89734171681136   3.95673785837931    62.8437322837031 #> 37   2.37478700492196   2.39601858668098    58.2216333104161 #> 38   1.77086495563555   1.79621126150004    53.3573057099457 #> 39   2.16741333539762   2.19701357670164    51.9597575344924 #> 40   1.47210352164669   1.49494753401324    47.0862767941839 #> 41   1.25168085617928   1.28539867502859    41.6884825442354 #> 42  0.790011542176384  0.820193057430218    35.5849281255898 #> 43  0.410217767161445  0.427948116272859    23.8811544101385 #> 44  0.112847763513637  0.114657215795657    7.62624096982212 #> 45               <NA>               <NA>                <NA> #> 46               <NA>               <NA>                <NA> #> 47               <NA>               <NA>                <NA> #> 48   3.90782743177849   3.98325290625994    62.2826248371326 #> 49   2.47072372825088   2.51843385465537    57.8888094538441 #> 50   2.01497158636021   2.02930260127847    54.7524063885195 #> 51    1.8131632929332   1.84174559901205     50.763730728622 #> 52   1.75398129378859   1.79468527083412    48.6023658405222 #> 53   1.01615864924041   1.02885469967088    43.8530933623374 #> 54  0.794949479598434  0.809709783144503     38.168539910167 #> 55  0.367758680928765   0.38194906440669    23.5146711537527 #> 56   0.12785238028084   0.13016192520687    10.7407713288516 #> 57               <NA>               <NA>                <NA> #> 58               <NA>               <NA>                <NA> #> 59               <NA>               <NA>                <NA> #> 60   4.27328561041413   4.30666595907306     60.882850305065 #> 61    2.0921871435253   2.10982891807515     55.651213738027 #> 62   1.86653639285738    1.8890443504502    52.7504485058678 #> 63   1.44879848909135   1.47444189189173    48.6173135780961 #> 64   1.14756712258409   1.16196728383604    44.2693332701715 #> 65  0.823414492314949  0.845812837115385    35.8295933479153 #> 66    0.4488581639439  0.476898860516828    24.6252812775906 #> 67  0.110492507476721  0.115127483263083    8.82821552630368 #> 68               <NA>               <NA>                <NA> #> 69               <NA>               <NA>                <NA> #> 70               <NA>               <NA>                <NA> #>    ci90.integral.bt.up      ci95.mu.bt.lo      ci95.mu.bt.up #> 1     75.5015339308615  0.657679637246277  0.671691105131935 #> 2     67.0202523752347  0.600822697685902  0.622736773147563 #> 3     65.9359617711329  0.606792443459558  0.623829143430965 #> 4     62.1173779892922   0.56355769751732  0.578735341398104 #> 5     57.6478903417854   0.51928451121259   0.52905747802549 #> 6     54.7692291655192  0.476056463291121  0.495165071959525 #> 7      49.864597227056  0.381953298793112  0.396158802937408 #> 8      39.664152257918  0.256080978161166  0.265966628953908 #> 9     29.1448087509533  0.145783595890002  0.157625159671473 #> 10    16.0943807484227 0.0734165955656349 0.0824139781814989 #> 11    7.43302821075319  0.036359892447975 0.0449743154891396 #> 12                <NA>               <NA>               <NA> #> 13    76.3693873759199  0.658956593264134  0.690556085232571 #> 14    68.7364577064841  0.606540250700871  0.625884444798933 #> 15    66.8878807167301  0.591086069102406  0.615981130952555 #> 16    61.7620050704485  0.558248220692715  0.570627939647701 #> 17    60.7303020888921  0.527006155149854  0.544463093849108 #> 18    53.2732554865587  0.453862968720584  0.470617207208296 #> 19    47.9730714934927  0.385528966397819  0.402579220019622 #> 20    40.4698646380757  0.257535611691205  0.273020564695441 #> 21    29.6719262226327  0.145282485938072  0.154585774858774 #> 22    18.5731555462866 0.0727295587820072 0.0844346566684528 #> 23    7.55202823418698 0.0283186584576783 0.0522893095133826 #> 24                <NA>               <NA>               <NA> #> 25    77.2816757065807  0.665707821742742  0.682194602355264 #> 26    66.3902653370538     0.603738384959  0.613985293054289 #> 27    62.9981964805285  0.569249657448256  0.598910510474184 #> 28    59.7288154807869  0.524970725197067  0.544539974062973 #> 29    53.2256548604235  0.453445112490834  0.472208169183374 #> 30    48.8170694961612  0.381982439210759  0.393268763412651 #> 31    39.5084273555073  0.256196064604443  0.267282076884073 #> 32    27.9702967929468  0.138705867926852   0.15345995078929 #> 33    16.6676609273817   0.06530373193239 0.0848505605183098 #> 34    7.91947636756337 0.0339148020119453 0.0435867808864313 #> 35                <NA>               <NA>               <NA> #> 36    66.7913534397651  0.470236977462043  0.483479370095616 #> 37    59.3961053859271  0.426457529416438  0.444675368346477 #> 38    55.6271815610584  0.413208489644122  0.424551067702562 #> 39    54.2280151028112   0.40089648429754  0.413111484692606 #> 40    48.3921057404508  0.334954427820656  0.349976746743374 #> 41    45.6821871968068  0.287634210062786  0.301795362922931 #> 42    37.8311845778889  0.203754925710359  0.210861600019751 #> 43     25.188328531415  0.110155361935966  0.120778528827836 #> 44    8.05327377148459 0.0346991979211102 0.0419818776379668 #> 45                <NA>               <NA>               <NA> #> 46                <NA>               <NA>               <NA> #> 47                <NA>               <NA>               <NA> #> 48    65.5447038639722   0.46134021399674  0.475282235747524 #> 49    61.9316211891235  0.444761649855011  0.455213731792305 #> 50    57.0637907024706  0.411598522728525  0.427027908645252 #> 51    53.7175852332475   0.37367419851288  0.393937725819848 #> 52    50.9488049297325  0.347518818486768  0.365812305290696 #> 53    45.2232692760793  0.275439357395669  0.293982623066763 #> 54    40.1003955162762  0.219038940594179  0.233342851982444 #> 55    24.8065888477724  0.107095472751843  0.117197224428698 #> 56    11.3539646790606  0.045804303964212 0.0596992604839836 #> 57                <NA>               <NA>               <NA> #> 58                <NA>               <NA>               <NA> #> 59                <NA>               <NA>               <NA> #> 60    64.6986399133334  0.475896628864664  0.490568610163561 #> 61    57.9260709441696  0.420290815530012  0.441907433151634 #> 62    55.7509094447351  0.395084194482765  0.414730992120381 #> 63    51.1587365962245  0.354209984777451  0.367387862482935 #> 64    46.0072066864836   0.28652847752621  0.297486043016497 #> 65    37.6993961234917  0.204669789787441  0.213387961712626 #> 66    26.4025544287469  0.117308867039337  0.127825056956714 #> 67     9.1873728331326 0.0360738207007001 0.0480779858937797 #> 68                <NA>               <NA>               <NA> #> 69                <NA>               <NA>               <NA> #> 70                <NA>               <NA>               <NA> #>      ci95.lambda.bt.lo ci95.lambda.bt.up       ci95.A.bt.lo       ci95.A.bt.up #> 1      4.6172324976342  4.69063529985788   6.93778342971429   7.02996432627778 #> 2     4.55734998808723  4.68560900155553   3.61399040812098   3.68245604080556 #> 3     4.69591371749821  4.80009422895829   3.44748016576903   3.48260339287498 #> 4     4.37717401235608  4.50618106908524   2.66631094621149   2.72510822222656 #> 5      4.4295098276779  4.52320031021034   1.89670449231033   1.95020205723888 #> 6     4.62105173248975  4.82115656488021   1.58415464702342   1.60609097610632 #> 7      4.0501752867888  4.21609148132583   1.33695550650345   1.37134508731337 #> 8     3.65882922303914   3.8568626794823  0.758414971028483  0.784849269861061 #> 9     2.66424076121891  3.34735308780043  0.451306366110347  0.464370856026845 #> 10    2.02104968327857  3.37894904152188  0.193037787629045  0.199326404582587 #> 11 -0.0356586065954891  4.10862051183309 0.0948763884769548  0.098875733186132 #> 12                <NA>              <NA>               <NA>               <NA> #> 13    4.56782120766702  4.73843721505138   6.34968822586102   6.46288320711156 #> 14    4.15939624425459  4.27343153866389   3.84249059770615   3.91410925607165 #> 15    4.15817827633282  4.33984153344835   3.63781362167069   3.71488270505163 #> 16    4.58266449862097    4.659361198459   2.63616993753995   2.68788935937549 #> 17    4.25818764263073  4.37104386655434   2.23193476814833   2.26113693821381 #> 18    4.14066104545325  4.30759781242024   1.47949313086795    1.4965176484432 #> 19    4.52732511837632  4.69626625702173   1.06475562118586   1.07660187394649 #> 20    3.96706617788748  4.28086188950679  0.769752004935314  0.778100518945707 #> 21    2.78701200383583  3.23955955852903  0.437502591188383  0.450917180585141 #> 22    1.10857747783279  2.11442705038232  0.192306068777778  0.199935759681438 #> 23   -2.04032984031433  13.5313155017979 0.0949343457002709 0.0977147484223736 #> 24                <NA>              <NA>               <NA>               <NA> #> 25    4.15756984192375  4.25943045697695   6.82939864272514   6.95738881865118 #> 26    4.52745570980786  4.58668493881813   3.47598159924329   3.51925552796059 #> 27    4.53794654755841  4.69723862115314   2.64113101499687   2.66372595582914 #> 28    4.57654560233234   4.7230019676866   2.12063270793286   2.15394199759226 #> 29    4.55758742585106  4.73024770636922   1.53316114980602   1.54932120636575 #> 30    4.14369462634131  4.30502889824637   1.26647941616733   1.28908813031273 #> 31    3.76878577828234  3.98889577390756  0.758123482637889  0.781816826770716 #> 32    2.84703245469885  3.56975520611427  0.433240315321096  0.449265212525577 #> 33    1.02761327306387  3.91674929929159  0.179050355651414  0.187615245663923 #> 34    1.07003173458201   4.9530490279749 0.0895807388114397 0.0918587683818616 #> 35                <NA>              <NA>               <NA>               <NA> #> 36     3.8218113122957  3.94308421499449   3.89165485219316   3.96242472299752 #> 37    3.84217423632129  4.04279953338197   2.37275419390248   2.39805139770046 #> 38    4.14689901628713  4.25598049573344    1.7684381816698   1.79863803546579 #> 39    4.28489696216293  4.42774514258854   2.16457926974085    2.1998476423584 #> 40    4.05489441296708  4.26756946317042    1.4699163289733   1.49713472668663 #> 41    3.86409296378062  4.08609345838489   1.24845255437456   1.28862697683331 #> 42    3.23100963867306  3.53592359837715  0.787121822630804  0.823082776975798 #> 43    2.16928429009801  3.10410876660155  0.408520180544395  0.429645702889909 #> 44  0.0799412900557441  3.93795358338454   0.11267451808238  0.114830461226914 #> 45                <NA>              <NA>               <NA>               <NA> #> 46                <NA>              <NA>               <NA>               <NA> #> 47                <NA>              <NA>               <NA>               <NA> #> 48    3.91893975888469   4.0782795350719   3.90060584379622    3.9904744942422 #> 49    3.81757138912322   3.9289303753041   2.46615573742492   2.52300184548133 #> 50    3.96084377303469  4.13219872622179   2.01359946791059   2.03067471972809 #> 51    3.69417553873003  3.92023277987645    1.8104266891597   1.84448220278555 #> 52    4.08879337295099  4.34144301277816     1.750084104497   1.79858246012571 #> 53    3.33636386857407  3.64507263240645   1.01494306994387   1.03007027896742 #> 54    3.15950751181107   3.5927667087164  0.793536259046151  0.811123003696787 #> 55    2.16131278447182  3.24936142506727  0.366400027191517  0.383307718143938 #> 56  -0.452647394776624  7.25855864750085  0.127631253638986  0.130383051848724 #> 57                <NA>              <NA>               <NA>               <NA> #> 58                <NA>              <NA>               <NA>               <NA> #> 59                <NA>              <NA>               <NA>               <NA> #> 60    4.27650259880121  4.43349021417833   4.27008961958509   4.30986194990211 #> 61    3.76617130540567  4.00513361382681   2.09049803745138   2.11151802414907 #> 62    4.02077029108953  4.20778346054127   1.86438137564105   1.89119936766653 #> 63    3.88599050755162  4.07999527803198    1.4463432696743   1.47689711130879 #> 64    3.53911051300282  3.73233502198052   1.14618838374082   1.16334602267931 #> 65    3.17209598231089  3.45081939174515  0.821269969940439  0.847957359489894 #> 66    2.37212492046415    3.071765907286  0.446173416399684  0.479583608061045 #> 67    -1.8045565713731  6.39441568522335  0.110048733199303  0.115571257540501 #> 68                <NA>              <NA>               <NA>               <NA> #> 69                <NA>              <NA>               <NA>               <NA> #> 70                <NA>              <NA>               <NA>               <NA> #>    ci95.integral.bt.lo ci95.integral.bt.up #> 1     71.4117485125727      75.85889382178 #> 2     64.1685340000166    67.2694316507392 #> 3     61.6534514540887    66.3101617017484 #> 4     59.9331569390524     62.308232255818 #> 5      54.815192085884    57.8954076651165 #> 6     51.3427883808174    55.0686269039883 #> 7     46.9464368267815    50.1195821164004 #> 8     36.5187784174542    39.9389907488323 #> 9     27.5430512308942    29.2847681459099 #> 10    15.3044197715024    16.1634064648526 #> 11    6.91794738191813    7.47803527346693 #> 12                <NA>                <NA> #> 13      70.48295420225     76.883735905658 #> 14    66.3936067951592    68.9411728346581 #> 15    64.3278028375763     67.111576842093 #> 16    57.9247975432675    62.0972950485517 #> 17    56.5043227443699    61.0995624199669 #> 18     51.499610539566    53.4282341712473 #> 19    45.8906127188804    48.1550339106918 #> 20     37.822407039002    40.7011958845967 #> 21     28.185207003585    29.8018337272097 #> 22    17.5171375579858      18.66542896274 #> 23    7.10029611194849    7.59149997302335 #> 24                <NA>                <NA> #> 25    73.7920894839635    77.5865910075861 #> 26    64.1066330422603    66.5898060230067 #> 27     61.120051598753    63.1623062274797 #> 28    56.0470951259446     60.050519201113 #> 29    49.9074664377523    53.5155936546375 #> 30    47.2163528341028    48.9569379423605 #> 31    38.6333818281893     39.584887644302 #> 32    26.1972165291283    28.1252261363872 #> 33    15.6530832606266    16.7563133448651 #> 34    7.58020122329844    7.94912176851856 #> 35                <NA>                <NA> #> 36    62.4657685559951    67.1693171674732 #> 37    58.1091838563779    59.5085548399653 #> 38    53.1399771710094    55.8445100999947 #> 39    51.7425839375257    54.4451886997779 #> 40    46.9612506184775    48.5171319161571 #> 41    41.3061065668615    46.0645631741807 #> 42    35.3698610184548     38.046251685024 #> 43    23.7559994410801    25.3134835004734 #> 44    7.58535485051401    8.09415989079269 #> 45                <NA>                <NA> #> 46                <NA>                <NA> #> 47                <NA>                <NA> #> 48    61.9702981217969    65.8570305793079 #> 49    57.5017317345089    62.3186989084587 #> 50    54.5311036350561     57.285093455934 #> 51    50.4809148717962    54.0004010900734 #> 52    48.3777067787893    51.1734639914654 #> 53    43.7219063067663    45.3544563316504 #> 54    37.9835750117097    40.2853604147334 #> 55    23.3909769064529    24.9302830950721 #> 56    10.6820613272359    11.4126746806764 #> 57                <NA>                <NA> #> 58                <NA>                <NA> #> 59                <NA>                <NA> #> 60    60.5175087468266    65.0639814715719 #> 61    55.4334082608432    58.1438764213535 #> 62    52.4631703308699     56.038187619733 #> 63    48.3739858423179    51.4020643320027 #> 64    44.1029411345672    46.1735988220879 #> 65    35.6505696779133    37.8784197934937 #> 66     24.455116826948    26.5727188793895 #> 67    8.79382812458602    9.22176023485026 #> 68                <NA>                <NA> #> 69                <NA>                <NA> #> 70                <NA>                <NA> # }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"Generic summary function gcFitLinear objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"","code":"# S3 method for gcFitLinear summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"object object class gcFitLinear ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"dataframe parameters extracted linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'l'))  summary(TestFit) #>           mu.linfit       tD.linfit    lambda.linfit        dY.linfit #> 1 0.646282467345825 1.0725142883832 4.04468404089961 7.42998023609277 #>           A.linfit tmu.start.linfit tmu.end.linfit       r2mu.linfit #> 1 7.48642902855333              6.5           9.75 0.999223753138396 #>   reliable_fit.linfit mu2.linfit tD2.linfit tmu2.start.linfit tmu2.end.linfit #> 1                TRUE       <NA>       <NA>              <NA>            <NA> #>   r2mu2.linfit reliable_fit2.linfit #> 1         <NA>                FALSE"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitModel objects — summary.gcFitModel","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"Generic summary function gcFitModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"","code":"# S3 method for gcFitModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"object object class gcFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"dataframe parameters extracted growth model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'm')) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  summary(TestFit) #>            mu.model          tD.model     lambda.model          A.model #> 1 0.795217856193375 0.871644386706768 5.12640341439288 4.79955396431165 #>           dY.model     A.orig.model    dY.orig.model   integral.model #> 1 4.78999686960032 6.69887363215404 6.63515682117098 76.0998137586059 #>   parameter_nu.model parameter_alpha.model parameter_t_shift.model #> 1               <NA>                  <NA>                    <NA> #>    parameter_y0.model         stdmu.model  stdlambda.model          stdA.model #> 1 0.00952091287322334 0.00236454685850645 0.01448371357482 0.00233363802742013 #>   reliable_fit.model  ci90.mu.model.lo  ci90.mu.model.up ci90.lambda.model.lo #> 1               TRUE 0.791328176611132 0.799107535775618      5.1025777055623 #>   ci90.lambda.model.up  ci90.A.model.lo  ci90.A.model.up  ci95.mu.model.lo #> 1     5.15022912322346 4.79571512975655 4.80339279886676 0.790583344350703 #>    ci95.mu.model.up ci95.lambda.model.lo ci95.lambda.model.up  ci95.A.model.lo #> 1 0.799852368036048     5.09801533578624     5.15479149299953 4.79498003377791 #>   ci95.A.model.up #> 1 4.8041278948454"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"Generic summary function gcFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"","code":"# S3 method for gcFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"object object class gcFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"dataframe parameters extracted nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitSpline(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 's'))  summary(TestFit) #>           mu.spline        tD.spline tmax.spline    lambda.spline mu2.spline #> 1 0.660829640281948 1.04890449566428           8 4.53457191374002       <NA> #>   tD2.spline tmax2.spline lambda2.spline          y0.spline         A.spline #> 1       <NA>         <NA>           <NA> 0.0526545467419268 6.77568968525426 #>          dY.spline  integral.spline reliable_fit.spline reliable_fit2.spline #> 1 6.72303513851234 76.5449300032071                TRUE                FALSE #>   smooth.spline #> 1          0.55"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"Generate grouped results table linear fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"","code":"table_group_fluorescence_linear(flTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"flTable object class flTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"data frame grouped linear fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"","code":"# \\donttest{ # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"l\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  table_group_fluorescence_linear(res$flFit$flTable) #>             Sample|Conc. slope_max lagtime        dY     Y_max x_start(mumax) #> 1       pSEVA634∙GFP | 0                                                      #> 2      pSEVA634r∙GFP | 0                                                      #> 3     pSEVA634rκ∙GFP | 0    75.796  23.666   376.798  2228.283             16 #> 4    pSEVA634∙GFP | 0.01   262.266  17.259  5820.567  7503.259             30 #> 5   pSEVA634r∙GFP | 0.01                                                      #> 6  pSEVA634rκ∙GFP | 0.01   225.688  13.904  3020.995  4880.808             15 #> 7    pSEVA634∙GFP | 0.05   658.849  10.171 15562.241     17045             16 #> 8   pSEVA634r∙GFP | 0.05   307.497  14.566  3856.069   5224.49           14.5 #> 9  pSEVA634rκ∙GFP | 0.05   385.864   7.481  6056.345  7883.268             10 #> 10    pSEVA634∙GFP | 0.1   786.634   1.892 18027.038 19670.602            2.5 #> 11   pSEVA634r∙GFP | 0.1   514.144  11.836  6070.424  6990.424             15 #> 12  pSEVA634rκ∙GFP | 0.1   404.264   6.785  7467.593  9260.697           15.5 #> 13    pSEVA634∙GFP | 0.2   810.584   2.174 18686.014 20250.899            3.5 #> 14   pSEVA634r∙GFP | 0.2    540.02  11.918  6008.673  7054.127             15 #> 15  pSEVA634rκ∙GFP | 0.2   391.915    6.01   7526.82  9138.889             16 #> 16    pSEVA634∙GFP | 0.5   820.283   1.388 18860.637 20504.202              5 #> 17   pSEVA634r∙GFP | 0.5   494.059  11.004  6225.536  7150.065             15 #> 18  pSEVA634rκ∙GFP | 0.5    429.55   7.469  7650.517  9370.143           15.5 #> 19      pSEVA634∙GFP | 1   877.851   2.083 17785.309 19449.102            3.5 #> 20     pSEVA634r∙GFP | 1   559.313  12.303  6148.718  7412.869             16 #> 21    pSEVA634rκ∙GFP | 1   395.584   6.293  7763.536  9317.992             15 #>    x_end(mumax) #> 1               #> 2               #> 3          19.5 #> 4          34.5 #> 5               #> 6            20 #> 7            20 #> 8          19.5 #> 9          14.5 #> 10          6.5 #> 11           19 #> 12           20 #> 13          8.5 #> 14         19.5 #> 15           20 #> 16            9 #> 17         19.5 #> 18           20 #> 19            8 #> 20         19.5 #> 21           20  # with HTML formatting DT::datatable(table_group_fluorescence_linear(res$flFit$flTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\"],[\"pSEVA634∙GFP | 0\",\"pSEVA634r∙GFP | 0\",\"pSEVA634rκ∙GFP | 0\",\"pSEVA634∙GFP | 0.01\",\"pSEVA634r∙GFP | 0.01\",\"pSEVA634rκ∙GFP | 0.01\",\"pSEVA634∙GFP | 0.05\",\"pSEVA634r∙GFP | 0.05\",\"pSEVA634rκ∙GFP | 0.05\",\"pSEVA634∙GFP | 0.1\",\"pSEVA634r∙GFP | 0.1\",\"pSEVA634rκ∙GFP | 0.1\",\"pSEVA634∙GFP | 0.2\",\"pSEVA634r∙GFP | 0.2\",\"pSEVA634rκ∙GFP | 0.2\",\"pSEVA634∙GFP | 0.5\",\"pSEVA634r∙GFP | 0.5\",\"pSEVA634rκ∙GFP | 0.5\",\"pSEVA634∙GFP | 1\",\"pSEVA634r∙GFP | 1\",\"pSEVA634rκ∙GFP | 1\"],[\"\",\"\",\"75.796\",\"262.266\",\"\",\"225.688\",\"658.849\",\"307.497\",\"385.864\",\"786.634\",\"514.144\",\"404.264\",\"810.584\",\"540.02\",\"391.915\",\"820.283\",\"494.059\",\"429.55\",\"877.851\",\"559.313\",\"395.584\"],[\"\",\"\",\"23.666\",\"17.259\",\"\",\"13.904\",\"10.171\",\"14.566\",\"7.481\",\"1.892\",\"11.836\",\"6.785\",\"2.174\",\"11.918\",\"6.01\",\"1.388\",\"11.004\",\"7.469\",\"2.083\",\"12.303\",\"6.293\"],[\"\",\"\",\"376.798\",\"5820.567\",\"\",\"3020.995\",\"15562.241\",\"3856.069\",\"6056.345\",\"18027.038\",\"6070.424\",\"7467.593\",\"18686.014\",\"6008.673\",\"7526.82\",\"18860.637\",\"6225.536\",\"7650.517\",\"17785.309\",\"6148.718\",\"7763.536\"],[\"\",\"\",\"2228.283\",\"7503.259\",\"\",\"4880.808\",\"17045\",\"5224.49\",\"7883.268\",\"19670.602\",\"6990.424\",\"9260.697\",\"20250.899\",\"7054.127\",\"9138.889\",\"20504.202\",\"7150.065\",\"9370.143\",\"19449.102\",\"7412.869\",\"9317.992\"],[\"\",\"\",\"16\",\"30\",\"\",\"15\",\"16\",\"14.5\",\"10\",\"2.5\",\"15\",\"15.5\",\"3.5\",\"15\",\"16\",\"5\",\"15\",\"15.5\",\"3.5\",\"16\",\"15\"],[\"\",\"\",\"19.5\",\"34.5\",\"\",\"20\",\"20\",\"19.5\",\"14.5\",\"6.5\",\"19\",\"20\",\"8.5\",\"19.5\",\"20\",\"9\",\"19.5\",\"20\",\"8\",\"19.5\",\"20\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>slope<sub>max<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>x<sub>start<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n      <th>x<sub>end<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}# }"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"Generate grouped results table spline fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"","code":"table_group_fluorescence_spline(flTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"flTable object class flTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"data frame grouped spline fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  table_group_fluorescence_spline(res$flFit$flTable) #>           Sample | Conc. slope_max lagtime     Y_max        dY x(slope_max) #> 1       pSEVA634∙GFP | 0    92.267  15.547  3427.126  2135.701         20.5 #> 2      pSEVA634r∙GFP | 0    30.773  31.287  1470.992   282.714           20 #> 3     pSEVA634rκ∙GFP | 0    64.176  20.813  2196.189   630.596           16 #> 4    pSEVA634∙GFP | 0.01   242.558  14.983  7592.801  6072.997         23.5 #> 5   pSEVA634r∙GFP | 0.01    64.653  21.671  2384.304  1128.582           19 #> 6  pSEVA634rκ∙GFP | 0.01    205.58  12.566  4820.287  3196.134           18 #> 7    pSEVA634∙GFP | 0.05   509.395    6.96 17121.214 15989.029         21.5 #> 8   pSEVA634r∙GFP | 0.05   204.032  13.436  5206.543  3800.827         17.5 #> 9  pSEVA634rκ∙GFP | 0.05   290.961   4.674  7768.189  6299.664           13 #> 10    pSEVA634∙GFP | 0.1   670.985   0.373  20079.01 18869.536            6 #> 11   pSEVA634r∙GFP | 0.1   327.195   9.868  6840.378  5652.539           17 #> 12  pSEVA634rκ∙GFP | 0.1   335.244   3.651  9191.863  7723.924         17.5 #> 13    pSEVA634∙GFP | 0.2   728.625   0.554 20481.098 19589.302          6.5 #> 14   pSEVA634r∙GFP | 0.2   346.268   9.758  7000.845  5718.068         16.5 #> 15  pSEVA634rκ∙GFP | 0.2   320.247   3.214  9006.211  7463.562         17.5 #> 16    pSEVA634∙GFP | 0.5   774.054   0.247 20704.091 19571.651          5.5 #> 17   pSEVA634r∙GFP | 0.5   337.909   8.089  6952.687  6090.024         16.5 #> 18  pSEVA634rκ∙GFP | 0.5   351.644   4.845  9322.628  7720.204           18 #> 19      pSEVA634∙GFP | 1   779.134   0.462 19774.702 18757.659            6 #> 20     pSEVA634r∙GFP | 1   353.185   9.572  7189.597  5865.901         16.5 #> 21    pSEVA634rκ∙GFP | 1   338.827   5.016  9258.531  7551.009           18  # with HTML formatting DT::datatable(table_group_fluorescence_spline(res$flFit$flTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\"],[\"pSEVA634∙GFP | 0\",\"pSEVA634r∙GFP | 0\",\"pSEVA634rκ∙GFP | 0\",\"pSEVA634∙GFP | 0.01\",\"pSEVA634r∙GFP | 0.01\",\"pSEVA634rκ∙GFP | 0.01\",\"pSEVA634∙GFP | 0.05\",\"pSEVA634r∙GFP | 0.05\",\"pSEVA634rκ∙GFP | 0.05\",\"pSEVA634∙GFP | 0.1\",\"pSEVA634r∙GFP | 0.1\",\"pSEVA634rκ∙GFP | 0.1\",\"pSEVA634∙GFP | 0.2\",\"pSEVA634r∙GFP | 0.2\",\"pSEVA634rκ∙GFP | 0.2\",\"pSEVA634∙GFP | 0.5\",\"pSEVA634r∙GFP | 0.5\",\"pSEVA634rκ∙GFP | 0.5\",\"pSEVA634∙GFP | 1\",\"pSEVA634r∙GFP | 1\",\"pSEVA634rκ∙GFP | 1\"],[\"92.267\",\"30.773\",\"64.176\",\"242.558\",\"64.653\",\"205.58\",\"509.395\",\"204.032\",\"290.961\",\"670.985\",\"327.195\",\"335.244\",\"728.625\",\"346.268\",\"320.247\",\"774.054\",\"337.909\",\"351.644\",\"779.134\",\"353.185\",\"338.827\"],[\"15.547\",\"31.287\",\"20.813\",\"14.983\",\"21.671\",\"12.566\",\"6.96\",\"13.436\",\"4.674\",\"0.373\",\"9.868\",\"3.651\",\"0.554\",\"9.758\",\"3.214\",\"0.247\",\"8.089\",\"4.845\",\"0.462\",\"9.572\",\"5.016\"],[\"3427.126\",\"1470.992\",\"2196.189\",\"7592.801\",\"2384.304\",\"4820.287\",\"17121.214\",\"5206.543\",\"7768.189\",\"20079.01\",\"6840.378\",\"9191.863\",\"20481.098\",\"7000.845\",\"9006.211\",\"20704.091\",\"6952.687\",\"9322.628\",\"19774.702\",\"7189.597\",\"9258.531\"],[\"2135.701\",\"282.714\",\"630.596\",\"6072.997\",\"1128.582\",\"3196.134\",\"15989.029\",\"3800.827\",\"6299.664\",\"18869.536\",\"5652.539\",\"7723.924\",\"19589.302\",\"5718.068\",\"7463.562\",\"19571.651\",\"6090.024\",\"7720.204\",\"18757.659\",\"5865.901\",\"7551.009\"],[\"20.5\",\"20\",\"16\",\"23.5\",\"19\",\"18\",\"21.5\",\"17.5\",\"13\",\"6\",\"17\",\"17.5\",\"6.5\",\"16.5\",\"17.5\",\"5.5\",\"16.5\",\"18\",\"6\",\"16.5\",\"18\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>slope<sub>max<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>x(slope<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"Generate grouped results table linear fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"","code":"table_group_growth_linear(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"data frame grouped linear fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"","code":"# \\donttest{ # Create random growth data set rnd.data <- rdm.data(d = 30, mu = 0.6, A = 4.5, label = \"Test2\")   # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"l\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_linear(res$gcFit$gcTable) #>     Sample|Conc.         mumax            tD       lagtime            dY #> 1      Test2 | 0 0.471 ± 0.011 1.472 ± 0.034 4.041 ± 0.113 4.304 ± 0.476 #> 2  Test2 | 0.039 0.388 ± 0.015 1.786 ± 0.068 3.896 ± 0.147 1.833 ± 0.292 #> 3  Test2 | 0.059 0.343 ± 0.002 2.019 ± 0.009 3.873 ± 0.191  1.56 ± 0.094 #> 4  Test2 | 0.088 0.288 ± 0.005 2.404 ± 0.041 3.602 ± 0.191 1.114 ± 0.026 #> 5   Test2 | 0.13  0.226 ± 0.01 3.072 ± 0.139 3.875 ± 0.321 0.869 ± 0.036 #> 6    Test2 | 0.2 0.128 ± 0.002 5.401 ± 0.103 2.726 ± 0.276 0.409 ± 0.025 #> 7    Test2 | 0.3 0.015 ± 0.026        15.484         2.076 0.023 ± 0.039 #> 8   Test2 | 0.44                                                         #> 9   Test2 | 0.67                                                         #> 10     Test2 | 1                                                         #>            Y_max t_start(mumax)   t_end(mumax) #> 1  4.359 ± 0.478   6.917 ± 0.52   10.25 ± 0.25 #> 2  1.885 ± 0.296  6.833 ± 0.289  10.083 ± 0.52 #> 3  1.617 ± 0.095  6.667 ± 0.144  10.25 ± 0.661 #> 4  1.169 ± 0.027  7.667 ± 0.144   10.25 ± 0.25 #> 5  0.925 ± 0.036  9.167 ± 0.382 11.083 ± 0.144 #> 6  0.459 ± 0.026  9.083 ± 2.517 11.417 ± 2.504 #> 7          0.119            8.5          10.25 #> 8                                              #> 9                                              #> 10                                              # with HTML formatting DT::datatable(table_group_growth_linear(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Test2 | 0\",\"Test2 | 0.039\",\"Test2 | 0.059\",\"Test2 | 0.088\",\"Test2 | 0.13\",\"Test2 | 0.2\",\"Test2 | 0.3\",\"Test2 | 0.44\",\"Test2 | 0.67\",\"Test2 | 1\"],[\"0.471 ± 0.011\",\"0.388 ± 0.015\",\"0.343 ± 0.002\",\"0.288 ± 0.005\",\"0.226 ± 0.01\",\"0.128 ± 0.002\",\"0.015 ± 0.026\",\"\",\"\",\"\"],[\"1.472 ± 0.034\",\"1.786 ± 0.068\",\"2.019 ± 0.009\",\"2.404 ± 0.041\",\"3.072 ± 0.139\",\"5.401 ± 0.103\",\"15.484\",\"\",\"\",\"\"],[\"4.041 ± 0.113\",\"3.896 ± 0.147\",\"3.873 ± 0.191\",\"3.602 ± 0.191\",\"3.875 ± 0.321\",\"2.726 ± 0.276\",\"2.076\",\"\",\"\",\"\"],[\"4.304 ± 0.476\",\"1.833 ± 0.292\",\"1.56 ± 0.094\",\"1.114 ± 0.026\",\"0.869 ± 0.036\",\"0.409 ± 0.025\",\"0.023 ± 0.039\",\"\",\"\",\"\"],[\"4.359 ± 0.478\",\"1.885 ± 0.296\",\"1.617 ± 0.095\",\"1.169 ± 0.027\",\"0.925 ± 0.036\",\"0.459 ± 0.026\",\"0.119\",\"\",\"\",\"\"],[\"6.917 ± 0.52\",\"6.833 ± 0.289\",\"6.667 ± 0.144\",\"7.667 ± 0.144\",\"9.167 ± 0.382\",\"9.083 ± 2.517\",\"8.5\",\"\",\"\",\"\"],[\"10.25 ± 0.25\",\"10.083 ± 0.52\",\"10.25 ± 0.661\",\"10.25 ± 0.25\",\"11.083 ± 0.144\",\"11.417 ± 2.504\",\"10.25\",\"\",\"\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>t<sub>start<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n      <th>t<sub>end<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}# }"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"Generate grouped results table parametric fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"","code":"table_group_growth_model(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"data frame grouped model fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"","code":"# Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")   # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"m\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_model(res$gcFit$gcTable) #>     Sample|Conc.         mumax             tD       lagtime         Y_max #> 1      Test1 | 0 0.802 ± 0.005  0.864 ± 0.006   5.1 ± 0.215  4.82 ± 0.032 #> 2  Test1 | 0.017 0.785 ± 0.007  0.883 ± 0.007 5.091 ± 0.057 4.337 ± 0.022 #> 3  Test1 | 0.026 0.774 ± 0.004  0.895 ± 0.005 5.289 ± 0.228 4.039 ± 0.022 #> 4  Test1 | 0.039  0.76 ± 0.002  0.912 ± 0.002  5.513 ± 0.05 3.989 ± 0.061 #> 5  Test1 | 0.059 0.731 ± 0.002  0.948 ± 0.003  5.192 ± 0.07 3.705 ± 0.104 #> 6  Test1 | 0.088 0.682 ± 0.007   1.016 ± 0.01  5.63 ± 0.293 3.438 ± 0.046 #> 7   Test1 | 0.13 0.589 ± 0.006  1.177 ± 0.012 5.654 ± 0.214 3.211 ± 0.038 #> 8    Test1 | 0.2 0.441 ± 0.005  1.573 ± 0.018 5.972 ± 0.132   2.76 ± 0.06 #> 9    Test1 | 0.3 0.278 ± 0.001  2.494 ± 0.009 6.238 ± 0.312  2.24 ± 0.044 #> 10  Test1 | 0.44 0.144 ± 0.006  4.831 ± 0.199 6.788 ± 0.241 1.613 ± 0.031 #> 11  Test1 | 0.67 0.055 ± 0.026 15.182 ± 8.478 4.381 ± 3.782 0.853 ± 0.046 #> 12     Test1 | 1                                                          #>               dY #> 1   4.82 ± 0.035 #> 2  4.342 ± 0.023 #> 3   4.049 ± 0.03 #> 4   3.986 ± 0.07 #> 5   3.71 ± 0.099 #> 6  3.449 ± 0.045 #> 7  3.206 ± 0.034 #> 8  2.754 ± 0.052 #> 9  2.176 ± 0.041 #> 10 1.324 ± 0.009 #> 11  0.548 ± 0.02 #> 12                # with HTML formatting DT::datatable(table_group_growth_model(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"Test1 | 0\",\"Test1 | 0.017\",\"Test1 | 0.026\",\"Test1 | 0.039\",\"Test1 | 0.059\",\"Test1 | 0.088\",\"Test1 | 0.13\",\"Test1 | 0.2\",\"Test1 | 0.3\",\"Test1 | 0.44\",\"Test1 | 0.67\",\"Test1 | 1\"],[\"0.802 ± 0.005\",\"0.785 ± 0.007\",\"0.774 ± 0.004\",\"0.76 ± 0.002\",\"0.731 ± 0.002\",\"0.682 ± 0.007\",\"0.589 ± 0.006\",\"0.441 ± 0.005\",\"0.278 ± 0.001\",\"0.144 ± 0.006\",\"0.055 ± 0.026\",\"\"],[\"0.864 ± 0.006\",\"0.883 ± 0.007\",\"0.895 ± 0.005\",\"0.912 ± 0.002\",\"0.948 ± 0.003\",\"1.016 ± 0.01\",\"1.177 ± 0.012\",\"1.573 ± 0.018\",\"2.494 ± 0.009\",\"4.831 ± 0.199\",\"15.182 ± 8.478\",\"\"],[\"5.1 ± 0.215\",\"5.091 ± 0.057\",\"5.289 ± 0.228\",\"5.513 ± 0.05\",\"5.192 ± 0.07\",\"5.63 ± 0.293\",\"5.654 ± 0.214\",\"5.972 ± 0.132\",\"6.238 ± 0.312\",\"6.788 ± 0.241\",\"4.381 ± 3.782\",\"\"],[\"4.82 ± 0.032\",\"4.337 ± 0.022\",\"4.039 ± 0.022\",\"3.989 ± 0.061\",\"3.705 ± 0.104\",\"3.438 ± 0.046\",\"3.211 ± 0.038\",\"2.76 ± 0.06\",\"2.24 ± 0.044\",\"1.613 ± 0.031\",\"0.853 ± 0.046\",\"\"],[\"4.82 ± 0.035\",\"4.342 ± 0.023\",\"4.049 ± 0.03\",\"3.986 ± 0.07\",\"3.71 ± 0.099\",\"3.449 ± 0.045\",\"3.206 ± 0.034\",\"2.754 ± 0.052\",\"2.176 ± 0.041\",\"1.324 ± 0.009\",\"0.548 ± 0.02\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>dY<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"Generate grouped results table spline fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"","code":"table_group_growth_spline(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"data frame grouped spline fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"","code":"# Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_spline(res$gcFit$gcTable) #>     Sample|Conc.         mumax             tD       lagtime         Y_max #> 1      Test1 | 0 0.666 ± 0.007   1.041 ± 0.01 4.502 ± 0.273  6.533 ± 0.79 #> 2  Test1 | 0.017 0.626 ± 0.004  1.108 ± 0.008    4.59 ± 0.1 3.768 ± 0.428 #> 3  Test1 | 0.026 0.596 ± 0.006  1.164 ± 0.011 4.309 ± 0.054 3.264 ± 0.123 #> 4  Test1 | 0.039  0.569 ± 0.01  1.218 ± 0.021 4.369 ± 0.173 2.952 ± 0.299 #> 5  Test1 | 0.059 0.539 ± 0.011  1.287 ± 0.026 4.371 ± 0.096 2.272 ± 0.119 #> 6  Test1 | 0.088 0.471 ± 0.002  1.472 ± 0.006 4.474 ± 0.188 1.738 ± 0.194 #> 7   Test1 | 0.13 0.381 ± 0.015  1.819 ± 0.069  4.11 ± 0.184 1.114 ± 0.064 #> 8    Test1 | 0.2 0.271 ± 0.007   2.562 ± 0.07 3.856 ± 0.042 0.781 ± 0.082 #> 9    Test1 | 0.3  0.15 ± 0.005  4.625 ± 0.159   3.1 ± 0.209 0.461 ± 0.051 #> 10  Test1 | 0.44  0.07 ± 0.001  9.947 ± 0.151   1.772 ± 0.3 0.192 ± 0.011 #> 11  Test1 | 0.67 0.036 ± 0.001 19.375 ± 0.737 2.303 ± 2.061 0.097 ± 0.006 #> 12     Test1 | 1                                                          #>               dY       t(mumax) #> 1  6.481 ± 0.787  8.167 ± 0.382 #> 2  3.716 ± 0.427              8 #> 3   3.21 ± 0.123  7.667 ± 0.144 #> 4  2.898 ± 0.295  7.833 ± 0.144 #> 5  2.219 ± 0.115           7.75 #> 6   1.684 ± 0.19              8 #> 7  1.064 ± 0.063  8.083 ± 0.144 #> 8   0.73 ± 0.079  8.833 ± 0.629 #> 9  0.409 ± 0.047 10.167 ± 0.382 #> 10 0.139 ± 0.007    9.25 ± 2.75 #> 11 0.042 ± 0.004  7.833 ± 6.048 #> 12                               # with HTML formatting DT::datatable(table_group_growth_spline(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"Test1 | 0\",\"Test1 | 0.017\",\"Test1 | 0.026\",\"Test1 | 0.039\",\"Test1 | 0.059\",\"Test1 | 0.088\",\"Test1 | 0.13\",\"Test1 | 0.2\",\"Test1 | 0.3\",\"Test1 | 0.44\",\"Test1 | 0.67\",\"Test1 | 1\"],[\"0.666 ± 0.007\",\"0.626 ± 0.004\",\"0.596 ± 0.006\",\"0.569 ± 0.01\",\"0.539 ± 0.011\",\"0.471 ± 0.002\",\"0.381 ± 0.015\",\"0.271 ± 0.007\",\"0.15 ± 0.005\",\"0.07 ± 0.001\",\"0.036 ± 0.001\",\"\"],[\"1.041 ± 0.01\",\"1.108 ± 0.008\",\"1.164 ± 0.011\",\"1.218 ± 0.021\",\"1.287 ± 0.026\",\"1.472 ± 0.006\",\"1.819 ± 0.069\",\"2.562 ± 0.07\",\"4.625 ± 0.159\",\"9.947 ± 0.151\",\"19.375 ± 0.737\",\"\"],[\"4.502 ± 0.273\",\"4.59 ± 0.1\",\"4.309 ± 0.054\",\"4.369 ± 0.173\",\"4.371 ± 0.096\",\"4.474 ± 0.188\",\"4.11 ± 0.184\",\"3.856 ± 0.042\",\"3.1 ± 0.209\",\"1.772 ± 0.3\",\"2.303 ± 2.061\",\"\"],[\"6.533 ± 0.79\",\"3.768 ± 0.428\",\"3.264 ± 0.123\",\"2.952 ± 0.299\",\"2.272 ± 0.119\",\"1.738 ± 0.194\",\"1.114 ± 0.064\",\"0.781 ± 0.082\",\"0.461 ± 0.051\",\"0.192 ± 0.011\",\"0.097 ± 0.006\",\"\"],[\"6.481 ± 0.787\",\"3.716 ± 0.427\",\"3.21 ± 0.123\",\"2.898 ± 0.295\",\"2.219 ± 0.115\",\"1.684 ± 0.19\",\"1.064 ± 0.063\",\"0.73 ± 0.079\",\"0.409 ± 0.047\",\"0.139 ± 0.007\",\"0.042 ± 0.004\",\"\"],[\"8.167 ± 0.382\",\"8\",\"7.667 ± 0.144\",\"7.833 ± 0.144\",\"7.75\",\"8\",\"8.083 ± 0.144\",\"8.833 ± 0.629\",\"10.167 ± 0.382\",\"9.25 ± 2.75\",\"7.833 ± 6.048\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>t(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two dataframes like a zip-fastener — zipFastener","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"Combine rows columns two dataframes alternating manner","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"","code":"zipFastener(df1, df2, along = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"df1 first dataframe. df2 second dataframe dimensions df1. along 1 alternate rows 2 alternate columns.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"dataframe combined rows (columns) df1 df2.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"Mark Heckmann","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"","code":"# data frames equal dimensions df1 <- plyr::rdply(3, rep('o',4))[ ,-1] df2 <- plyr::rdply(3, rep('X',4))[ ,-1]  zipFastener(df1, df2) #>   V1 V1.1 V2 V2.1 V3 V3.1 V4 V4.1 #> 1  o    X  o    X  o    X  o    X #> 2  o    X  o    X  o    X  o    X #> 3  o    X  o    X  o    X  o    X zipFastener(df1, df2, 2) #>   V1 V1.1 V2 V2.1 V3 V3.1 V4 V4.1 #> 1  o    X  o    X  o    X  o    X #> 2  o    X  o    X  o    X  o    X #> 3  o    X  o    X  o    X  o    X zipFastener(df1, df2, 1) #>   V1 V2 V3 V4 #> 1  o  o  o  o #> 4  X  X  X  X #> 2  o  o  o  o #> 5  X  X  X  X #> 3  o  o  o  o #> 6  X  X  X  X  # data frames unequal in no. of rows df1 <- plyr::rdply(10, rep('o',4))[ ,-1] zipFastener(df1, df2, 1) #>    V1 V2 V3 V4 #> 1   o  o  o  o #> 11  X  X  X  X #> 2   o  o  o  o #> 12  X  X  X  X #> 3   o  o  o  o #> 13  X  X  X  X #> 4   o  o  o  o #> 5   o  o  o  o #> 6   o  o  o  o #> 7   o  o  o  o #> 8   o  o  o  o #> 9   o  o  o  o #> 10  o  o  o  o zipFastener(df2, df1, 1) #>    V1 V2 V3 V4 #> 1   X  X  X  X #> 4   o  o  o  o #> 2   X  X  X  X #> 5   o  o  o  o #> 3   X  X  X  X #> 6   o  o  o  o #> 7   o  o  o  o #> 8   o  o  o  o #> 9   o  o  o  o #> 10  o  o  o  o #> 11  o  o  o  o #> 12  o  o  o  o #> 13  o  o  o  o  # data frames unequal in no. of columns df2 <- plyr::rdply(10, rep('X',3))[ ,-1] zipFastener(df1, df2) #>    V1 V1.1 V2 V2.1 V3 V3.1 V4 #> 1   o    X  o    X  o    X  o #> 2   o    X  o    X  o    X  o #> 3   o    X  o    X  o    X  o #> 4   o    X  o    X  o    X  o #> 5   o    X  o    X  o    X  o #> 6   o    X  o    X  o    X  o #> 7   o    X  o    X  o    X  o #> 8   o    X  o    X  o    X  o #> 9   o    X  o    X  o    X  o #> 10  o    X  o    X  o    X  o zipFastener(df2, df1, 2) #>    V1 V1.1 V2 V2.1 V3 V3.1 V4 #> 1   X    o  X    o  X    o  o #> 2   X    o  X    o  X    o  o #> 3   X    o  X    o  X    o  o #> 4   X    o  X    o  X    o  o #> 5   X    o  X    o  X    o  o #> 6   X    o  X    o  X    o  o #> 7   X    o  X    o  X    o  o #> 8   X    o  X    o  X    o  o #> 9   X    o  X    o  X    o  o #> 10  X    o  X    o  X    o  o"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"QurvE 1.0.1","text":"Issue #4: shiny app, checkbox ‘sort concentration’ show loading old RData file","code":""},{"path":"https://nicwir.github.io/QurvE/news/index.html","id":"qurve-10","dir":"Changelog","previous_headings":"","what":"QurvE 1.0","title":"QurvE 1.0","text":"CRAN release: 2023-01-12 Added NEWS.md file track changes package.","code":""}]
