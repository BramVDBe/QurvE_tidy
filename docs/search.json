[{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"navigation-bar","dir":"Articles","previous_headings":"","what":"Navigation Bar","title":"QurvE User Manual v.1.0","text":"QurvE navigation bar.  Data: Load experimental data. Use either one several available parsers common cultivation devices provide data custom format. Computation: Run computational workflows entire growth fluorescence datasets perform curve fitting dose-response analyses. menu becomes available successful data parsing. Validation: Confirm accuracy fits sample re-run individual fits adjusted parameters. Results: View tabular summaries computational results, including calculated growth fluorescence curve parameters results dose-response analyses. Visualization: Compare samples conditions visualize computational results using series plots. Report: Create PDF HTML report summarizing results growth fluorescence curve analysis workflow. Data Export: Save raw data, computational results, fitting options .RData object storage distribution. Data Import: Load previously exported dataset .RData format.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading Data","title":"QurvE User Manual v.1.0","text":"QurvE allows loading data different formats, growth experiments fluorescence measurements. Data can loaded using custom QurvE data layout, loading raw data various measuring equipment importing previously analyzed datasets.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data-formatted-in-the-custom-qurve-layout","dir":"Articles","previous_headings":"Loading Data","what":"Loading data formatted in the custom QurvE layout","title":"QurvE User Manual v.1.0","text":"load data using custom QurvE layout, select [Data] > [Custom] window choose file .xls/.xlsx (selecting appropriate work sheets) .csv/.tsv/.txt format (define correct decimal separator , .csv, field separator target file). custom QurvE layout includes data relative metadata necessary QurvE perform analysis. custom layout can used load growth fluorescence data. Data second fluorescence channel can used normalize primary fluorescence values addition normalization growth values. data must formatted displayed Figure @ref(fig:custom-layout): first row contains ‘Time’, ‘Blank’, sample identifiers (IDs). ID needs identical replicates samples analyzed together within dose-response analysis. ‘Time’ column must positioned first position, ‘Blank’ samples follow arbitrary order. second row contains replicate numbers identical conditions. technical replicates used addition biological replicates, indicate technical replicates identical replicate numbers. Samples identical IDs, replicate numbers, concentration values (applicable) combined average values time point. Leave row empty replicate information available. third row designated contain concentration values perform dose-response analysis, different concentrations compound used experiment. Samples included dose-response analysis identical sample identifiers (first row). Leave row empty concentration information available relevant. Starting fourth row, table must include data ‘Time’, ‘Blank’ different samples. Several experiments can combined single custom dataset. Different experiments differing time values experiment-specific blanks distinguished individual ‘Time’ column left dataset. Blank values (experiment-specific) combined average subtracted remaining values option [Subtract blank] selected. metadata second third row optional perform analysis; metadata available, leave rows empty. data can processed (options indicated order applied data): converting time values, applying calibration equation measurements. subtracting blank values sample measurement, normalizing fluorescence data second fluorescence growth dataset, available. data processing functions optional.  QurvE custom data layout.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-data-from-raw-experiment-files","dir":"Articles","previous_headings":"Loading Data","what":"Loading data from raw experiment files","title":"QurvE User Manual v.1.0","text":"QurvE supports loading directly raw data produced variety proprietary software different growth fluorescence measuring equipment, plate readers micro-bioreactors1. can done [Data] > [Parse Raw Data] window. loading file (1), selecting correct raw data format choosing one available equipments/software (2) assigning extracted read channels growth/fluorescence data (3), user provide mapping information metadata tabular format (.xls/.xlsx/.csv/.tsv/.txt file) (4). mapping file formatted shown Figure @ref(fig:mapping-layout): first column contains well numbers plate must match sample identifiers raw data file. second column contains ID (.e., organism, condition, etc.) sample. ID needs identical replicates samples analyzed together within dose-response analysis. third column contains replicate numbers identical conditions. technical replicates used addition biological replicates, indicate technical replicates replicate number. Samples identical IDs, replicate numbers, concentration values (applicable) combined average values time point. Leave row empty replicate information available. fourth column designated contain concentration values perform dose-response analysis, different concentrations compound interest used experiment. Leave row empty additional concentration information available. values ‘Blank’ samples combined averages subtracted remaining values option [Subtract blank] chosen. data can processed (options indicated order applied data): converting time values, applying calibration equation measurements. subtracting blank values sample measurement, normalizing fluorescence data second fluorescence growth dataset, available. data processing functions optional.  [Parse Raw Data] window enables loading raw data exported plate reader/bioreactor software. right panel illustrates layout additional mapping file metadata must supplemented analyze establish relationships conditions replicates.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"loading-previously-processed-data","dir":"Articles","previous_headings":"Loading Data","what":"Loading previously processed data","title":"QurvE User Manual v.1.0","text":"QurvE supports exporting processed data reloading analysis inspection. Previously saved growth fluorescence data .RData format can loaded Data Import window (Figure @ref(fig:import-data)).  figure illustrates [Data Import] window, enables user load previously exported QurvE data files.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"processing-and-analyzing-data-in-qurve","dir":"Articles","previous_headings":"","what":"Processing and analyzing data in QurvE","title":"QurvE User Manual v.1.0","text":"raw data loaded, QurvE can used process data fitting curves, calculating averages standard deviations replicates, well fitting data different models obtain growth parameters doubling times, yields, etc., dose-response parameters. Moreover, software allows user intuitively create publication-grade plots.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"run-computations","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Run computations","title":"QurvE User Manual v.1.0","text":"raw data successfully parsed, [Computation] window unlock, enabling user process either Growth Fluorescence data (Figure @ref(fig:computation)). data can processed using different curve fitting methods, can selected panel left. default fitting options Linear regression fit Non-parametric fit (smooth spline). ticking Parametric fit (available Fluorescence analysis), parametric growth models models fit data. ticking Log-transform time time values transformed Ln(1 + time). Biphasic growth selected, QurvE tries identify second growth phase performing linear regressions non-parametric fits extracts corresponding parameters (e.g., growth rate, lag time second growth phase). Dose-response (EC50) analyses can performed either performing smooth spline fit (response spline fit) response vs. concentration data extracting EC50 concentration midpoint largest smallest response value, applying 20 (parametric) dose-response models choose best model based Akaike information criterion (AIC). computed parameter (e.g., growth rates obtained via linear regression, maximum fluorescence obtained via non-parametric fits…) can chosen response parameter quantify adverse beneficial effects substance. options Log-transform concentration Log-transform response available response spline fits. instances, Ln(x + 1) applied respective values. Additional information methods (global method-specific) fitting options available clicking [?] signs.  [Computation] window enables user define parameters data processing fitting. Growth data fluorescence data must processed separately.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"visualization-and-validation-of-curve-fitting","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Visualization and validation of curve fitting","title":"QurvE User Manual v.1.0","text":"[Validation] window enables user verify correct fitting growth/fluorescence curves (see Figure @ref(fig:linear) example).  Example fitted growth curve [Validation] window. right panel, figure visualizes performed fit. case, red dots dashed line represent linear regression model used calculate maximum growth rate lag time.  Different tabs enable user visualize fit obtained different fitting methods (Linear Fits, Nonparametric fits, etc.). left pane independent samples can selected visualization. contains options modify figure, can exported .png .pdf formats. right pane, [Re-run modified parameters] button enables user modify fitting parameters rerun analysis selected sample obtain new fit updated parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"tabular-overview-of-results","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Tabular overview of results","title":"QurvE User Manual v.1.0","text":"[Results] window (see Figure @ref(fig:results)) enables user obtain overview fitted parameters applied method. ticking [Group average] box user can visualize average ± standard deviation parameters replicates. deselected, parameters every single sample shown. table can exported .csv format clicking [Download table] button.  [Results] window gives tabular overview computed parameters applied fit method well results dose-response analyses.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"visualization-of-results","dir":"Articles","previous_headings":"Processing and analyzing data in QurvE","what":"Visualization of results","title":"QurvE User Manual v.1.0","text":"data processed, [Visualization] window enables user visualize data using different plot formats: Group Plots: Plot growth data time multiple conditions plot. [Data type] drop menu allows user define type data (raw data, smoothing splines, normalized fluorescence) visualized curve chart. user can easily select cursor samples/groups plot [Conditions] input. Alternatively, ticking [(De-)select samples based string], user can select exclude samples typing strings include name sample included/excluded. [Plot group averages] box used visualize either averages replicates (± standard deviations) individual samples independently. Moreover, concentration metadata provided loading data, user can (de-)select samples using additional parameters. left pane contains also various options modify figure, can exported .png .pdf formats. Parameter Plots: Plot calculated curve parameters (growth rates, lag times, yields, etc.) different samples bar plot. [Parameter] drop menu allows user select parameter plotted. Samples conditions can (de-)selected via methods described Group Plots. Plot group averages box can used visualize either averages (95% confidence intervals) groups individual samples independently. Plot Grid: Plot several curves separate panels, coloring background based chosen parameter heatmap-like fashion. [Data type] drop menu allows user define type data visualized curve chart. [Parameter] drop menu allows user select parameter panel backgrounds colored. Samples conditions can (de-)selected via methods described Group Plots. concentration metadata provided loading data, panels can arranged matrix one concentration per row ticking [Sort concentration]. Dose-Response Analysis: Plot results dose-response analyses chosen response parameter y-axis concentration values x-axis. drawn line indicates fit applied data.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/shiny_app_manual.html","id":"export-data-from-qurve","dir":"Articles","previous_headings":"","what":"Export data from QurvE","title":"QurvE User Manual v.1.0","text":"QurvE enables user export data results different ways: Download Plot: figures plotted within QurvE can exported .png .pdf formats. Please note size exported plots differs figure diplayed within app dependent size QurvE window. size, aspect ratio resolution exported plot can adjusted dedicated [Width], [Height], [DPI] fields Report: [Report] window enables user export computational results figures performed fit single report file .pdf .html format. Data Export: [Data Export] window enables user export processed raw data well computation results fitting options single data container .RData format. Please note modifications figures included exported .RData file, make sure export figures separately. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"virtually disciplines biology dealing living organisms, classical microbiology applied biotechnology, routine characterize growth species study. QurvE provides suite analysis tools make growth profiling quick, efficient, reproducible. addition, allows characterization fluorescence data , e.g., biosensor characterization plate reader experiments (discussed vignette Quantitiative Fluorescence Curve Evaluation Package QurvE). computational steps obtain -depth characterization combined user-friendly workflow functions range plotting functions allow visualization fits comparison organism performances. physiological parameter calculated (e.g., growth rate µ, doubling time tD, lag time \\(\\lambda\\), density increase \\(\\Delta\\)Y, equivalent fluorescence parameters) can used perform dose-response analysis determine half-maximal effective concentration (EC50). package build foundation two R packages Kahm et al. (2010) Petzoldt (2022). QurvE designed usable minimal prior knowledge R programming language programming general. need familiar idea running commands console writing basic scripts. R beginners, great starting point, good resources suggest using RStudio application. provides environment writing running R code. consideration R novices, QurvE establishes framework complete, detailed growth curve analysis can performed two simple steps: Read data custom format parse data plate reader experiment. Run workflow, including fitting growth curves, dose-response analysis, rendering report summarizes results. computational results workflow stored data container (list) can visualized passing generic function plot(list_object). QurvE extends user’s control fits defining thresholds quality criteria, allows direct parsing data plate reader result files, calculates parameters additional growth phase (bi-phasic growth).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"development-version","dir":"Articles","previous_headings":"Installation","what":"Development version","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Install must current version package devtools:","code":"install.packages(\"devtools\") library(devtools) install_github(\"NicWir/QurvE\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"growth-profiling-methods","dir":"Articles","previous_headings":"","what":"Growth profiling methods","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Three methods available characterize growth curves: Fit parametric growth models (log-transformed) growth data Determine maximum growth rates (µmax) log-linear part growth curve using heuristic approach proposed “growth rates made easy”-method Hall et al. (2014). , QurvE uses code package Petzoldt (2022), adds user-defined thresholds () R2 values linear fits, (ii) relative standard deviations (RSD) estimates slopes, (iii) minimum fraction total density increase (\\(\\Delta\\)Y) regression window cover considered analysis. thresholds ensure robust reproducible identification linear range best describes growth curve. Additionally, parameters secondary growth phase can extracted bi-linear growth curves.1 algorithm works follows: Fit linear regressions [Theil-Sen estimator (Sen, 1968; Theil, 1992)] subsets h consecutive, log-transformed data points (sliding window size h). , example, h=5, fit linear regression points 1 \\(\\dots\\) 5, 2 \\(\\dots\\) 6, 3 \\(\\dots\\) 7 forth. Find subset highest slope \\(\\mu_{max}\\). R2 RSD values regression meet defined thresholds data points within regression window account least defined fraction total density increase? , evaluate regression second highest slope, forth. Include also data points adjacent subsets slope least \\(defined \\space quota \\times \\mu_{max}\\), e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step iii. biphasic = TRUE, following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following \\(\\mu_{max}\\) repeat heuristic linear method later time values. Find local maximum \\(\\mu_{max}\\) repeat heuristic linear method earlier time values. Choose greater two independently determined slopes \\(\\mu_{max}2\\). Perform smooth spline fit (log-transformed) growth data extract µmax maximum value first derivative1. biphasic = TRUE, following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove ‘peak’ containing highest value first derivative (.e., \\(\\mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(\\mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(\\mu_{max}\\). Choose greater two independently determined slopes \\(\\mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"data-formats","dir":"Articles","previous_headings":"","what":"Data formats","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE accepts files formats .xls, .xlsx, .csv, .tsv, .txt (tab separated). data files structured shown Figure @ref(fig:data-layout). Alternatively, data parsers available allow direct import raw data different culture instruments. list currently supported devices, please run ?parse_data.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"custom-format","dir":"Articles","previous_headings":"Data formats","what":"Custom format","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"ensure compatibility type measurement data type (e.g., optical density, cell count, measured dimensions), QurvE uses custom data layout. first column contains time values ‘Time’ top cell, cells #2 #3 ignored. remaining columns contain measurement values following sample identifiers top three rows: Sample name; usually combination organism condition, ‘blank’. Replicate number; replicates identified identical names concentration values. one type replicate (biological technical) performed, enter numerical values . biological technical replicates biological replicates performed, biological replicates shall indicated numbers technical replicates letters. technical replicates combined average value. (optional) Concentration values added compound; information used perform dose-response analysis. Several experiments (e.g., runs different plate readers) can combined single file analyzed simultaneously. Therefore, different experiments marked presence separate time columns. Different lengths values time columns permitted. Custom QurvE data layout read data custom format, run: data.density argument takes path file containing experimental data custom format. csvsep specifies separator symbol (required .csv files; default: ';'). dec decimal separator (required .csv, .tsv, .txt files; default: '.'). Excel file format used, sheet.density specifies number name (quotes) sheet containing data. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calibration argument, formula can provided form ‘y = function(x)’ (e.g., calibration = 'y = x * 2 + 0.5') transform measurement values.","code":"input <- read_data(data.density = 'path_to_data_file',                    csvsep = ';', # or ','                    dec = '.', # or ','                    sheet.density = 1, # number (or \"name\") of the EXCEL file sheet containing data                    subtract.blank = TRUE,                    calibration = NULL )"},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"data-parser","dir":"Articles","previous_headings":"Data formats","what":"Data parser","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"data generated culture devices (e.g., plate readers) different manufacturers come different formats. data used directly, must first “parsed” plate reader QurvE standard format. scenario, sample information must provided separate table maps samples respective identifiers.mapping table must following layout (Figure @ref(fig:mapping-layout)): Data parser mapping layout parse data, run: data.file argument takes path file containing experimental data exported culture device, map.file path file mapping information. software, can specify device (software) used generate data. csvsep.data csvsep.map specify separator symbol data mapping file, respectively (required .csv files; default: ';'). dec.data dec.map decimal separator used data mapping file, respectively (required .csv, .tsv, .txt files; default: '.'). Excel file format used one data mapping file, sheet.data /sheet.map specify number name (quotes) sheet containing data mapping information, respectively. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calibration argument, formula can provided form ‘y = function(x)’ (e.g., calibration = 'y = x * 2 + 0.5') transform measurement values. Similarly, convert.time accepts function ‘y = function(x)’ transform time values (e.g., convert.time = 'y = x/3600' convert seconds hours).","code":"input <- parse_data(data.file = 'path_to_data_file',                     map.file = 'path_to_mapping_file',                     software = 'used_software_or_device',                      csvsep.data = ';', # or ','                     dec.data = '.', # or ','                     csvsep.map = ';', # or ','                     dec.map = '.', # or ','                     sheet.data = 1, # number (or \"name\") of the EXCEL file sheet containing data                     sheet.map = 1, # number (or \"name\") of the EXCEL file sheet containing                                     # mapping information                     subtract.blank = TRUE,                     calibration = NULL,                     convert.time = NULL )"},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"run-a-complete-growth-analysis-workflow","dir":"Articles","previous_headings":"","what":"Run a complete growth analysis workflow","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE reduces computational steps required create complete growth profiling two steps, read data run workflow. loading package: load experimental data publication Wirth & Nikel (2021) Pseudomonas putida KT2440 engineered strain tested sensitivity towards product 2-fluoromuconic acid:","code":"library(QurvE) library(ggplot2) ### REMOVE AFTER QurvE UPDATE!!!"},{"path":"https://nicwir.github.io/QurvE/articles/vignette.html","id":"load-data","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Load data","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"created object input list class grodata containing: time matrix time 66 rows, corresponding one sample dataset, 161 columns, .e., time values sample. density data frame 66 rows 161+3 columns. three additional columns contain sample identifiers condition, replicate, concentration. fluorescence1 (: NA) fluorescence2 (: NA) norm.fluorescence1 (: NA) norm.fluorescence2 (: NA) expdesign, data frame containing label, condition, replicate, concentration sample: can plot raw data:","code":"input <- read_data(data.density = system.file('2-FMA_toxicity.xlsx', package = 'QurvE')           ) head(input$expdesign) #>             label condition replicate concentration #> 1 KT2440 | 1 | 90    KT2440         1            90 #> 2 KT2440 | 1 | 70    KT2440         1            70 #> 3 KT2440 | 1 | 50    KT2440         1            50 #> 4 KT2440 | 1 | 25    KT2440         1            25 #> 5 KT2440 | 1 | 20    KT2440         1            20 #> 6 KT2440 | 1 | 15    KT2440         1            15 plot.grofit(input, data.type = \"raw\", log.y = FALSE, x.lim = c(NA, 32))"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"general introduction package, see vignette Quantitiative Growth Curve Evaluation Package QurvE. vignette show use QurvE analyze datasets fluorescence measurements taken time, well extract important results. Fluorescent reporter proteins widely used study mechanisms gene regulation develop biosensors allow detection chemical compounds provide insights intracellular environment. workflow analyzing fluorescence data works analogously analyzing growth data following scheme read data execute workflow. package allows users select either time growth data (e.g. simultaneous measurement cell density fluorescence intensity plate reader experiments) independent variable. Additionally, biosensors can characterized via dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"fluorescence-profiling-methods","dir":"Articles","previous_headings":"","what":"Fluorescence profiling methods","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"QurvE offers curve evaluation methods fluorescence data growth data, exception fitting growth models. calculation algorithms linear regression nonparametric fits (smoothing splines) well default parameters empirically adjusted account differences curve shapes commonly seen fluorescence data.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"dose-response-analysis-methods","dir":"Articles","previous_headings":"","what":"Dose-response analysis methods","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Dose response analysis useful method evaluating performance biosensor. Biosensors typically designed respond specific chemical compounds, strength response often depends concentration target compound. Dose-response analysis can used determine concentration target compound elicits half-maximal response biosensor (variants), half-maximal effective concentration (EC50). allows evaluation sensitivity specificity biosensor can used optimize design particular application. addition evaluating performance biosensors, dose-response analysis can also used study mechanisms gene regulation biological systems. measuring response biological system different concentrations chemical compound, researchers can gain insights genes pathways involved response, can identify potential targets drug discovery. QurvE provides two methods perform dose-response analyses fluorescence data: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply biosensor response model response vs. concentration data (Meyer et al., 2019).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"run-a-complete-fluorescence-analysis-workflow","dir":"Articles","previous_headings":"","what":"Run a complete fluorescence analysis workflow","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Load package: Next, load experimental data. example, dataset used preliminary characterization different versions SEVA (Standard European Vector Architecture) plasmid pSEVA634, described (Nikel et al., 2022). data contains growth fluorescence measurements converted custom QurvE data format located different work sheets XLSX file:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"load-data","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Load data","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"two functions read_data() parse_data() come arguments give user control loading fluorescence data. growth data, arguments data.fl (file path), csvsep.fl (separator symbol CSV file), dec.fl (decimal separator), sheet.fl (Excel file worksheet number “name”) provide details data stored. calib.fl allows defining equation transform fluorescence values. Similarly, functions accept arguments data.fl2, csvsep.fl2, dec.fl2, sheet.fl2, calib.fl2 load data second fluorescence channel. second fluorescence currently used normalize first fluorescence values, applied …ADD CITATION… Normalization fluorescence, , can controlled via fl.normtype performed either dividing growth values (fl.normtype = 'growth') fluorescence 2 fl.normtype = 'fl2'. can inspect structure input object class grodata:","code":"input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\",     package = \"QurvE\"), sheet.growth = 1, data.fl = system.file(\"lac_promoters.xlsx\",     package = \"QurvE\"), sheet.fl = 2, fl.normtype = \"growth\")  # normalize fluorescence to growth data summary(input) #>                   Length Class      Mode    #> time              1785   -none-     numeric #> growth              88   data.frame list    #> fluorescence        88   data.frame list    #> norm.fluorescence   88   data.frame list    #> expdesign            4   data.frame list"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"plot-raw-data","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Plot raw data","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Raw data plot. Conditions can selected deselected using names = c('grp1', 'grp2') argument exclude.nm = c('grp3', 'grp4') argument, respectively. Similarly, concentrations can (de-selected) via conc exclude.conc arguments. plot individual samples instead grouping replicates, add mean = FALSE. See ?plot.grodata options.","code":"plot(input, data.type = \"fl\",      exclude.conc = c(0.5, 0.1),      log.y = FALSE,      legend.position = \"bottom\",      basesize = 10,      legend.ncol = 3,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"run-workflow","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Run Workflow","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"option export.res set TRUE, tab-delimited .txt files summarizing computation results created automatically, well flFitRes object (object class flFitRes) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:flFitRes-container) shows structure generated flFitRes object. RStudio, View(flFitRes) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?fl.workflow arguments customize workflow. Internal structure flFitResobject generated growth.workflow().","code":"flFitRes <- fl.workflow(grodata = input,      fit.opt = c(\"s\", \"l\"),     x_type = \"time\",      norm_fl = TRUE,      ec50 = TRUE,      dr.parameter = \"dY.spline\",     suppress.messages = TRUE,      export.res = FALSE, # Prevent creating TXT table and RData files with results     parallelize = FALSE) # Use only one available CPU core"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"tabular-results","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Tabular results","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"flFitRes object contains two tables summarizing computational results: - flFitRes$flFit$flable lists calculated curve parameters every sample fit - flFitRes$drFit$drTable contains results dose-response analysis Additionally, dedicated functions table_group_fluorescence_linear() table_group_fluorescence_spline() allow generation grouped results tables two fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within flFitRes.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"visualize-results","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow","what":"Visualize results","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Several generic plot() allow plotting results merely accessing list items within flFitRes object structure (Figure @ref(fig:flFitRes-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"inspect-individual-fits","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Inspect individual fits","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"important verify accuracy fits applied attempting interpret results (workflow run interactive = TRUE. especially important analyzing fluorescence data, curve shapes level noise can vary significantly depending specific experiment equipment used cultivation. Linear fit plots validate applied fits. details function, run ?plot.gcFitLinear. Spline fit plots validate applied fits. details function, run ?plot.gcFitLinear. Normalization fluorescence reads typically introduces additional noise. default smoothing parameter smooth.fl suitable produce good-quality representations curves via nonparametric fits, linear fits either failed produced regression windows small. order obtain linear regression results accurately represent linear-increase section curves, decrease R2 threshold manually increase size sliding window (default calculated automatically sample). new settings need applied samples, re-run entire workflow adjusted parameters: Linear fit plots validate linear regressions re-running workflow adjusted parameters.","code":"plot(flFitRes$flFit$flFittedLinear[[1]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[3]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[6]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedSpline[[1]], basesize = 15) plot(flFitRes$flFit$flFittedSpline[[3]], basesize = 15) plot(flFitRes$flFit$flFittedSpline[[6]], basesize = 15) flFitRes <- fl.workflow(grodata = input,                           fit.opt = c(\"s\", \"l\"),                           x_type = \"time\",                           norm_fl = TRUE,                           lin.R2 = 0.95, # Decreased R2 threshold                           lin.h = 20, # Manually defined sliding window size                           ec50 = TRUE,                           dr.parameter = \"dY.spline\",                           suppress.messages = TRUE,                           export.res = FALSE,                           parallelize = FALSE) plot(flFitRes$flFit$flFittedLinear[[1]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[3]], cex.lab = 1.2, cex.axis = 1.2) plot(flFitRes$flFit$flFittedLinear[[6]], cex.lab = 1.2, cex.axis = 1.2)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"grouped-spline-fits","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Grouped spline fits","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"Applying plot() flFitRes object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.flFitRes() data.type = 'spline'. Combined plot spline fits performed. addition options available data.type = 'raw', arguments can defined control appearance secondary panel showing slope time. See ?plot.flFitRes options. arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.: Plot grid spline fits performed one concentration per row. See ?plot.grid available options.","code":"plot(flFitRes,      data.type = \"spline\",      deriv = TRUE,      legend.position = \"bottom\",      legend.ncol = 3,      n.ybreaks = 10,      basesize=10,      lwd = 0.7) plot.grid(flFitRes,           param = \"max_slope.spline\",           pal = \"Mint\",           log.y = FALSE,           basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"compare-growth-parameters","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Compare growth parameters","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"function plot.parameter() works also flFitRes objects compare computed curve parameters: Parameter plots. mean = TRUE, results replicates combined shown mean ± 95% confidence interval. functions combining different growth curves, arguments name, exclude.nm, conc exclude.conc allow (de)selection specific samples conditions. Since applied growth models log-transformed data, calling ‘dY.orig.model’ ‘.orig.model’ instead ‘dY.model’ ‘.model’ provides respective values original scale. linear spline fits, done automatically. details function, run ?plot.parameter.","code":"# Parameters obtained from linear regression plot.parameter(flFitRes, param = \"max_slope.linfit\", basesize = 10,     legend.position = \"bottom\") plot.parameter(flFitRes, param = \"dY.linfit\", basesize = 10,     legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(flFitRes, param = \"max_slope.spline\", basesize = 10,     legend.position = \"bottom\") plot.parameter(flFitRes, param = \"dY.spline\", basesize = 10,     legend.position = \"bottom\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_fluorescence.html","id":"dose-response-analysis","dir":"Articles","previous_headings":"Run a complete fluorescence analysis workflow > Visualize results","what":"Dose-response analysis","title":"Quantitiative Fluorescence Curve Evaluation with Package `QurvE`","text":"results dose-response analysis can visualized calling plot() drFit object stored within flFitRes. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively. Dose response analysis - model fits. details function, run ?plot.drFit.","code":"plot(flFitRes$drFit, cex.point = 1, cex.lab = 1.1, cex.axis = 1)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"virtually disciplines biology dealing living organisms, classical microbiology applied biotechnology, routine characterize growth species study. QurvE provides suite analysis tools make growth profiling quick, efficient, reproducible. addition, allows characterization fluorescence data , e.g., biosensor characterization plate reader experiments (discussed vignette Quantitiative Fluorescence Curve Evaluation Package QurvE). computational steps obtain -depth characterization combined user-friendly workflow functions range plotting functions allow visualization fits comparison organism performances. physiological parameter calculated (e.g., growth rate µ, doubling time tD, lag time \\(\\lambda\\), growth measurement increase \\(\\Delta\\)Y, equivalent fluorescence parameters) can used perform dose-response analysis determine half-maximal effective concentration (EC50). package build foundation two R packages Kahm et al. (2010) Petzoldt (2022). QurvE designed usable minimal prior knowledge R programming language programming general. need familiar idea running commands console writing basic scripts. R beginners, great starting point, good resources suggest using RStudio application. provides environment writing running R code. consideration R novices, QurvE establishes framework complete, detailed growth curve analysis can performed two simple steps: Read data custom format parse data plate reader experiment. Run workflow, including fitting growth curves, dose-response analysis, rendering report summarizes results. computational results workflow stored data container (list) can visualized passing generic function plot(list_object). QurvE extends user’s control fits defining thresholds quality criteria, allows direct parsing data plate reader result files, calculates parameters additional growth phase (bi-phasic growth).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"release-version","dir":"Articles","previous_headings":"Installation","what":"Release version","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"recent release version can found CRAN:","code":"install.packages(\"QurvE\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"development-version","dir":"Articles","previous_headings":"Installation","what":"Development version","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Install current version package devtools:","code":"install.packages(\"devtools\") library(devtools) install_github(\"NicWir/QurvE\")"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"shiny-app","dir":"Articles","previous_headings":"","what":"Shiny app","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE features graphical user interface (GUI) developed Shiny app, designed user-friendly intuitive. can start app running: See QurvE User Manual details use front-end application.","code":"QurvE::run_app()"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"growth-profiling-methods","dir":"Articles","previous_headings":"","what":"Growth profiling methods","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Three methods available characterize growth curves: Fit parametric growth models (log-transformed) growth data Determine maximum growth rates (µmax) log-linear part growth curve using heuristic approach proposed “growth rates made easy”-method Hall et al. (2014). , QurvE uses code package Petzoldt (2022), adds user-defined thresholds () R2 values linear fits, (ii) relative standard deviations (RSD) estimates slopes, (iii) minimum fraction total growth value increase (\\(\\Delta\\)Y) regression window cover considered analysis. thresholds ensure robust reproducible identification linear range best describes growth curve. Additionally, parameters secondary growth phase can extracted bi-linear growth curves.1 algorithm works follows: Fit linear regressions [Theil-Sen estimator (Sen, 1968; Theil, 1992)] subsets h consecutive, log-transformed data points (sliding window size h). , example, h=5, fit linear regression points 1 \\(\\dots\\) 5, 2 \\(\\dots\\) 6, 3 \\(\\dots\\) 7 forth. Find subset highest slope \\(\\mu_{max}\\). R2 RSD values regression meet defined thresholds data points within regression window account least defined fraction total growth measurement increase? , evaluate regression second highest slope, forth. Include also data points adjacent subsets slope least \\(defined \\space quota \\times \\mu_{max}\\), e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step iii. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following \\(\\mu_{max}\\) repeat heuristic linear method later time values. Find local maximum \\(\\mu_{max}\\) repeat heuristic linear method earlier time values. Choose greater two independently determined slopes \\(\\mu_{max}2\\). Perform smooth spline fit (log-transformed) growth data extract µmax maximum value first derivative1. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove ‘peak’ containing highest value first derivative (.e., \\(\\mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(\\mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(\\mu_{max}\\). Choose greater two independently determined slopes \\(\\mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"dose-response-analysis-methods","dir":"Articles","previous_headings":"","what":"Dose-response analysis methods","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"purpose dose-response analysis define sensitivity given organism effects compound potency substance, respectively. effects can either beneficial (e.g., nutrient compound) detrimental (e.g., antibiotic). sensitivity reflected half-maximal effective concentration (EC50), .e., concentration (dose) half-maximal response (e.g., \\(\\mu_{max}\\) \\(\\Delta\\)Y) observed. QurvE provides two methods determine EC50: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply 20 (parametric) dose-response models response vs. concentration data choose best model based Akaike information criterion (AIC). done using excellent package drc (Ritz et al., 2016).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"data-formats","dir":"Articles","previous_headings":"","what":"Data formats","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE accepts files formats .xls, .xlsx, .csv, .tsv, .txt (tab separated). data files structured shown Figure @ref(fig:data-layout). Alternatively, data parsers available allow direct import raw data different culture instruments. list currently supported devices, please run ?parse_data. Please note: recommend always converting .xls .xlsx files alternate format first speed parsing process. Reading Excel files may require orders magnitude longer processing time.","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"custom-format","dir":"Articles","previous_headings":"Data formats","what":"Custom format","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"ensure compatibility type measurement data type (e.g., optical density, cell count, measured dimensions), QurvE uses custom data layout. first column contains time values ‘Time’ top cell, cells #2 #3 ignored. remaining columns contain measurement values following sample identifiers top three rows: Sample name; usually combination organism condition, ‘blank’. Replicate number; replicates identified identical names concentration values. one type replicate (biological technical) performed, enter numerical values . biological technical replicates biological replicates performed, technical replicates replicate number. technical replicates combined average value. (optional) Concentration values added compound; information used perform dose-response analysis. Several experiments (e.g., runs different plate readers) can combined single file analyzed simultaneously. Therefore, different experiments marked presence separate time columns. Different lengths values time columns permitted.  read data custom format, run: data.growth argument takes path file name R dataframe object containing experimental data custom format. csvsep specifies separator symbol (required .csv files; default: ';'). dec decimal separator (required .csv, .tsv, .txt files; default: '.'). Excel file format used, sheet.growth specifies number name (quotes) sheet containing data. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calib.growth argument, formula can provided form ‘y = function(x)’ (e.g., calib.growth = 'y = x * 2 + 0.5') transform growth measurement values.","code":"grodata <- read_data(data.growth = 'path_to_data_file',                    csvsep = ';', # or ','                    dec = '.', # or ','                    sheet.growth = 1, # number (or \"name\") of the EXCEL file sheet containing data                    subtract.blank = TRUE,                    calib.growth = NULL)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"data-parser","dir":"Articles","previous_headings":"Data formats","what":"Data parser","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"data generated culture devices (e.g., plate readers) different manufacturers come different formats. data used directly, must first “parsed” plate reader QurvE standard format. scenario, sample information must provided separate table maps samples respective identifiers.mapping table must following layout (Figure @ref(fig:mapping-layout)): Data parser mapping layout parse data, run: data.file argument takes path file containing experimental data exported culture device, map.file path file mapping information. software, can specify device (software) used generate data. csvsep.data csvsep.map specify separator symbol data mapping file, respectively (required .csv files; default: ';'). dec.data dec.map decimal separator used data mapping file, respectively (required .csv, .tsv, .txt files; default: '.'). Excel file format used one data mapping file, sheet.data /sheet.map specify number name (quotes) sheet containing data mapping information, respectively. Excel file contains data mapping information different worksheets, file path needs specified data.fileand map.file. subtract.blank = TRUE, samples name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. argument convert.time accepts function ‘y = function(x)’ transform time values (e.g., convert.time = 'y = x/3600' convert seconds hours). one read type identified provided data file, user prompted specify measurements belong growth, fluorescence, fluorescence2, respectively.","code":"grodata <- parse_data(data.file = 'path_to_data_file',                     map.file = 'path_to_mapping_file',                     software = 'used_software_or_device',                     csvsep.data = ';', # or ','                     dec.data = '.', # or ','                     csvsep.map = ';', # or ','                     dec.map = '.', # or ','                     sheet.data = 1, # number (or \"name\") of the EXCEL file sheet containing data                     sheet.map = 1, # number (or \"name\") of the EXCEL file sheet containing                                    # mapping information                     subtract.blank = TRUE,                     calib.growth = NULL,                     convert.time = NULL)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"run-a-complete-growth-analysis-workflow","dir":"Articles","previous_headings":"","what":"Run a complete growth analysis workflow","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"QurvE reduces computational steps required create complete growth profiling two steps, read data run workflow. loading package: load experimental data publication Wirth & Nikel (2021) Pseudomonas putida KT2440 engineered strain tested sensitivity towards product 2-fluoromuconic acid:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"load-data","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Load data","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"created object grodata can inspected View(grodata). list class grodata containing: time matrix 66 rows, corresponding one sample dataset, 161 columns, .e., time values sample. growth data frame 66 rows 161+3 columns. three additional columns contain sample identifiers condition, replicate, concentration. fluorescence1 (: NA) fluorescence2 (: NA) norm.fluorescence1 (: NA) norm.fluorescence2 (: NA) expdesign, data frame containing label, condition, replicate, concentration sample: can plot raw data. Applying generic plot() function grodata objects calls function plot.grodata().: Raw data plot. Conditions can selected deselected using names = c('grp1', 'grp2') argument exclude.nm = c('grp3', 'grp4') argument, respectively. Similarly, concentrations can (de-selected) via conc exclude.conc arguments. plot individual samples instead grouping replicates, add mean = FALSE. See ?plot.grodata options.","code":"grodata <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",     package = \"QurvE\"), csvsep = \";\") head(grodata$expdesign) #>             label condition replicate concentration #> 1 KT2440 | 1 | 90    KT2440         1            90 #> 2 KT2440 | 1 | 70    KT2440         1            70 #> 3 KT2440 | 1 | 50    KT2440         1            50 #> 4 KT2440 | 1 | 25    KT2440         1            25 #> 5 KT2440 | 1 | 20    KT2440         1            20 #> 6 KT2440 | 1 | 15    KT2440         1            15 plot(grodata, data.type = \"growth\", log.y = FALSE,      x.lim = c(NA, 32), legend.position = \"right\",      exclude.conc = c(50, 70, 90),      basesize = 10, legend.ncol = 1, lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"run-workflow","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Run Workflow","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"perform complete growth profiling samples input dataset, call growth.workflow() function grodata object. supress.messages = TRUE, avoid printing information every sample’s fit sample console. default, selected response parameter perform dose-response analysis ‘mu.linfit’. choose different parameter, provide argument dr.parameter = 'choice'. list appropriate parameters provided within function documentation (?growth.workflow). option export.res set TRUE, tab-delimited .txt files summarizing computation results created, well grofit object (object class grofit) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:grofit-container) shows structure generated grofit object. RStudio, View(grofit) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?growth.workflow arguments customize workflow. Internal structure grofitobject generated growth.workflow().","code":"grofit <- growth.workflow(grodata = grodata, fit.opt = \"a\", ec50 = TRUE,     suppress.messages = TRUE,      export.res = FALSE, # Prevent creating TXT table and RData files with results     parallelize = FALSE) # Use only one available CPU core"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"tabular-results","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Tabular results","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"grofit object contains two tables summarizing computational results: - grofit$gcFit$gcTable lists calculated physiological parameters every sample fit - grofit$drFit$drTable contains results dose-response analysis TestId AddId concentration reliability_tag used.model log.x log.y.lin log.y.spline 1 KT2440 1 90 TRUE  FALSE TRUE TRUE 2 KT2440 1 70 TRUE  FALSE TRUE TRUE 3 KT2440 1 50 TRUE  FALSE TRUE TRUE log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit dY.linfit 1 TRUE 0 0  0 2 TRUE 0 0  0 3 TRUE 0 0  0 Additionally, dedicated functions table_group_growth_linear(), table_group_growth_model(), table_group_growth_spline() allow generation grouped results tables three fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within grofit.","code":"# show the first three rows and first 14 columns of gcTable gcTable <- grofit$gcFit$gcTable gcTable[1:3, 1:14] # Show drTable. The function as.data.frame() ensures that it is shown in table format. drTable <- as.data.frame(grofit$drFit$drTable)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"visualize-results","dir":"Articles","previous_headings":"Run a complete growth analysis workflow","what":"Visualize results","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Several generic plot() methods written allow easy plotting results merely accessing list items within grofit object structure (Figure @ref(fig:grofit-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"grouped-spline-fits","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Grouped spline fits","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"Applying plot() grofit object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.grofit() data.type = 'spline' thus, options available described Figure @ref(fig:raw-data-plot). Combined plot spline fits performed. addition options available data.type = 'raw', arguments can defined control appearance secondary panel showing slope time. See ?plot.grofit options.","code":"plot(grofit,      data.type = \"spline\",      log.y = TRUE,      deriv = TRUE,      conc = c(0,5,10,15,20),      legend.position = \"right\",      legend.ncol = 1,      x.lim = c(NA, 32),      y.lim = c(0.01,NA),      n.ybreaks = 10,      basesize=10,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"compare-growth-parameters","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Compare growth parameters","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"convenient way compare performance different organisms different conditions plot calculated growth parameters means function plot.parameter(). Parameter plots. mean = TRUE, results replicates combined shown mean ± 95% confidence interval. functions combining different growth curves, arguments name, exclude.nm, conc exclude.conc allow (de)selection specific samples conditions. Since applied growth models log-transformed data, calling ‘dY.orig.model’ ‘.orig.model’ instead ‘dY.model’ ‘.model’ provides respective values original scale. linear spline fits, done automatically. details function, run ?plot.parameter. parameter plot ´mu.linfit´ (growth rates determined linear regression), can see outlier strain KT2440 concentration 0. can plot individual fits condition find due fit quality: Linear fit plots identify sample outliers. details function, run ?plot.gcFitLinear. Apparently, algorithm find maximum slope growth curve standard threshold lin.R2 = 0.97 find appropriate fit within first stage growth due insufficient linearity. can manually re-run fit sample adjusted parameters. Thereby, lower R2 threshold increase size sliding window cover larger fraction growth curve. , update respective entries gcTable object summarizes fitting results (plot.parameter() accesses extract relevant data). generic function summary(), applied fit object single sample within grofit, provides required parameters update table. Lastly, also re-run dose-response analysis since ‘mu.linfit’ used response parameter (default), including erroneous value. Note: process manually updating grofitelements adjusted fits can avoided re-running growth.workflow adjusted global parameters running workflow interactive mode (interactive = TRUE). interactive mode, individual fit printed user can decide re-run single fit adjusted parameters. can validate quality updated fit: Updated linear fit outlier sample ‘KT2440 | 2 | 0’. looks better! Parameter plot updated fit.","code":"# Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.linfit\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(grofit, param = \"mu.spline\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.spline\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from model fits plot.parameter(grofit, param = \"mu.model\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.orig.model\", basesize = 10,     legend.position = \"bottom\") plot(grofit$gcFit$gcFittedLinear$`KT2440 | 1 | 0`, cex.lab = 1.2,     cex.axis = 1.2) plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2,     cex.axis = 1.2) # Replace the existing linear fit entry for sample `KT2440 | 2 | 0` # with a new fit grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0` <-   growth.gcFitLinear(time = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.time,                      data = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.data,                      control = growth.control(lin.R2 = 0.95, lin.h = 10))  # extract row index of sample `KT2440 | 2 | 0` ndx.row <- grep(\"KT2440 \\\\| 2 \\\\| 0\", grofit$expdesign$label)  # get column indices of linear fit parameters (\".linfit\") ndx.col <- grep(\"\\\\.linfit\", colnames(grofit$gcFit$gcTable) )  # Replace previous growth parameters stored in gcTable grofit$gcFit$gcTable[ndx.row, ndx.col] <-   summary(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`)  # Replace existing dose-response analysis with new fit grofit$drFit <- growth.drFit(   gcTable = grofit$gcFit$gcTable,   control = grofit$control) # we can copy the control object from the original workflow. plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2) # Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"plot-grids","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Plot grids","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.: Plot grid spline fits performed . See ?plot.grid available options.","code":"plot.grid(grofit,            param = \"mu.linfit\",            pal = \"Mint\",            log.y = FALSE,           sort_by_conc = FALSE,           basesize = 9)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"dose-response-analysis","dir":"Articles","previous_headings":"Run a complete growth analysis workflow > Visualize results","what":"Dose-response analysis","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"results dose-response analysis can visualized calling plot() drFit object stored within grofit. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice dr.method workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively. Dose response analysis - model fits. details function, run ?plot.drFit.","code":"plot(grofit$drFit, cex.point = 1, basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/articles/vignette_growth.html","id":"bootstrapping","dir":"Articles","previous_headings":"","what":"Bootstrapping","title":"Quantitiative Growth Curve Evaluation with Package `QurvE`","text":"growth experiments performed larger scale manual growth measurements, technical deviations can result outliers. outliers can lead distortion curve fits, especially fewer data points available usual plate reading experiments. instance, bootstrapping can provide realistic estimation growth parameters. Bootstrapping statistical procedure resamples single dataset create many simulated samples. done randomly drawing data points dataset replacement original number data points reached. analysis (: growth fitting) performed individually bootstrapped replicate. variation resulting estimated parameters reasonable approximation variance parameters. include bootstrapping QurvE workflow, define argument nboot.gc. Similarly, can include bootstrapping dose-response analysis done dr.method = 'spline' defining argument nboot.dr. plot results growth fit bootstrapping, call plot() gcBootSpline object: Nonparametric growth fit bootstrapping. details function, run ?plot.gcBootSpline. applying plot() drBootSpline object, can plot dose-response bootstrap results: Dose-response analysis bootstrapping. details function, run ?plot.drBootSpline.","code":"grofit_bt <- growth.workflow(grodata = grodata,                              fit.opt = \"s\", # perform only nonparametric growth fitting                              nboot.gc = 50,                              ec50 = T,                              dr.method = \"spline\",                              dr.parameter = \"mu.spline\",                              nboot.dr = 50,                              smooth.dr = 0.25,                              suppress.messages = TRUE,                              export.res = F,                              parallelize = FALSE) plot(grofit_bt$gcFit$gcBootSpline[[7]], # Double braces serve as an alternative to                                         # access list items and allow their access by number      combine = TRUE, # combine both growth curves and parameter plots in the same window      lwd = 0.7) plot(grofit_bt$drFit$drBootSpline[[1]],      combine = TRUE, # combine both dose-response curves and parameter plots in the same window      lwd = 0.7)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicolas T. Wirth. Author, maintainer, copyright holder. Jonathan Funk. Author.            Co-developer shiny app. Matthias Kahm. Contributor.            Author 'grofit' package, whose general data structure adopted QurvE. Maik Kschischo. Contributor.            Author 'grofit' package, whose general data structure adopted QurvE. Thomas Petzoldt. Contributor.            Creator package 'growthrates', whose function calculating linear regressions served template QurvE. Andrew Stein. Contributor.            Creator 'xgxr' package QurvE adopted code plot axis ticks log10 scale. Michael W. Kearney. Contributor.            Creator 'tfse' package QurvE adopted match_arg function. Santiago . Hurtado. Contributor.            Creator 'RobustLinearReg' package QurvE adopted Theil Sehn Regression method. Mark Heckmann. Contributor.            Creator 'zipFastener' function; source: https://ryouready.wordpress.com/2009/03/27/r-zip-fastener--two-data-frames-combining-rows--columns--two-dataframes---alternating-manner/ Nicholas Hamilton. Contributor.            Creator 'colFmt' function. Evan Friedland. Contributor.            Creator 'inflect' function. Heather Turner. Contributor.            Creator 'base_breaks' function. Georgi N. Boshnakov. Contributor.            Creator 'gbRd' package functions used display function help pages within shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wirth N, Funk J (2023). QurvE: Robust User-Friendly Analysis Growth Fluorescence Curves. https://github.com/NicWir/QurvE, https://nicwir.github.io/QurvE/.","code":"@Manual{,   title = {QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves},   author = {Nicolas T. Wirth and Jonathan Funk},   year = {2023},   note = {https://github.com/NicWir/QurvE, https://nicwir.github.io/QurvE/}, }"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"introduction","dir":"","previous_headings":"","what":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"virtually disciplines biology dealing living organisms, classical microbiology applied biotechnology, routine characterize growth species study. QurvE provides suite analysis tools make growth profiling quick, efficient, reproducible. addition, allows characterization fluorescence data , e.g., biosensor characterization plate reader experiments (discussed vignette Quantitiative Fluorescence Curve Evaluation Package QurvE). computational steps obtain -depth characterization combined user-friendly workflow functions range plotting functions allow visualization fits comparison organism performances. physiological parameter calculated (e.g., growth rate µ, doubling time tD, lag time λ, growth measurement increase ΔY, equivalent fluorescence parameters) can used perform dose-response analysis determine half-maximal effective concentration (EC50). package build foundation two R packages Kahm et al. (2010) Petzoldt (2022). QurvE designed usable minimal prior knowledge R programming language programming general. need familiar idea running commands console writing basic scripts. R beginners, great starting point, good resources suggest using RStudio application. provides environment writing running R code. consideration R novices, QurvE establishes framework complete, detailed growth curve analysis can performed two simple steps: Read data custom format parse data plate reader experiment. Run workflow, including fitting growth curves, dose-response analysis, rendering report summarizes results. computational results workflow stored data container (list) can visualized passing generic function plot(list_object). QurvE extends user’s control fits defining thresholds quality criteria, allows direct parsing data plate reader result files, calculates parameters additional growth phase (bi-phasic growth).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/index.html","id":"release-version","dir":"","previous_headings":"","what":"Release version","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"recent release version can found CRAN:","code":"install.packages(\"QurvE\")"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Install current version package devtools:","code":"install.packages(\"devtools\") library(devtools) install_github(\"NicWir/QurvE\")"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"shiny-app","dir":"","previous_headings":"","what":"Shiny app","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE features graphical user interface (GUI) developed Shiny app, designed user-friendly intuitive. can start app running: See QurvE User Manual details use front-end application.","code":"QurvE::run_app()"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"growth-profiling-methods","dir":"","previous_headings":"","what":"Growth profiling methods","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Three methods available characterize growth curves: Fit parametric growth models (log-transformed) growth data Determine maximum growth rates (µmax) log-linear part growth curve using heuristic approach proposed “growth rates made easy”-method Hall et al. (2014). , QurvE uses code package Petzoldt (2022), adds user-defined thresholds () R2 values linear fits, (ii) relative standard deviations (RSD) estimates slopes, (iii) minimum fraction total growth value increase (ΔY) regression window cover considered analysis. thresholds ensure robust reproducible identification linear range best describes growth curve. Additionally, parameters secondary growth phase can extracted bi-linear growth curves.1 algorithm works follows: Fit linear regressions [Theil-Sen estimator (Sen, 1968; Theil, 1992)] subsets h consecutive, log-transformed data points (sliding window size h). , example, h=5, fit linear regression points 1 … 5, 2 … 6, 3 … 7 forth. Find subset highest slope μmax. R2 RSD values regression meet defined thresholds data points within regression window account least defined fraction total growth measurement increase? , evaluate regression second highest slope, forth. Include also data points adjacent subsets slope least $defined \\space quota \\times \\mu_{max}$, e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step iii. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following μmax repeat heuristic linear method later time values. Find local maximum μmax repeat heuristic linear method earlier time values. Choose greater two independently determined slopes μmax2. Perform smooth spline fit (log-transformed) growth data extract µmax maximum value first derivative1. biphasic = TRUE (see section @ref(run-workflow)), following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove ‘peak’ containing highest value first derivative (.e., μmax) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum μmax. Repeat smooth spline fit identification maximum slope earlier time values local minimum μmax. Choose greater two independently determined slopes μmax2.","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"dose-response-analysis-methods","dir":"","previous_headings":"","what":"Dose-response analysis methods","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"purpose dose-response analysis define sensitivity given organism effects compound potency substance, respectively. effects can either beneficial (e.g., nutrient compound) detrimental (e.g., antibiotic). sensitivity reflected half-maximal effective concentration (EC50), .e., concentration (dose) half-maximal response (e.g., μmax ΔY) observed. QurvE provides two methods determine EC50: Perform smooth spline fit response vs. concentration data extract EC50 concentration midpoint largest smallest response value. Apply 20 (parametric) dose-response models response vs. concentration data choose best model based Akaike information criterion (AIC). done using excellent package drc (Ritz et al., 2016).","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"data-formats","dir":"","previous_headings":"","what":"Data formats","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE accepts files formats .xls, .xlsx, .csv, .tsv, .txt (tab separated). data files structured shown Figure @ref(fig:data-layout). Alternatively, data parsers available allow direct import raw data different culture instruments. list currently supported devices, please run ?parse_data. Please note: recommend always converting .xls .xlsx files alternate format first speed parsing process. Reading Excel files may require orders magnitude longer processing time.","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"custom-format","dir":"","previous_headings":"","what":"Custom format","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"ensure compatibility type measurement data type (e.g., optical density, cell count, measured dimensions), QurvE uses custom data layout. first column contains time values ‘Time’ top cell, cells #2 #3 ignored. remaining columns contain measurement values following sample identifiers top three rows: Sample name; usually combination organism condition, ‘blank’. Replicate number; replicates identified identical names concentration values. one type replicate (biological technical) performed, enter numerical values . biological technical replicates biological replicates performed, technical replicates replicate number. technical replicates combined average value. (optional) Concentration values added compound; information used perform dose-response analysis. Several experiments (e.g., runs different plate readers) can combined single file analyzed simultaneously. Therefore, different experiments marked presence separate time columns. Different lengths values time columns permitted.  read data custom format, run: data.growth argument takes path file name R dataframe object containing experimental data custom format. csvsep specifies separator symbol (required .csv files; default: ';'). dec decimal separator (required .csv, .tsv, .txt files; default: '.'). Excel file format used, sheet.growth specifies number name (quotes) sheet containing data. subtract.blank = TRUE, columns name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. calib.growth argument, formula can provided form ‘y = function(x)’ (e.g., calib.growth = 'y = x * 2 + 0.5') transform growth measurement values.","code":"grodata <- read_data(data.growth = 'path_to_data_file',                    csvsep = ';', # or ','                    dec = '.', # or ','                    sheet.growth = 1, # number (or \"name\") of the EXCEL file sheet containing data                    subtract.blank = TRUE,                    calib.growth = NULL)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"data-parser","dir":"","previous_headings":"","what":"Data parser","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"data generated culture devices (e.g., plate readers) different manufacturers come different formats. data used directly, must first “parsed” plate reader QurvE standard format. scenario, sample information must provided separate table maps samples respective identifiers.mapping table must following layout (Figure @ref(fig:mapping-layout)):  parse data, run: data.file argument takes path file containing experimental data exported culture device, map.file path file mapping information. software, can specify device (software) used generate data. csvsep.data csvsep.map specify separator symbol data mapping file, respectively (required .csv files; default: ';'). dec.data dec.map decimal separator used data mapping file, respectively (required .csv, .tsv, .txt files; default: '.'). Excel file format used one data mapping file, sheet.data /sheet.map specify number name (quotes) sheet containing data mapping information, respectively. Excel file contains data mapping information different worksheets, file path needs specified data.fileand map.file. subtract.blank = TRUE, samples name ‘blank’ combined row-wise average, mean values subtracted measurements remaining samples. argument convert.time accepts function ‘y = function(x)’ transform time values (e.g., convert.time = 'y = x/3600' convert seconds hours). one read type identified provided data file, user prompted specify measurements belong growth, fluorescence, fluorescence2, respectively.","code":"grodata <- parse_data(data.file = 'path_to_data_file',                     map.file = 'path_to_mapping_file',                     software = 'used_software_or_device',                     csvsep.data = ';', # or ','                     dec.data = '.', # or ','                     csvsep.map = ';', # or ','                     dec.map = '.', # or ','                     sheet.data = 1, # number (or \"name\") of the EXCEL file sheet containing data                     sheet.map = 1, # number (or \"name\") of the EXCEL file sheet containing                                    # mapping information                     subtract.blank = TRUE,                     calib.growth = NULL,                     convert.time = NULL)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"run-a-complete-growth-analysis-workflow","dir":"","previous_headings":"","what":"Run a complete growth analysis workflow","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"QurvE reduces computational steps required create complete growth profiling two steps, read data run workflow. loading package: load experimental data publication Wirth & Nikel (2021) Pseudomonas putida KT2440 engineered strain tested sensitivity towards product 2-fluoromuconic acid:","code":"library(QurvE)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"load-data","dir":"","previous_headings":"","what":"Load data","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"created object grodata can inspected View(grodata). list class grodata containing: time matrix 66 rows, corresponding one sample dataset, 161 columns, .e., time values sample. growth data frame 66 rows 161+3 columns. three additional columns contain sample identifiers condition, replicate, concentration. fluorescence1 (: NA) fluorescence2 (: NA) norm.fluorescence1 (: NA) norm.fluorescence2 (: NA) expdesign, data frame containing label, condition, replicate, concentration sample: can plot raw data. Applying generic plot() function grodata objects calls function plot.grodata().:","code":"grodata <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",     package = \"QurvE\"), csvsep = \";\") head(grodata$expdesign) #>             label condition replicate concentration #> 1 KT2440 | 1 | 90    KT2440         1            90 #> 2 KT2440 | 1 | 70    KT2440         1            70 #> 3 KT2440 | 1 | 50    KT2440         1            50 #> 4 KT2440 | 1 | 25    KT2440         1            25 #> 5 KT2440 | 1 | 20    KT2440         1            20 #> 6 KT2440 | 1 | 15    KT2440         1            15 plot(grodata, data.type = \"growth\", log.y = FALSE,      x.lim = c(NA, 32), legend.position = \"right\",      exclude.conc = c(50, 70, 90),      basesize = 10, legend.ncol = 1, lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"run-workflow","dir":"","previous_headings":"","what":"Run Workflow","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"perform complete growth profiling samples input dataset, call growth.workflow() function grodata object. supress.messages = TRUE, avoid printing information every sample’s fit sample console. default, selected response parameter perform dose-response analysis ‘mu.linfit’. choose different parameter, provide argument dr.parameter = 'choice'. list appropriate parameters provided within function documentation (?growth.workflow). option export.res set TRUE, tab-delimited .txt files summarizing computation results created, well grofit object (object class grofit) .RData file. object (.RData file) contains raw data, fitting options, computational results. Figure @ref(fig:grofit-container) shows structure generated grofit object. RStudio, View(grofit) allows interactive inspection data container. want create report summarizing computational results including graphical representation every fit, provide desired output format(s) report = 'pdf', report = 'html', report = c('pdf', 'html'). advantage report HTML format every figure can exported (editable) PDF file. spirit good scientific practice (data transparency), encourage anyone using QurvE attach .RData file generated reports publication. Arguments commonly modified: Please consult ?growth.workflow arguments customize workflow.","code":"grofit <- growth.workflow(grodata = grodata, fit.opt = \"a\", ec50 = TRUE,     suppress.messages = TRUE, export.res = FALSE)  # Prevent creating TXT table and RData files with results"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"tabular-results","dir":"","previous_headings":"","what":"Tabular results","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"grofit object contains two tables summarizing computational results: - grofit$gcFit$gcTable lists calculated physiological parameters every sample fit - grofit$drFit$drTable contains results dose-response analysis TestId AddId concentration reliability_tag used.model log.x log.y.lin log.y.spline 1 KT2440 1 90 TRUE  FALSE TRUE TRUE 2 KT2440 1 70 TRUE  FALSE TRUE TRUE 3 KT2440 1 50 TRUE  FALSE TRUE TRUE log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit dY.linfit 1 TRUE 0 0  0 2 TRUE 0 0  0 3 TRUE 0 0  0 Additionally, dedicated functions table_group_growth_linear(), table_group_growth_model(), table_group_growth_spline() allow generation grouped results tables three fit types averages standard deviations. column headers resulting data frames formatted HTML visualization shiny DT::datatable(). summary results individual fit can obtained applying generic function summary() fit object within grofit.","code":"# show the first three rows and first 14 columns of gcTable gcTable <- grofit$gcFit$gcTable gcTable[1:3, 1:14] # Show drTable. The function as.data.frame() ensures that it is shown in table format. drTable <- as.data.frame(grofit$drFit$drTable)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"visualize-results","dir":"","previous_headings":"","what":"Visualize results","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Several generic plot() methods written allow easy plotting results merely accessing list items within grofit object structure (Figure @ref(fig:grofit-container)).","code":""},{"path":"https://nicwir.github.io/QurvE/index.html","id":"grouped-spline-fits","dir":"","previous_headings":"Visualize results","what":"Grouped spline fits","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"Applying plot() grofit object produces figure spline fits performed well first derivative (slope) time. generic function calls plot.grofit() data.type = 'spline' thus, options available described Figure @ref(fig:raw-data-plot).","code":"plot(grofit,      data.type = \"spline\",      log.y = TRUE,      deriv = TRUE,      conc = c(0,5,10,15,20),      legend.position = \"right\",      legend.ncol = 1,      x.lim = c(NA, 32),      y.lim = c(0.01,NA),      n.ybreaks = 10,      basesize=10,      lwd = 0.7)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"compare-growth-parameters","dir":"","previous_headings":"Visualize results","what":"Compare growth parameters","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"convenient way compare performance different organisms different conditions plot calculated growth parameters means function plot.parameter().  parameter plot ´mu.linfit´ (growth rates determined linear regression), can see outlier strain KT2440 concentration 0. can plot individual fits condition find due fit quality:  Apparently, algorithm find maximum slope growth curve standard threshold lin.R2 = 0.97 find appropriate fit within first stage growth due insufficient linearity. can manually re-run fit sample adjusted parameters. Thereby, lower R2 threshold increase size sliding window cover larger fraction growth curve. , update respective entries gcTable object summarizes fitting results (plot.parameter() accesses extract relevant data). generic function summary(), applied fit object single sample within grofit, provides required parameters update table. Lastly, also re-run dose-response analysis since ‘mu.linfit’ used response parameter (default), including erroneous value. Note: process manually updating grofitelements adjusted fits can avoided re-running growth.workflow adjusted global parameters running workflow interactive mode (interactive = TRUE). interactive mode, individual fit printed user can decide re-run single fit adjusted parameters. can validate quality updated fit:  looks better!","code":"# Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.linfit\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from nonparametric fits plot.parameter(grofit, param = \"mu.spline\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.spline\", basesize = 10, legend.position = \"bottom\")  # Parameters obtained from model fits plot.parameter(grofit, param = \"mu.model\", basesize = 10, legend.position = \"bottom\") plot.parameter(grofit, param = \"dY.orig.model\", basesize = 10,     legend.position = \"bottom\") plot(grofit$gcFit$gcFittedLinear$`KT2440 | 1 | 0`, cex.lab = 1.2,     cex.axis = 1.2) plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2,     cex.axis = 1.2) # Replace the existing linear fit entry for sample `KT2440 | 2 | 0` # with a new fit grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0` <-   growth.gcFitLinear(time = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.time,                      data = grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`$raw.data,                      control = growth.control(lin.R2 = 0.95, lin.h = 10))  # extract row index of sample `KT2440 | 2 | 0` ndx.row <- grep(\"KT2440 \\\\| 2 \\\\| 0\", grofit$expdesign$label)  # get column indices of linear fit parameters (\".linfit\") ndx.col <- grep(\"\\\\.linfit\", colnames(grofit$gcFit$gcTable) )  # Replace previous growth parameters stored in gcTable grofit$gcFit$gcTable[ndx.row, ndx.col] <-   summary(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`)  # Replace existing dose-response analysis with new fit grofit$drFit <- growth.drFit(   gcTable = grofit$gcFit$gcTable,   control = grofit$control) # we can copy the control object from the original workflow. plot(grofit$gcFit$gcFittedLinear$`KT2440 | 2 | 0`, cex.lab = 1.2) # Parameters obtained from linear regression plot.parameter(grofit, param = \"mu.linfit\", basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"plot-grids","dir":"","previous_headings":"Visualize results","what":"Plot grids","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"arranging individual samples grid, can create visual representation similar heat map illustrates values chosen parameter. can helpful way gain insights understand trends within data.:","code":"plot.grid(grofit,           param = \"mu.linfit\",           pal = \"Mint\",           log.y = FALSE,           sort_by_conc = FALSE,           basesize = 9)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"dose-response-analysis","dir":"","previous_headings":"Visualize results","what":"Dose-response analysis","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"results dose-response analysis can visualized calling plot() drFit object stored within grofit. action calls plot.drFit() turn runs plot.drFitSpline() plot.drFitModel() (depending choice dr.method workflow) every condition dose-response analysis performed. Alternatively, can call plot() list elements grofit$drFit$drFittedModels grofit$drFit$drFittedSplines, respectively.","code":"plot(grofit$drFit, cex.point = 1, basesize = 12)"},{"path":"https://nicwir.github.io/QurvE/index.html","id":"bootstrapping","dir":"","previous_headings":"","what":"Bootstrapping","title":"Robust and User-Friendly Analysis of Growth and Fluorescence Curves","text":"growth experiments performed larger scale manual growth measurements, technical deviations can result outliers. outliers can lead distortion curve fits, especially fewer data points available usual plate reading experiments. instance, bootstrapping can provide realistic estimation growth parameters. Bootstrapping statistical procedure resamples single dataset create many simulated samples. done randomly drawing data points dataset replacement original number data points reached. analysis (: growth fitting) performed individually bootstrapped replicate. variation resulting estimated parameters reasonable approximation variance parameters. include bootstrapping QurvE workflow, define argument nboot.gc. Similarly, can include bootstrapping dose-response analysis done dr.method = 'spline' defining argument nboot.dr. plot results growth fit bootstrapping, call plot() gcBootSpline object:  applying plot() drBootSpline object, can plot dose-response bootstrap results:","code":"grofit_bt <- growth.workflow(grodata = grodata,                              fit.opt = \"s\", # perform only nonparametric growth fitting                              nboot.gc = 50,                              ec50 = T,                              dr.method = \"spline\",                              dr.parameter = \"mu.spline\",                              nboot.dr = 50,                              smooth.dr = 0.25,                              suppress.messages = TRUE,                              export.res = F) plot(grofit_bt$gcFit$gcBootSpline[[7]], # Double braces serve as an alternative to                                         # access list items and allow their access by number      combine = TRUE, # combine both growth curves and parameter plots in the same window      lwd = 0.7) plot(grofit_bt$drFit$drBootSpline[[1]],      combine = TRUE, # combine both dose-response curves and parameter plots in the same window      lwd = 0.7)"},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/baranyi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","title":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","text":"Calculate values Baranyi growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/baranyi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","text":"","code":"baranyi(time, A, mu, lambda, addpar)"},{"path":"https://nicwir.github.io/QurvE/reference/baranyi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar additional parameters (: minimum growth)","code":""},{"path":"https://nicwir.github.io/QurvE/reference/baranyi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/baranyi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the Baranyi growth model for given time points and growth parameters. — baranyi","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) growth <- baranyi(time, A = 3, mu=  0.6, lambda = 3, addpar = 0.01)  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/base_breaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty ticks for log scale in ggplot — base_breaks","title":"Pretty ticks for log scale in ggplot — base_breaks","text":"Pretty ticks log scale ggplot","code":""},{"path":"https://nicwir.github.io/QurvE/reference/base_breaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty ticks for log scale in ggplot — base_breaks","text":"","code":"base_breaks(n = 10)"},{"path":"https://nicwir.github.io/QurvE/reference/base_breaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty ticks for log scale in ggplot — base_breaks","text":"n Number breaks","code":""},{"path":"https://nicwir.github.io/QurvE/reference/base_breaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty ticks for log scale in ggplot — base_breaks","text":"call toaxisTicks create pretty axis ticks.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/base_breaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pretty ticks for log scale in ggplot — base_breaks","text":"","code":"if (FALSE) { #Define values n <- seq(1:10) x <- 10*(1/2)^n y <- gompertz(time = x, A = 2, mu = 0.6, lambda = 3)  df <- data.frame(x = x,                  y = y)  ggplot(df, aes(x = x, y = y)) +        geom_point() +        scale_x_log10(breaks = base_breaks(n = 10)) +        scale_y_log10(breaks = base_breaks(n = 6)) }"},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"Calculates values biosensor response model given time points response parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"","code":"biosensor.eq(x, y.min, y.max, K, n)"},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"x vector concentration values y.min minimum fluorescence value y.max maximum fluorescence value K Sensitivity parameter n Cooperativity parameter","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"vector fluorescence values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/biosensor.eq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function used to fit a biosensor response model with nlsLM — biosensor.eq","text":"","code":"n <- seq(1:10) conc <- rev(10*(1/2)^n) fit <- biosensor.eq(conc, 300, 82000, 0.85, 2)"},{"path":"https://nicwir.github.io/QurvE/reference/calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","title":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","text":"Apply data transformation/calibration measurement values dataframe","code":""},{"path":"https://nicwir.github.io/QurvE/reference/calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","text":"","code":"calibrate(df, equation)"},{"path":"https://nicwir.github.io/QurvE/reference/calibrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","text":"df R dataframe object data QurvE custom format. first three table rows contain sample description replicate number (optional: followed letter indicate technical replicates) concentration value (optional) equation equation form 'y = function(x)' (example: 'y = x^2 * 0.3 - 0.5') convert values.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/calibrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","text":"Dataframe df values adjusted based provided equation.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply data transformation/calibration to measurement values in a dataframe — calibrate","text":"","code":"if (FALSE) { # Create random growth dataset rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Convert dataset into QurvE custom format df <- cbind(   \"time\" = c(\"Time\", NA, NA, rnd.data1$time[1,]),   t(rnd.data1$data))  # Perform calibration df.calib <- calibrate(df, \"y = 2 * x\")  # Inspect results head(df) head(df.calib) }"},{"path":"https://nicwir.github.io/QurvE/reference/colFmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Format font color for Markdown reports — colFmt","title":"Format font color for Markdown reports — colFmt","text":"colFmt formats input depending PDF HTML output give colored text reports.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/colFmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format font color for Markdown reports — colFmt","text":"","code":"colFmt(x, color)"},{"path":"https://nicwir.github.io/QurvE/reference/colFmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format font color for Markdown reports — colFmt","text":"x character string. text colored. color (Character) color.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/colFmt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format font color for Markdown reports — colFmt","text":"LaTeX- HTML-formatted string assign color text based output format.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/colFmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format font color for Markdown reports — colFmt","text":"","code":"if (FALSE) { # the example below is meaningless unless you put it in a markdown document colFmt('Test_text', 'Red') }"},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":"Run upon attaching package QurvE — .onAttach","title":"Run upon attaching package QurvE — .onAttach","text":"Run upon attaching package QurvE","code":""},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run upon attaching package QurvE — .onAttach","text":"","code":".onAttach(libname, pkgname)"},{"path":"https://nicwir.github.io/QurvE/reference/dot-onAttach.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run upon attaching package QurvE — .onAttach","text":"libname library name pkgname package name","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":null,"dir":"Reference","previous_headings":"","what":"Export an R object as .RData file — export_RData","title":"Export an R object as .RData file — export_RData","text":"Export R object .RData file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export an R object as .RData file — export_RData","text":"","code":"export_RData(object, out.dir = tempdir(), out.nm = class(object))"},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export an R object as .RData file — export_RData","text":"object R object. .dir path output directory. Default: working directory .nm output filename (without '.RData' ending). Default: class object followed '.RData'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export an R object as .RData file — export_RData","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_RData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export an R object as .RData file — export_RData","text":"","code":"if(interactive()){ df <- data.frame('A' = seq(1:10), 'B' = rev(seq(1:10)))  export_RData(df) }"},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a tabular object as tab-separated .txt file — export_Table","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"Export tabular object tab-separated .txt file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"","code":"export_Table(table, out.dir = tempdir(), out.nm = deparse(substitute(table)))"},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"table tabular R object (dataframe, matrix, array) .dir path output directory. Default: working directory .nm output filename (without '.txt' ending). Default: name table followed '.txt'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/export_Table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a tabular object as tab-separated .txt file — export_Table","text":"","code":"if(interactive()){ df <- data.frame('A' = seq(1:10), 'B' = rev(seq(1:10)))  export_Table(df) }"},{"path":"https://nicwir.github.io/QurvE/reference/fast.write.csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write object in CSV file — fast.write.csv","title":"Write object in CSV file — fast.write.csv","text":"Write object CSV file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fast.write.csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write object in CSV file — fast.write.csv","text":"","code":"fast.write.csv(dat, file, row.names = TRUE)"},{"path":"https://nicwir.github.io/QurvE/reference/fast.write.csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write object in CSV file — fast.write.csv","text":"dat R data object (e.g., list, data frame) file (Character) name CSV file. row.names (Logical) Add row names column (TRUE) (FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fl.control object. — fl.control","title":"Create a fl.control object. — fl.control","text":"fl.control object required perform various computations fluorescence data stored within grodata objects (created read_data parse_data). fl.control object created automatically part fl.workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fl.control object. — fl.control","text":"","code":"fl.control(   fit.opt = c(\"l\", \"s\"),   x_type = c(\"growth\", \"time\"),   norm_fl = TRUE,   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.lin = FALSE,   log.x.spline = FALSE,   log.y.lin = FALSE,   log.y.spline = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.05,   lin.dY = 0.05,   dr.parameter = \"max_slope.spline\",   dr.method = c(\"model\", \"spline\"),   dr.have.atleast = 5,   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   biphasic = FALSE,   interactive = FALSE,   nboot.fl = 0,   smooth.fl = 0.75,   growth.thresh = 1.5,   suppress.messages = FALSE,   neg.nan.act = FALSE,   clean.bootstrap = TRUE )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fl.control object. — fl.control","text":"fit.opt (Character vector strings) Indicates whether program perform linear regression ('l') /spline fit ('s'). Default:  fit.opt = c('l', 's'). x_type (Character) data type shall used independent variable? Options 'growth' 'time'. norm_fl (Logical) use normalized (growth) fluorescence data fits. effect x_type = 'time' t0 (Numeric) Minimum time value considered linear spline fits (x_type = 'time'). tmax (Numeric) Maximum time value considered linear spline fits (x_type = 'time').. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits (x_type = 'growth'). max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits (x_type = 'growth'). log.x.lin (Logical) Indicates whether ln(x+1) applied independent variable linear fits. Default: FALSE. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied fluorescence data linear fits. Default: FALSE log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE lin.h (Numeric) Manually define size sliding window used flFitLinear. NULL, h calculated samples based number measurements fluorescence increase phase plot. lin.R2 (Numeric) R2 threshold flFitLinear. lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope flFitLinear. lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: 'max_slope.spline', represents maximum slope spline fit Typical options include: 'max_slope.linfit', 'dY.linfit', 'max_slope.spline', 'dY.spline'. dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data ('spline') fit biosensor response model 'model' (proposed Meyer et al., 2019). dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? interactive (Logical) Controls whether fit sample method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.fl (Numeric) Number bootstrap samples used nonparametric curve fitting flBootSpline. Use nboot.fl = 0 disable bootstrap. Default: 0 smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. suppress.messages (Logical) Indicates whether messages (information current fluorescence curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. neg.nan.act (Logical) Indicates whether program stop negative fluorescence values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fl.control object. — fl.control","text":"Generates list arguments described entries.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a fl.control object. — fl.control","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a fl.control object. — fl.control","text":"","code":"# default option control_default <- fl.control() # user defined control_manual <- fl.control(fit.opt = c('s'),                              smooth.fl = 0.6,                              x_type = 'time',                              t0 = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"Fit biosensor model (Meyer et al., 2019) response vs. concentration data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"","code":"fl.drFit(   flTable,   control = fl.control(dr.method = \"model\", dr.parameter = \"max_slope.spline\") )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"flTable dataframe containing data dose-response model estimation. table class flTable can obtained running flFit dr.method = 'model' argument fl.control object. control fl.control object created fl.control, defining relevant fitting options. dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data ('spline') fit biosensor response model 'model' (proposed Meyer et al., 2019). dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: 'max_slope.spline', represents maximum slope spline fit Typical options include: 'max_slope.linfit', 'dY.linfit', 'max_slope.spline', 'dY.spline'.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"object class drFit. raw.data Data passed function flTable. drTable Dataframe containing condition identifiers, fit options, results dose-response analysis. drFittedModels List drFitModel objects generated call fl.drFitModel distinct experiment. control Object class fl.control created call fl.control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a biosensor model (Meyer et al., 2019) to response vs. concentration data — fl.drFit","text":"","code":"# \\donttest{ # Load example dataset input <- read_data(data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run fluorescence curve analysis workflow fitres <- flFit(fl_data = input$fluorescence,                 time = input$time,                 parallelize = FALSE,                 control = fl.control(x_type = 'time', norm_fl = FALSE,                                      suppress.messages = TRUE))  # Perform dose-response analysis drFit <- fl.drFit(flTable = fitres$flTable,                   control = fl.control(dr.method = 'model',                                        dr.parameter = 'max_slope.linfit')) #>  #> === Dose-Response Estimation via Model Fit ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 3  #> --> Valid datasets per test:  #>       TestID         Number #>       pSEVA634rκ∙GFP 7      #>       pSEVA634r∙GFP  7      #>       pSEVA634∙GFP   7      #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634rκ∙GFP #> sensitivity: 0.0103 | yEC50: 105 | fold change: 4.72 | leakiness: 36.7 #>  #>  #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634r∙GFP #> sensitivity: 0.0531 | yEC50: 75 | fold change: Inf | leakiness: 0 #>  #>  #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> pSEVA634∙GFP #> sensitivity: 0.0463 | yEC50: 190 | fold change: 11.62 | leakiness: 30.2 #>  #>   # Inspect results summary(drFit) #>             Test log.x log.y     yEC50    y.min    y.max        fc          K #> 1 pSEVA634rκ∙GFP FALSE FALSE 104.83198 36.65873 173.0052  4.719346 0.01033487 #> 2  pSEVA634r∙GFP FALSE FALSE  75.10917  0.00000 150.2183       Inf 0.05312423 #> 3   pSEVA634∙GFP FALSE FALSE 190.27542 30.16190 350.3889 11.616937 0.04626961 #>           n yEC50.orig     K.orig             test #> 1 12.492951  104.83198 0.01033487 max_slope.linfit #> 2  3.383541   75.10917 0.05312423 max_slope.linfit #> 3  1.684632  190.27542 0.04626961 max_slope.linfit plot(drFit)    # }"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"fl.drFitModel fits biosensor model proposed Meyer et al. (2019) provided response (e.g., max_slope.spline vs. concentration data determine leakiness, sensitivity, induction fold-change, cooperativity.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"","code":"fl.drFitModel(conc, test, drID = \"undefined\", control = fl.control())"},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"drFitFLModel object. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition fit.conc Fitted concentration values. fit.test Fitted response values. model nls object generated nlsLM function. parameters List parameters estimated dose response curve fit. yEC50: Response value related EC50. y.min: Minimum fluorescence ('leakiness', lowest concentration 0). y.max: Maximum fluorescence. fc: Fold change (y.max divided y.min). K: Concentration half-maximal response ('sensitivity'). n: Cooperativity. yEC50.orig: Response value EC50 original scale, transformation applied. K.orig: K original scale, transformation applied. test.nm: Test identifier extracted test. fitFlag (Logical) Indicates whether spline fitted successfully data. reliable (Logical) Indicates whether performed fit reliable (set manually). control Object class fl.control created call fl.control. Use plot.drFitModel visualize model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"Meyer, .J., Segall-Shapiro, T.H., Glassey, E. et al. Escherichia coli “Marionette” strains 12 highly optimized small-molecule sensors. Nat Chem Biol 15, 196–204 (2019). DOI: 10.1038/s41589-018-0168-3","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a biosensor model fit on response vs. concentration data of a single sample. — fl.drFitModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = 'test', control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.515 | yEC50: 3098 | fold change: 31.42 | leakiness: 191.1 #>  #>   print(summary(TestRun)) #>      yEC50   y.min    y.max       fc         K        n yEC50.orig    K.orig #> 1 3098.455 191.138 6005.771 31.42113 0.5145079 2.025583   3098.455 0.5145079 #>   test #> 1   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"fl.report requires flFitRes object creates report PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"","code":"fl.report(   flFitRes,   out.dir = tempdir(),   out.nm = NULL,   ec50 = FALSE,   format = c(\"pdf\", \"html\"),   export = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"flFitRes grofit object created fl.workflow. .dir (Character) path name folder report files created.  NULL, folder named combination 'Report.fluorescence_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'FluorescenceReport_' current date time. ec50 (Logical) Display results dose-response analysis (TRUE) (FALSE). format (Character) Define file format report, PDF ('pdf') /HTML ('html'). Default: (c('pdf', 'html')) export (Logical) Shall plots generated report exported individual PDF PNG files TRUE FALSE? parallelize (Logical) Create plots using one available processor cores (TRUE) single core (FALSE). ... arguments passed create report. Currently required: mean.grp: Define groups combine common plots report based sample identifiers. Partial matches sample/group names accepted. Can '', vector strings, list string vectors. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc: Define concentrations combine common plots  report. Can numeric vector, list numeric vectors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PDF and HTML report with results from a fluorescence analysis workflow — fl.report","text":"","code":"# load example dataset # \\donttest{ input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = 's',                    x_type = 'time', norm_fl = TRUE,                    dr.parameter = 'max_slope.spline',                    suppress.messages = TRUE,                    parallelize = FALSE)  fl.report(res, out.dir = tempdir(), parallelize = FALSE) #> Render reports... #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.01' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.05' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.2' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 0.5' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP | 1' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ce> #> Warning: conversion failure on 'pSEVA634rκ∙GFP' in 'mbcsToSbcs': dot substituted for <ba> #> Files saved in: 'C:\\Users\\nicwir\\AppData\\Local\\Temp\\RtmpoRc8GS' # }"},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"fl.workflow runs fl.control create fl.control object performs computational fitting operations based user input. Finally, desired, final report created PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"","code":"fl.workflow(   grodata = NULL,   time = NULL,   growth = NULL,   fl_data = NULL,   ec50 = TRUE,   mean.grp = NA,   mean.conc = NA,   fit.opt = c(\"l\", \"s\"),   x_type = c(\"growth\", \"time\"),   norm_fl = TRUE,   t0 = 0,   tmax = NA,   min.growth = 0,   max.growth = NA,   log.x.lin = FALSE,   log.x.spline = FALSE,   log.y.lin = FALSE,   log.y.spline = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.07,   lin.dY = 0.05,   biphasic = FALSE,   interactive = FALSE,   dr.parameter = \"max_slope.spline\",   dr.method = c(\"model\", \"spline\"),   dr.have.atleast = 5,   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   nboot.fl = 0,   smooth.fl = 0.75,   growth.thresh = 1.5,   suppress.messages = FALSE,   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   report = NULL,   out.dir = NULL,   out.nm = NULL,   export.fig = FALSE,   export.res = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"grodata grodata object created read_data parse_data, containing fluorescence data data independent variable (.e., time growth). time (optional) matrix containing time values sample (fl_data dataframe provided separate argument). growth (optional) dataframe containing growth data (fl_data matrix provided separate argument). fl_data (optional) dataframe containing fluorescence data (time matrix growth dataframe provided separate argument). ec50 (Logical) Perform dose-response analysis (TRUE) (FALSE). mean.grp (\"\", string vector, list string vectors) Define groups combine common plots final report based sample identifiers (report == TRUE). Partial matches sample/group names accepted. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option \"\" produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc (numeric vector, list numeric vectors) Define concentrations combine common plots final report (report == TRUE). fit.opt (Character character vector) Indicates whether program perform linear regression (\"l\"), model fit (\"m\"), spline fit (\"s\"), (\"\"). Combinations can freely chosen providing character vector, e.g. fit.opt = c(\"l\", \"s\") Default:  fit.opt = c(\"l\", \"s\"). x_type (Character) data type shall used independent variable? Options 'growth' 'time'. norm_fl (Logical) use normalized (growth) fluorescence data fits. effect x_type = 'time' t0 (Numeric) Minimum time value considered linear spline fits (x_type = 'time'). tmax (Numeric) Maximum time value considered linear spline fits (x_type = 'time').. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits (x_type = 'growth'). max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits (x_type = 'growth'). log.x.lin (Logical) Indicates whether ln(x+1) applied independent variable linear fits. Default: FALSE. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied fluorescence data linear fits. Default: FALSE log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE lin.h (Numeric) Manually define size sliding window used flFitLinear. NULL, h calculated samples based number measurements fluorescence increase phase plot. lin.R2 (Numeric) R2 threshold flFitLinear. lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope flFitLinear. lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? interactive (Logical) Controls whether fit sample method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See fl.drFit details. Default: \"max_slope.spline\", represents maximum slope spline fit Typical options include: \"max_slope.linfit\", \"dY.linfit\", \"max_slope.spline\", \"dY.spline\". dr.method (Character) Perform either smooth spline fit response parameter vs. concentration data (\"spline\") fit biosensor response model (proposed Meyer et al., 2019). dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. nboot.fl (Numeric) Number bootstrap samples used nonparametric curve fitting flBootSpline. Use nboot.fl = 0 disable bootstrap. Default: 0 smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. suppress.messages (Logical) Indicates whether messages (information current fluorescence curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. neg.nan.act (Logical) Indicates whether program stop negative fluorescence values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. report (Character NULL) Create PDF ('pdf') /HTML ('html') report running computations. Define NULL report created. Default: (c('pdf', 'html')) .dir Character NULL Define name folder result files (tables reports) stored. NULL, folder named combination \"FluorescenceResults_\" current date time. .nm Character NULL Define name report files. NULL, files named combination \"FluorescenceReport_\" current date time. export.fig (Logical) Export figures created report separate PNG PDF files (TRUE) (FALSE). effective report = TRUE. export.res (Logical) Create tab-separated TXT files containing calculated parameters dose-response analysis results well .RData file resulting flFitRes object. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"flFitRes object contains computation results, compatible various plotting functions QurvE package fl.report. time Raw time matrix passed function time (grofit object provided. Else, extracted grofit). data Raw data dataframe passed function grodata. flFit flFit object created call flFit fluorescence data. drFit drFit drFitfl object created call growth.drFit fl.drFit fluorescence data (based dr.method argument control; see fl.control). expdesign Experimental design table inherited grodata created identifier columns (columns 1-3) data. control Object class fl.control created call fl.control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/fl.workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a complete fluorescence curve analysis and dose-reponse analysis workflow. — fl.workflow","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot(res, data.type = \"raw\", legend.ncol = 3, basesize = 15) #> Warning: Derivatives cannot be calculated for 'raw' or 'norm.fl' data. Only the fluorescence values will be shown."},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"flBootSpline: Function to generate a bootstrap — flBootSpline","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"fl.gcBootSpline resamples fluorescence-'x' value pairs dataset replacement performs spline fit bootstrap sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"","code":"flBootSpline(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   control = fl.control() )"},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"time Vector independent variable: time (x_type = 'time' fl.control object. growth Vector independent variable: growth (x_type = 'growth' fl.control object. fl_data Vector dependent variable: fluorescence. ID (Character) name analyzed sample. control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"gcBootSpline object containing distribution fluorescence parameters flFitSpline object bootstrap sample. Use plot.gcBootSpline visualize bootstrapping splines well distribution physiological parameters. raw.x Raw time values provided function time. raw.fl Raw growth data provided function data. ID (Character) Identifies tested sample. boot.x Table time values per column, resulting spline fit bootstrap. boot.fl Table growth values per column, resulting spline fit bootstrap. boot.flSpline List flFitSpline object, created flFitSpline resample bootstrap. lambda Vector estimated lambda (lag time) values bootstrap entry. max_slope Vector estimated max_slope (maximum slope) values bootstrap entry. Vector estimated (maximum fluorescence) values bootstrap entry. integral Vector estimated integral values bootstrap entry. bootFlag (Logical) Indicates success bootstrapping operation. control Object class fl.control containing list options passed function control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"flBootSpline: Function to generate a bootstrap — flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time',                        nboot.fl = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"flFit performs computational fluorescence fitting operations based user input.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"","code":"flFit(   fl_data,   time = NULL,   growth = NULL,   control = fl.control(),   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"fl_data Either... grodata object created read_data parse_data, list containing 'time' matrix (x_type == \"time\") 'growth' dataframe (x_type == \"growth\") 'fluorescence' dataframes, dataframe containing (normalized) fluorescence values (time matrix growth dataframe provided separate argument). time (optional) matrix containing time values sample. growth (optional) dataframe containing growth values sample sample identifiers first three columns. control fl.control object created fl.control, defining relevant fitting options. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"flFit object contains fluorescence fitting results, compatible various plotting functions QurvE package. raw.x Raw x matrix passed function time (x_type = 'time') growth (x_type = 'growth'). raw.fl Raw growth dataframe passed function data. flTable Table fluorescence parameters related statistics fluorescence curve evaluation performed function. table, also returned generic summary.flFit method applied flFit object, used input fl.drFit. flFittedLinear List flFitLinear objects, generated call flFitLinear. Note: access object list via double brace: flFittedLinear[[#n]]. flFittedSplines List flFitSpline objects, generated call flFitSpline. Note: access object via double brace: flFittedSplines[[#n]]. flBootSplines List flBootSpline objects, generated call flBootSpline. Note: access object via double brace: flFittedSplines[[#n]]. control Object class fl.control containing list options passed function control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a fluorescence curve analysis on all samples in the provided dataset. — flFit","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = \"s\",              x_type = \"time\", norm_fl = TRUE,              dr.parameter = \"max_slope.spline\",              dr.method = \"model\",              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              control = control,              parallelize = FALSE)  summary(res) #>            TestId AddId concentration reliability_tag log.x.spline log.y.spline #> 1    pSEVA634∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 2   pSEVA634r∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 3  pSEVA634rκ∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 4    pSEVA634∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 5   pSEVA634r∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 6  pSEVA634rκ∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 7    pSEVA634∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 8   pSEVA634r∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 9  pSEVA634rκ∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 10   pSEVA634∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 11  pSEVA634r∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 12 pSEVA634rκ∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 13   pSEVA634∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 14  pSEVA634r∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 15 pSEVA634rκ∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 16   pSEVA634∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 17  pSEVA634r∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 18 pSEVA634rκ∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 19   pSEVA634∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 20  pSEVA634r∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 21 pSEVA634rκ∙GFP  <NA>             1            TRUE        FALSE        FALSE #>    log.x.lin log.y.lin nboot.fl max_slope.linfit lambda.linfit dY.linfit #> 1      FALSE     FALSE        0                0          <NA>      <NA> #> 2      FALSE     FALSE        0                0          <NA>      <NA> #> 3      FALSE     FALSE        0                0          <NA>      <NA> #> 4      FALSE     FALSE        0                0          <NA>      <NA> #> 5      FALSE     FALSE        0                0          <NA>      <NA> #> 6      FALSE     FALSE        0                0          <NA>      <NA> #> 7      FALSE     FALSE        0                0          <NA>      <NA> #> 8      FALSE     FALSE        0                0          <NA>      <NA> #> 9      FALSE     FALSE        0                0          <NA>      <NA> #> 10     FALSE     FALSE        0                0          <NA>      <NA> #> 11     FALSE     FALSE        0                0          <NA>      <NA> #> 12     FALSE     FALSE        0                0          <NA>      <NA> #> 13     FALSE     FALSE        0                0          <NA>      <NA> #> 14     FALSE     FALSE        0                0          <NA>      <NA> #> 15     FALSE     FALSE        0                0          <NA>      <NA> #> 16     FALSE     FALSE        0                0          <NA>      <NA> #> 17     FALSE     FALSE        0                0          <NA>      <NA> #> 18     FALSE     FALSE        0                0          <NA>      <NA> #> 19     FALSE     FALSE        0                0          <NA>      <NA> #> 20     FALSE     FALSE        0                0          <NA>      <NA> #> 21     FALSE     FALSE        0                0          <NA>      <NA> #>    A.linfit x.mu.start.linfit x.mu.end.linfit r2mu.linfit reliable_fit.linfit #> 1      <NA>              <NA>            <NA>        <NA>               FALSE #> 2      <NA>              <NA>            <NA>        <NA>               FALSE #> 3      <NA>              <NA>            <NA>        <NA>               FALSE #> 4      <NA>              <NA>            <NA>        <NA>               FALSE #> 5      <NA>              <NA>            <NA>        <NA>               FALSE #> 6      <NA>              <NA>            <NA>        <NA>               FALSE #> 7      <NA>              <NA>            <NA>        <NA>               FALSE #> 8      <NA>              <NA>            <NA>        <NA>               FALSE #> 9      <NA>              <NA>            <NA>        <NA>               FALSE #> 10     <NA>              <NA>            <NA>        <NA>               FALSE #> 11     <NA>              <NA>            <NA>        <NA>               FALSE #> 12     <NA>              <NA>            <NA>        <NA>               FALSE #> 13     <NA>              <NA>            <NA>        <NA>               FALSE #> 14     <NA>              <NA>            <NA>        <NA>               FALSE #> 15     <NA>              <NA>            <NA>        <NA>               FALSE #> 16     <NA>              <NA>            <NA>        <NA>               FALSE #> 17     <NA>              <NA>            <NA>        <NA>               FALSE #> 18     <NA>              <NA>            <NA>        <NA>               FALSE #> 19     <NA>              <NA>            <NA>        <NA>               FALSE #> 20     <NA>              <NA>            <NA>        <NA>               FALSE #> 21     <NA>              <NA>            <NA>        <NA>               FALSE #>    max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1               <NA>               <NA>             <NA>         <NA> #> 2               <NA>               <NA>             <NA>         <NA> #> 3               <NA>               <NA>             <NA>         <NA> #> 4               <NA>               <NA>             <NA>         <NA> #> 5               <NA>               <NA>             <NA>         <NA> #> 6               <NA>               <NA>             <NA>         <NA> #> 7               <NA>               <NA>             <NA>         <NA> #> 8               <NA>               <NA>             <NA>         <NA> #> 9               <NA>               <NA>             <NA>         <NA> #> 10              <NA>               <NA>             <NA>         <NA> #> 11              <NA>               <NA>             <NA>         <NA> #> 12              <NA>               <NA>             <NA>         <NA> #> 13              <NA>               <NA>             <NA>         <NA> #> 14              <NA>               <NA>             <NA>         <NA> #> 15              <NA>               <NA>             <NA>         <NA> #> 16              <NA>               <NA>             <NA>         <NA> #> 17              <NA>               <NA>             <NA>         <NA> #> 18              <NA>               <NA>             <NA>         <NA> #> 19              <NA>               <NA>             <NA>         <NA> #> 20              <NA>               <NA>             <NA>         <NA> #> 21              <NA>               <NA>             <NA>         <NA> #>    reliable_fit2.linfit max_slope.spline x.max.spline     lambda.spline #> 1                 FALSE 92.2668917228847         20.5  15.5467166096294 #> 2                 FALSE 30.7727385498294           20  31.2872267087641 #> 3                 FALSE 64.1757831646195           16  20.8131240327289 #> 4                 FALSE 242.557704041626         23.5   14.982628746023 #> 5                 FALSE 64.6529094536605           19  21.6712998092256 #> 6                 FALSE 205.579719130273           18  12.5662904914231 #> 7                 FALSE 509.394721871828         21.5  6.95952698278091 #> 8                 FALSE 204.031623957349         17.5  13.4360564669416 #> 9                 FALSE 290.961299939404           13  4.67379381987626 #> 10                FALSE 670.985334314906            6 0.373248436531125 #> 11                FALSE 327.194544214636           17  9.86802427129631 #> 12                FALSE  335.24358478568         17.5  3.65080407904796 #> 13                FALSE 728.625260083634          6.5 0.553816578577824 #> 14                FALSE 346.268113254507         16.5  9.75821807365783 #> 15                FALSE 320.246598452139         17.5  3.21350390586807 #> 16                FALSE  774.05398642078          5.5 0.246732777852533 #> 17                FALSE 337.909403917534         16.5  8.08916482172041 #> 18                FALSE 351.643501664612           18  4.84484452250892 #> 19                FALSE 779.134078966909            6 0.462268482214904 #> 20                FALSE 353.185039298395         16.5   9.5717850859864 #> 21                FALSE 338.826806405161           18  5.01597033523556 #>    max_slope2.spline x.max2.spline lambda2.spline        y0.spline #> 1               <NA>          <NA>           <NA>  1291.4242870252 #> 2               <NA>          <NA>           <NA> 1188.27831547782 #> 3               <NA>          <NA>           <NA> 1565.59217809736 #> 4               <NA>          <NA>           <NA> 1519.80363776351 #> 5               <NA>          <NA>           <NA>  1255.7213080438 #> 6               <NA>          <NA>           <NA> 1624.15289883901 #> 7               <NA>          <NA>           <NA> 1132.18524639308 #> 8               <NA>          <NA>           <NA> 1405.71652864703 #> 9               <NA>          <NA>           <NA> 1468.52438340082 #> 10              <NA>          <NA>           <NA> 1209.47395589045 #> 11              <NA>          <NA>           <NA> 1187.83879461914 #> 12              <NA>          <NA>           <NA> 1467.93981010311 #> 13              <NA>          <NA>           <NA> 891.795404947046 #> 14              <NA>          <NA>           <NA> 1282.77700477438 #> 15              <NA>          <NA>           <NA> 1542.64869773804 #> 16              <NA>          <NA>           <NA> 1132.44043950227 #> 17              <NA>          <NA>           <NA> 862.662992687727 #> 18              <NA>          <NA>           <NA> 1602.42470098365 #> 19              <NA>          <NA>           <NA> 1017.04362101536 #> 20              <NA>          <NA>           <NA>  1323.6959493112 #> 21              <NA>          <NA>           <NA> 1707.52183129309 #>            A.spline        dY.spline  integral.spline reliable_fit.spline #> 1   3427.1255242313  2135.7012372061  82881.406474157                TRUE #> 2  1470.99207749982 282.713762021994 43222.9360971386                TRUE #> 3  2196.18856426073 630.596386163366 67033.6678589485                TRUE #> 4  7592.80063751346 6072.99699974995 151370.675832012                TRUE #> 5  2384.30375521349 1128.58244716969 58249.0814015737                TRUE #> 6  4820.28715109276 3196.13425225375 132414.081549265                TRUE #> 7  17121.2144379564 15989.0291915634 367233.851934483                TRUE #> 8    5206.543176868 3800.82664822097 120525.231431367                TRUE #> 9  7768.18866992603 6299.66428652521  223919.42858498                TRUE #> 10 20079.0095008516 18869.5355449612 490254.828661569                TRUE #> 11 6840.37784263295 5652.53904801381 169914.301957325                TRUE #> 12 9191.86346478591  7723.9236546828 269744.222628614                TRUE #> 13  20481.097768094  19589.302363147 497122.375105375                TRUE #> 14 7000.84532046262 5718.06831568824 179100.135589319                TRUE #> 15 9006.21056404733 7463.56186630929 267724.576457373                TRUE #> 16 20704.0909872879 19571.6505477857 520199.730690857                TRUE #> 17 6952.68659445902 6090.02360177129 178120.140852737                TRUE #> 18 9322.62835009364 7720.20364910999  273698.19440202                TRUE #> 19  19774.702139564 18757.6585185487 508722.732093212                TRUE #> 20 7189.59680355244 5865.90085424124 182547.707805716                TRUE #> 21 9258.53106887529 7551.00923758219 271383.083788705                TRUE #>    reliable_fit2.spline smooth.spline max_slope.bt lambda.bt A.bt dY.bt #> 1                 FALSE          0.75           NA        NA   NA    NA #> 2                 FALSE          0.75           NA        NA   NA    NA #> 3                 FALSE          0.75           NA        NA   NA    NA #> 4                 FALSE          0.75           NA        NA   NA    NA #> 5                 FALSE          0.75           NA        NA   NA    NA #> 6                 FALSE          0.75           NA        NA   NA    NA #> 7                 FALSE          0.75           NA        NA   NA    NA #> 8                 FALSE          0.75           NA        NA   NA    NA #> 9                 FALSE          0.75           NA        NA   NA    NA #> 10                FALSE          0.75           NA        NA   NA    NA #> 11                FALSE          0.75           NA        NA   NA    NA #> 12                FALSE          0.75           NA        NA   NA    NA #> 13                FALSE          0.75           NA        NA   NA    NA #> 14                FALSE          0.75           NA        NA   NA    NA #> 15                FALSE          0.75           NA        NA   NA    NA #> 16                FALSE          0.75           NA        NA   NA    NA #> 17                FALSE          0.75           NA        NA   NA    NA #> 18                FALSE          0.75           NA        NA   NA    NA #> 19                FALSE          0.75           NA        NA   NA    NA #> 20                FALSE          0.75           NA        NA   NA    NA #> 21                FALSE          0.75           NA        NA   NA    NA #>    integral.bt stdmax_slope.bt stdlambda.bt stdA.bt stddY.bt stdintegral.bt #> 1           NA              NA           NA      NA       NA             NA #> 2           NA              NA           NA      NA       NA             NA #> 3           NA              NA           NA      NA       NA             NA #> 4           NA              NA           NA      NA       NA             NA #> 5           NA              NA           NA      NA       NA             NA #> 6           NA              NA           NA      NA       NA             NA #> 7           NA              NA           NA      NA       NA             NA #> 8           NA              NA           NA      NA       NA             NA #> 9           NA              NA           NA      NA       NA             NA #> 10          NA              NA           NA      NA       NA             NA #> 11          NA              NA           NA      NA       NA             NA #> 12          NA              NA           NA      NA       NA             NA #> 13          NA              NA           NA      NA       NA             NA #> 14          NA              NA           NA      NA       NA             NA #> 15          NA              NA           NA      NA       NA             NA #> 16          NA              NA           NA      NA       NA             NA #> 17          NA              NA           NA      NA       NA             NA #> 18          NA              NA           NA      NA       NA             NA #> 19          NA              NA           NA      NA       NA             NA #> 20          NA              NA           NA      NA       NA             NA #> 21          NA              NA           NA      NA       NA             NA #>    reliable_fit.bt ci90.mu.bt.lo ci90.mu.bt.up ci90.lambda.bt.lo #> 1               NA            NA            NA                NA #> 2               NA            NA            NA                NA #> 3               NA            NA            NA                NA #> 4               NA            NA            NA                NA #> 5               NA            NA            NA                NA #> 6               NA            NA            NA                NA #> 7               NA            NA            NA                NA #> 8               NA            NA            NA                NA #> 9               NA            NA            NA                NA #> 10              NA            NA            NA                NA #> 11              NA            NA            NA                NA #> 12              NA            NA            NA                NA #> 13              NA            NA            NA                NA #> 14              NA            NA            NA                NA #> 15              NA            NA            NA                NA #> 16              NA            NA            NA                NA #> 17              NA            NA            NA                NA #> 18              NA            NA            NA                NA #> 19              NA            NA            NA                NA #> 20              NA            NA            NA                NA #> 21              NA            NA            NA                NA #>    ci90.lambda.bt.up ci90.A.bt.lo ci90.A.bt.up ci90.integral.bt.lo #> 1                 NA           NA           NA                  NA #> 2                 NA           NA           NA                  NA #> 3                 NA           NA           NA                  NA #> 4                 NA           NA           NA                  NA #> 5                 NA           NA           NA                  NA #> 6                 NA           NA           NA                  NA #> 7                 NA           NA           NA                  NA #> 8                 NA           NA           NA                  NA #> 9                 NA           NA           NA                  NA #> 10                NA           NA           NA                  NA #> 11                NA           NA           NA                  NA #> 12                NA           NA           NA                  NA #> 13                NA           NA           NA                  NA #> 14                NA           NA           NA                  NA #> 15                NA           NA           NA                  NA #> 16                NA           NA           NA                  NA #> 17                NA           NA           NA                  NA #> 18                NA           NA           NA                  NA #> 19                NA           NA           NA                  NA #> 20                NA           NA           NA                  NA #> 21                NA           NA           NA                  NA #>    ci90.integral.bt.up ci95.mu.bt.lo ci95.mu.bt.up ci95.lambda.bt.lo #> 1                   NA            NA            NA                NA #> 2                   NA            NA            NA                NA #> 3                   NA            NA            NA                NA #> 4                   NA            NA            NA                NA #> 5                   NA            NA            NA                NA #> 6                   NA            NA            NA                NA #> 7                   NA            NA            NA                NA #> 8                   NA            NA            NA                NA #> 9                   NA            NA            NA                NA #> 10                  NA            NA            NA                NA #> 11                  NA            NA            NA                NA #> 12                  NA            NA            NA                NA #> 13                  NA            NA            NA                NA #> 14                  NA            NA            NA                NA #> 15                  NA            NA            NA                NA #> 16                  NA            NA            NA                NA #> 17                  NA            NA            NA                NA #> 18                  NA            NA            NA                NA #> 19                  NA            NA            NA                NA #> 20                  NA            NA            NA                NA #> 21                  NA            NA            NA                NA #>    ci95.lambda.bt.up ci95.A.bt.lo ci95.A.bt.up ci95.integral.bt.lo #> 1                 NA           NA           NA                  NA #> 2                 NA           NA           NA                  NA #> 3                 NA           NA           NA                  NA #> 4                 NA           NA           NA                  NA #> 5                 NA           NA           NA                  NA #> 6                 NA           NA           NA                  NA #> 7                 NA           NA           NA                  NA #> 8                 NA           NA           NA                  NA #> 9                 NA           NA           NA                  NA #> 10                NA           NA           NA                  NA #> 11                NA           NA           NA                  NA #> 12                NA           NA           NA                  NA #> 13                NA           NA           NA                  NA #> 14                NA           NA           NA                  NA #> 15                NA           NA           NA                  NA #> 16                NA           NA           NA                  NA #> 17                NA           NA           NA                  NA #> 18                NA           NA           NA                  NA #> 19                NA           NA           NA                  NA #> 20                NA           NA           NA                  NA #> 21                NA           NA           NA                  NA #>    ci95.integral.bt.up #> 1                   NA #> 2                   NA #> 3                   NA #> 4                   NA #> 5                   NA #> 6                   NA #> 7                   NA #> 8                   NA #> 9                   NA #> 10                  NA #> 11                  NA #> 12                  NA #> 13                  NA #> 14                  NA #> 15                  NA #> 16                  NA #> 17                  NA #> 18                  NA #> 19                  NA #> 20                  NA #> 21                  NA"},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Data fit via a heuristic linear method — flFitLinear","title":"Data fit via a heuristic linear method — flFitLinear","text":"Determine maximum slopes using heuristic approach similar ``growth rates made easy''-method Hall et al. (2013).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data fit via a heuristic linear method — flFitLinear","text":"","code":"flFitLinear(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   quota = 0.95,   control = fl.control(x_type = c(\"growth\", \"time\"), log.x.lin = FALSE, log.y.lin =     FALSE, t0 = 0, min.growth = NA, lin.h = NULL, lin.R2 = 0.98, lin.RSD = 0.05, lin.dY =     0.05, biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data fit via a heuristic linear method — flFitLinear","text":"time Vector independent time variable (x_type = \"time\" control object). growth Vector independent time growth (x_type = \"growth\" control object). fl_data Vector dependent fluorescence variable. ID (Character) name analyzed sample. quota (Numeric, 0 1) Define fraction max_slope slope regression windows adjacent window highest slope included overall linear fit. control fl.control object created fl.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data fit via a heuristic linear method — flFitLinear","text":"gcFitLinear object parameters fit. lag time estimated intersection fit horizontal line \\(y=y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize linear fit. raw.x Filtered x values used spline fit. raw.fl Filtered fluorescence values used spline fit. filt.x Filtered x values. filt.fl Filtered fluorescence values. ID (Character) Identifies tested sample. FUN Linear function used plotting tangent mumax. fit lm object; result final call lm perform linear regression. par List determined fluorescence parameters. y0: Minimum fluorescence value considered heuristic linear method. dY: Difference maximum fluorescence minimum fluorescence : Maximum fluorescence y0_lm: Intersection linear fit abscissa. max_slope: Maximum slope linear fit. tD: Doubling time. slope.se: Standard error maximum slope. lag: Lag X. x.max_start: X value first data point within window used linear regression. x.max_end: X value last data point within window used linear regression. x.turn: biphasic: X inflection point separates two phases. max.slope2: biphasic: Slope second phase. tD2: Doubling time second phase. y0_lm2: biphasic: Intersection linear fit second phase abscissa. lag2: biphasic: Lag time determined second phase.. x.max2_start: biphasic: X value first data point within window used linear regression second phase. x.max2_end: biphasic: X value last data point within window used linear regression second phase. ndx Index data points used linear regression. ndx2 Index data points used linear regression second phase. control Object class grofit.control containing list options passed function control. rsquared R2 linear regression. rsquared2 R2 linear regression second phase. fitFlag (Logical) Indicates whether linear regression successfully performed data. fitFlag2 (Logical) Indicates whether second phase identified. reliable (Logical) Indicates whether performed fit reliable (set manually).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data fit via a heuristic linear method — flFitLinear","text":"Hall, BG., Acar, H, Nandipati, Barlow, M (2014) Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-38, DOI: 10.1093/molbev/mst187 Petzoldt T (2022). growthrates: Estimate Growth Rates Experimental Data. R package version 0.8.3, https://CRAN.R-project.org/package=growthrates.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data fit via a heuristic linear method — flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"l\", x_type = \"time\",                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on fluorescence data — flFitSpline","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"flFitSpline performs smooth spline fit dataset determines greatest slope global maximum first derivative spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"","code":"flFitSpline(   time = NULL,   growth = NULL,   fl_data,   ID = \"undefined\",   control = fl.control(biphasic = FALSE, x_type = c(\"growth\", \"time\"), log.x.spline =     FALSE, log.y.spline = FALSE, smooth.fl = 0.75, t0 = 0, min.growth = NA) )"},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"time Vector independent variable: time (x_type = 'time' fl.control object. growth Vector independent variable: growth (x_type = 'growth' fl.control object. fl_data Vector dependent variable: fluorescence. ID (Character) name analyzed sample. control fl.control object created fl.control, defining relevant fitting options. biphasic (Logical) Shall flFitLinear flFitSpline try extract fluorescence parameters two different phases (observed , e.g., regulator-promoter systems varying response different growth stages) (TRUE) (FALSE)? x_type (Character) data type shall used independent variable? Options 'growth' 'time'. log.x.spline (Logical) Indicates whether ln(x+1) applied independent variable spline fits. Default: FALSE. log.y.spline (Logical) Indicates whether ln(y/y0) applied fluorescence data spline fits. Default: FALSE smooth.fl (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating slopes) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 t0 (Numeric) Minimum time value considered linear spline fits. min.growth (Numeric) Indicate whether values certain threshold considered linear regressions spline fits.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"flFitSpline object. lag time estimated intersection tangent maximum slope horizontal line \\(y = y_0\\), y0 first value dependent variable. Use plot.flFitSpline visualize spline fit derivative time. x.Raw x values provided function time growth. fl.Raw fluorescence data provided function fl_data. raw.x Filtered x values used spline fit. raw.fl Filtered fluorescence values used spline fit. ID (Character) Identifies tested sample. fit.x Fitted x values. fit.fl Fitted fluorescence values. parameters List determined parameters. : Maximum fluorescence. dY: Difference maximum fluorescence minimum fluorescence. max_slope: Maximum slope fluorescence-vs.-x data (.e., maximum first derivative spline). x.max: Time maximum slope. lambda: Lag time. b.tangent: Intersection tangent maximum slope abscissa. max_slope2: biphasic course fluorescence: Maximum slope fluorescence-vs.-x data second phase. lambda2: biphasic course fluorescence: Lag time determined second phase. x.max2: biphasic course fluorescence: Time maximum slope second phase. b.tangent2: biphasic course fluorescence: Intersection tangent maximum slope second phase abscissa. integral: Area curve spline fit. spline smooth.spline object generated smooth.spline function. spline.deriv1 list time ('x') growth ('y') values describing first derivative spline fit. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether spline fit successfully performed data. fitFlag2 (Logical) Indicates whether second phase identified. control Object class fl.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"biphasic = TRUE, following steps performed define second phase: Determine local minima within first derivative smooth spline fit. Remove 'peak' containing highest value first derivative (.e., \\(mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(mu_{max}\\). Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on fluorescence data — flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time'))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/get_avg_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate parameter averages for several samples — get_avg_param","title":"Calculate parameter averages for several samples — get_avg_param","text":"Internal function used within table_group set functions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_avg_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate parameter averages for several samples — get_avg_param","text":"","code":"get_avg_param(table = data.frame(), ndx.rep = list(), param1, param2 = NULL)"},{"path":"https://nicwir.github.io/QurvE/reference/get_avg_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate parameter averages for several samples — get_avg_param","text":"table dataframe class gcTable flTable, generated growth.gcFit flFit, respectively. ndx.rep list element vector row indices samples (replicates) calculate averages. param1 Name parameter calculate averages. param2 (optional) Name second parameter calculate averages. results second parameter attached parentheses first parameter.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_avg_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate parameter averages for several samples — get_avg_param","text":"vector strings containing parameter averages.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_avg_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate parameter averages for several samples — get_avg_param","text":"","code":"if (FALSE) { # Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  conc <- unique(res$expdesign$concentration) ndx.rep <- lapply(1:length(conc), function(x) grep(paste0(\"Test1.+\", conc[x]), res$expdesign$label))  get_avg_param(res$gcFit$gcTable, ndx.rep, \"mu.spline\") }"},{"path":"https://nicwir.github.io/QurvE/reference/get_sd_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate parameter standard deviations for several samples — get_sd_param","title":"Calculate parameter standard deviations for several samples — get_sd_param","text":"Internal function used within table_group set functions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_sd_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate parameter standard deviations for several samples — get_sd_param","text":"","code":"get_sd_param(table = data.frame(), ndx.rep = list(), param1, param2 = NULL)"},{"path":"https://nicwir.github.io/QurvE/reference/get_sd_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate parameter standard deviations for several samples — get_sd_param","text":"table dataframe class gcTable flTable, generated growth.gcFit flFit, respectively. ndx.rep list element vector row indices samples (replicates) calculate standard deviations. param1 Name parameter calculate standard deviations param2 (optional) Name second parameter calculate standard deviations results second parameter attached parentheses first parameter.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_sd_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate parameter standard deviations for several samples — get_sd_param","text":"vector strings containing parameter standard deviations.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/get_sd_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate parameter standard deviations for several samples — get_sd_param","text":"","code":"if (FALSE) { # Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")   # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  conc <- unique(res$expdesign$concentration) ndx.rep <- lapply(1:length(conc), function(x) grep(paste0(\"Test1.+\", conc[x]), res$expdesign$label))  get_sd_param(res$gcFit$gcTable, ndx.rep, \"mu.spline\") }"},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","title":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","text":"Calculate values modified Gompertz growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","text":"","code":"gompertz.exp(time, A, mu, lambda, addpar)"},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar Numeric vector size two, addpar[1] corresponds scaling parameter \\(\\alpha\\) addpar[2] corresponds shifting parameter \\(t_{shift}\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the modified Gompertz growth model for given time points and growth parameters. — gompertz.exp","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) growth <- gompertz.exp(time, A = 3, mu=0.6, lambda = 3, addpar = c(0.1, 12))  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","title":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","text":"Calculate values Gompertz growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","text":"","code":"gompertz(time, A, mu, lambda, addpar = NULL)"},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar Additional parameters effect type model. belong standard model description grofit initialized addpar=NULL function header.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/gompertz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the Gompertz growth model for given time points and growth parameters. — gompertz","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) growth <- gompertz(time, A = 3, mu=0.6, lambda = 3)  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/grofit.param.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function called within growth.gcFitModel. — grofit.param","title":"Internal function called within growth.gcFitModel. — grofit.param","text":"Internal function called within growth.gcFitModel.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grofit.param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function called within growth.gcFitModel. — grofit.param","text":"","code":"grofit.param(time, data, gcID = \"undefined\", control)"},{"path":"https://nicwir.github.io/QurvE/reference/grofit.param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function called within growth.gcFitModel. — grofit.param","text":"time Vector independent variable (usually time). data Vector dependent variable (usually density values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a grofit.control object. — growth.control","title":"Create a grofit.control object. — growth.control","text":"grofit.control object required perform various computations growth data stored within grodata objects (created read_data parse_data). grofit.control object created automatically part growth.workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a grofit.control object. — growth.control","text":"","code":"growth.control(   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   suppress.messages = FALSE,   fit.opt = c(\"a\"),   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.gc = FALSE,   log.y.lin = TRUE,   log.y.spline = TRUE,   log.y.model = TRUE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.1,   lin.dY = 0.05,   biphasic = FALSE,   interactive = FALSE,   nboot.gc = 0,   smooth.gc = 0.55,   model.type = c(\"logistic\", \"richards\", \"gompertz\", \"gompertz.exp\", \"huang\", \"baranyi\"),   dr.method = c(\"model\", \"spline\"),   dr.model = c(\"gammadr\", \"multi2\", \"LL.2\", \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\",     \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\", \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\",     \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),   dr.have.atleast = 6,   dr.parameter = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu.spline\",     \"lambda.spline\", \"dY.spline\", \"A.spline\", \"mu.model\", \"lambda.model\",     \"dY.orig.model\", \"A.orig.model\"),   smooth.dr = NULL,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   growth.thresh = 1.5 )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a grofit.control object. — growth.control","text":"neg.nan.act (Logical) Indicates whether program stop negative growth values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. suppress.messages (Logical) Indicates whether messages (information current growth curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed processing high throughput data. Note: warnings still displayed. Default: FALSE. fit.opt (Character character vector) Indicates whether program perform linear regression ('l'), model fit ('m'), spline fit ('s'), (''). Combinations can freely chosen providing character vector, e.g. fit.opt = c('l', 's') Default:  fit.opt = c('l', 's'). t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Maximum time value considered linear spline fits. min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE log.y.spline (Logical) Indicates whether ln(y/y0) applied growth data spline fits. Default: TRUE log.y.model (Logical) Indicates whether ln(y/y0) applied growth data model fits. Default: TRUE lin.h (Numeric) Manually define size sliding window used growth.gcFitLinear NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). biphasic (Logical) Shall growth.gcFitLinear growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)? interactive (Logical) Controls whether fit growth curve method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.gc (Numeric) Number bootstrap samples used nonparametric growth curve fitting growth.gcBootSpline. Use nboot.gc = 0 disable bootstrap. Default: 0 smooth.gc (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating growth rates) produce error smooth.spline lead overfitting. usage fixed value recommended reproducible results across samples. See smooth.spline details. Default: 0.55 model.type (Character) Vector providing names parametric models fitted data. Default: c('logistic', 'richards', 'gompertz', 'gompertz.exp', 'huang', 'baranyi'). dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a grofit.control object. — growth.control","text":"Generates list arguments described entries.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a grofit.control object. — growth.control","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.control.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a grofit.control object. — growth.control","text":"","code":"# default option control_default <- growth.control() # user defined control_manual <- growth.control(fit.opt = c('s', 'm'),                                  smooth.gc = 0.5,                                  model.type = c('huang', 'baranyi'))"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"growth.drBootSpline resamples values dataset replacement performs spline fit bootstrap sample determine EC50.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"","code":"growth.drBootSpline(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"object class drBootSpline containing distribution growth parameters drFitSpline object bootstrap sample. Use plot.drBootSpline visualize bootstrapping splines well distribution EC50. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition. boot.conc Table concentration values per column, resulting spline fit bootstrap. boot.test Table response values per column, resulting spline fit bootstrap. boot.drSpline List containing drFitSpline objects generated call growth.drFitSpline. ec50.boot Vector estimated EC50 values bootstrap entry. ec50y.boot Vector estimated response EC50 values bootstrap entry. BootFlag (Logical) Indicates success bootstrapping operation. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on response vs. concentration data of a single sample — growth.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = 'test',                control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8,                                         nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.894720453184341 StDev :  0.101032600928088  #> 90% CI:  0.891396480613807 90% CI:  0.898044425754875 #> 95% CI:  0.89075997522796 95% CI:  0.898680931140722 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.44665174015188  #> 90% CI:  1.43853263818959 90% CI:  1.45479787468926 #> 95% CI:  1.4369809928995 95% CI:  1.45636086413049 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.8947205     0.1010326          0.54057      0.1040013 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.7285218           1.060919          0.6966966           1.092744 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.446652                1.072016                1.889025 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                1.007111                1.982448 plot(TestRun, combine = TRUE)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"growth.drFit serves determine dose-response curves every condition dataset. response parameter can chosen every physiological parameter gcTable table obtained via growth.gcFit. growth.drFit calls functions growth.drFitSpline growth.drBootSpline, growth.drFitModel generate table estimates EC50 respecting statistics.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"","code":"growth.drFit(   gcTable,   control = growth.control(dr.method = \"model\", dr.model = c(\"gammadr\", \"multi2\", \"LL.2\",     \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\", \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\",     \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\", \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),     dr.have.atleast = 6, dr.parameter = \"mu.linear\", nboot.dr = 0, smooth.dr = NULL,     log.x.dr = FALSE, log.y.dr = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"gcTable dataframe containing data dose-response curve estimation. table class gcTable can obtained running growth.gcFit. control grofit.control object created growth.control, defining relevant fitting options. dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"object class drFit. raw.data Data passed function gcTable. drTable Dataframe containing condition identifiers, fit options, results dose-response analysis. drBootSplines List drBootSpline objects generated call growth.drBootSpline distinct experiment. drFittedSplines List drFitSpline objects generated call growth.drFitSpline distinct experiment. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a dose-response analysis on response vs. concentration data — growth.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,              control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1601180     0.002346241  0.1553389  0.1648972 #> 2 Test2 FALSE FALSE       0     0.1144508     0.001464893  0.1114669  0.1174347 #>       yEC50      test model #> 1 0.3312400 mu.spline  W1.3 #> 2 0.2365924 mu.spline  W1.3 plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"Fit various models response vs. concentration data single sample determine EC50.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"","code":"growth.drFitModel(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"drFitModel object.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit various models to response vs. concentration data of a single sample to determine the EC50. — growth.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = 'test')  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper     yEC50      test #> e:1:50      4.056682      0.08121411   3.885335   4.228029 0.4686102 mu.linfit #>        model #> e:1:50  W1.3 plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"growth.drFitSpline performs smooth spline fit determines EC50 concentration half-maximum value response parameter spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"","code":"growth.drFitSpline(conc, test, drID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"conc Vector concentration values. test Vector response parameter values length conc. drID (Character) name analyzed condition control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"drFitSpline object. raw.conc Raw data provided function conc. raw.test Raw data response parameter provided function test. drID (Character) Identifies tested condition fit.conc Fitted concentration values. fit.test Fitted response values. spline smooth.spline object generated smooth.spline function. spline.low x y values lowess spline fit raw data. Used call smooth.spline. parameters List parameters estimated dose response curve fit. EC50: Concentration half-maximal response. yEC50: Response value related EC50. EC50.orig: EC50 value original scale, transformation applied. yEC50.orig: Response value EC50 original scale, transformation applied. fitFlag (Logical) Indicates whether spline fitted successfully data. reliable (Logical) Indicates whether performed fit reliable (set manually). control Object class grofit.control containing list options passed function control. Use plot.drFitSpline visualize spline fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"spline fit smooth.spline, higher weights assigned data points concentration value 0, well x-y pairs response parameter value 0 pairs concentration values zero-response parameter values.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07 Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on response vs. concentration data of a single sample to determine the EC50. — growth.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = 'test',               control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.67780660228835 yEC50 0.468324080779078 #> --> Original scale  #> xEC50 4.35380007032926 yEC50 0.468324080779078 #>  #>   print(summary(TestRun)) #>       EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.677807 0.4683241    4.3538  0.4683241   NA  plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"growth.gcBootSpline resamples growth-time value pairs dataset replacement performs spline fit bootstrap sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"","code":"growth.gcBootSpline(time, data, gcID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"time Vector independent variable (usually: time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"gcBootSpline object containing distribution growth parameters gcFitSpline object bootstrap sample. Use plot.gcBootSpline visualize bootstrapping splines well distribution physiological parameters. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. gcID (Character) Identifies tested sample. boot.time Table time values per column, resulting spline fit bootstrap. boot.data Table growth values per column, resulting spline fit bootstrap. boot.gcSpline List gcFitSpline object, created growth.gcFitSpline resample bootstrap. lambda Vector estimated lambda (lag time) values bootstrap entry. mu Vector estimated mu (maximum growth rate) values bootstrap entry. Vector estimated (maximum growth) values bootstrap entry. integral Vector estimated integral values bootstrap entry. bootFlag (Logical) Indicates success bootstrapping operation. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a bootstrap on growth vs. time data followed by spline fits for each resample — growth.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = 'TestFit',               control = growth.control(fit.opt = 's', nboot.gc = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"growth.gcFit performs computational growth fitting operations based user input.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"","code":"growth.gcFit(time, data, control = growth.control(), parallelize = TRUE, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"time (optional) matrix containing time values sample. data Either... grodata object created read_data parse_data, list containing 'time' matrix well 'growth' , appropriate, 'fluorescence' dataframes, dataframe containing growth values (time matrix provided separate argument). control grofit.control object created growth.control, defining relevant fitting options. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"gcFit object contains growth fitting results, compatible various plotting functions QurvE package. raw.time Raw time matrix passed function time. raw.data Raw growth dataframe passed function data. gcTable Table growth parameters related statistics growth curve evaluation performed function. table, also returned generic summary.gcFit method applied gcFit object, used input growth.drFit. gcFittedLinear List gcFitLinear objects, generated call growth.gcFitLinear. Note: access object list via double brace: gcFittedLinear[[#n]]. gcFittedModels List gcFitModel objects, generated call growth.gcFitModel. Note: access object list via double brace: gcFittedModels[[#n]]. gcFittedSplines List gcFitSpline objects, generated call growth.gcFitSpline. Note: access object via double brace: gcFittedSplines[[#n]]. gcBootSplines List gcBootSpline objects, generated call growth.gcBootSpline. Note: access object via double brace: gcFittedSplines[[#n]]. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a growth curve analysis on all samples in the provided dataset. — growth.gcFit","text":"","code":"# Create random growth data set   rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')   rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')    rnd.data <- list()   rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time)   rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow   res <- growth.gcFit(time = rnd.data$time,                       data = rnd.data$data,                       parallelize = FALSE,                       control = growth.control(suppress.messages = TRUE,                                                fit.opt = 's'))"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"Determine maximum growth rates log-linear part growth curve using heuristic approach similar ``growth rates made easy''-method Hall et al. (2013).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"","code":"growth.gcFitLinear(   time,   data,   gcID = \"undefined\",   quota = 0.95,   control = growth.control(t0 = 0, tmax = NA, log.x.gc = FALSE, log.y.lin = TRUE,     min.growth = NA, max.growth = NA, lin.h = NULL, lin.R2 = 0.97, lin.RSD = 0.1, lin.dY     = 0.05, biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"time Vector independent variable (usually: time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. quota (Numeric, 0 1) Define fraction \\(mu_{max}\\) slope regression windows adjacent window highest slope included overall linear fit. control grofit.control object created growth.control, defining relevant fitting options. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions. t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Minimum time value considered linear spline fits. lin.h (Numeric) Manually define size sliding window . NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Enter minimum percentage growth increase linear regression cover. biphasic (Logical) Shall growth.gcFitLinear try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"gcFitLinear object parameters fit. lag time estimated intersection fit horizontal line \\(y=y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize linear fit. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. filt.time Filtered time values used heuristic linear method. filt.data Filtered growth values. log.data Log-transformed, filtered growth values used heuristic linear method. gcID (Character) Identifies tested sample. FUN Linear function used plotting tangent mumax. fit lm object; result final call lm perform linear regression. par List determined growth parameters. y0: Minimum growth value considered heuristic linear method. dY: Difference maximum growth minimum growth. : Maximum growth. y0_lm: Intersection linear fit abscissa. mumax: Maximum growth rate (.e., slope linear fit). tD: Doubling time. mu.se: Standard error maximum growth rate. lag: Lag time. tmax_start: Time value first data point within window used linear regression. tmax_end: Time value last data point within window used linear regression. t_turn: biphasic growth: Time inflection point separates two growth phases. mumax2: biphasic growth: Growth rate second growth phase. tD2: Doubling time second growth phase. y0_lm2: biphasic growth: Intersection linear fit second growth phase abscissa. lag2: biphasic growth: Lag time determined second growth phase.. tmax2_start: biphasic growth: Time value first data point within window used linear regression second growth phase. tmax2_end: biphasic growth: Time value last data point within window used linear regression second growth phase. ndx Index data points used linear regression. ndx2 Index data points used linear regression second growth phase. control Object class grofit.control containing list options passed function control. rsquared R2 linear regression. rsquared2 R2 linear regression second growth phase. fitFlag (Logical) Indicates whether linear regression successfully performed data. fitFlag2 (Logical) Indicates whether second growth phase identified. reliable (Logical) Indicates whether performed fit reliable (set manually).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"algorithm works follows: Fit linear regressions (Theil-Sen estimator) subsets h consecutive, log-transformed data points (sliding window size h). example \\(h=5\\), fit linear regression points 1 ... 5, 2 ... 6, 3 ... 7 . Find subset highest slope \\(mu_{max}\\). R2 relative standard deviation (RSD) values regression meet lin.R2 lin.RSD defined thresholds data points within regression window account fraction least lin.dY total growth increase? , evaluate subset second highest slope, . Include also data points adjacent subsets slope least \\(quota \\cdot mu{max}\\), e.g., regression windows least 95% maximum slope. Fit new linear model extended data window identified step 3. biphasic = TRUE, following steps performed define second growth phase: Perform smooth spline fit data smoothing factor 0.5. Calculate second derivative spline fit perform smooth spline fit derivative smoothing factor 0.4. Determine local maxima minima second derivative. Find local minimum following \\(mu_{max}\\) repeat heuristic linear method later time values. Find local maximum \\(mu_{max}\\) repeat heuristic linear method earlier time values. Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"Hall, BG., Acar, H, Nandipati, Barlow, M (2014) Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-38, DOI: 10.1093/molbev/mst187 Petzoldt T (2022). growthrates: Estimate Growth Rates Experimental Data. R package version 0.8.3, https://CRAN.R-project.org/package=growthrates. Theil, H.(1992). rank-invariant method linear polynomial regression analysis. : Henri Theil’s contributions economics econometrics. Springer, pp. 345–381. DOI: 10.1007/978-94-011-2546-8_20","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an exponential growth model with a heuristic linear method — growth.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"l\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit nonlinear growth models to growth data — growth.gcFitModel","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"growth.gcFitModel determines parametric growth model best describes data.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"","code":"growth.gcFitModel(time, data, gcID = \"undefined\", control = growth.control())"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"time Vector independent variable (usually time). data Vector dependent variable (usually growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"gcFitModel object contains physiological parameters information best fit. Use plot.gcFitModel visualize parametric fit growth equation. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. gcID (Character) Identifies tested sample. fit.time Fitted time values. fit.data Fitted growth values. parameters List determined growth parameters. : Maximum growth. dY: Difference maximum growth minimum growth fitted model. mu: Maximum growth rate (.e., maximum first derivative spline). lambda: Lag time. b.tangent: Intersection tangent maximum growth rate abscissa. fitpar: models: list additional parameters used equations describing growth curve. integral: Area curve parametric fit. model (Character) model obtained fit lowest AIC, determined AIC. nls nls object chosen model generated nls function. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether parametric model successfully fitted data. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit nonlinear growth models to growth data — growth.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'm')) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  plot(TestFit, basesize = 18, eq.size = 1.5) #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a smooth spline fit on growth data — growth.gcFitSpline","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"growth.gcFitSpline performs smooth spline fit dataset determines highest growth rate global maximum first derivative spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"","code":"growth.gcFitSpline(   time,   data,   gcID = \"undefined\",   control = growth.control(biphasic = FALSE) )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"time Vector independent variable (usually time). data Vector dependent variable (usually: growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options. biphasic (Logical) Shall growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"gcFitSpline object. lag time estimated intersection tangent maximum slope horizontal line \\(y = y_0\\), y0 first value dependent variable. Use plot.gcFitSpline visualize spline fit derivative time. time.Raw time values provided function time. data.Raw growth data provided function data. raw.time Filtered time values used spline fit. raw.data Filtered growth values used spline fit. gcID (Character) Identifies tested sample. fit.time Fitted time values. fit.data Fitted growth values. parameters List determined growth parameters. : Maximum growth. dY: Difference maximum growth minimum growth. mu: Maximum growth rate (.e., maximum first derivative spline). tD: Doubling time. t.max: Time maximum growth rate. lambda: Lag time. b.tangent: Intersection tangent maximum growth rate abscissa. mu2: biphasic growth: Growth rate second growth phase. tD2: Doubling time second growth phase. lambda2: biphasic growth: Lag time determined second growth phase. t.max2: biphasic growth: Time maximum growth rate second growth phase. b.tangent2: biphasic growth: Intersection tangent maximum growth rate second growth phase abscissa. integral: Area curve spline fit. spline smooth.spline object generated smooth.spline function. spline.deriv1 list time ('x') growth ('y') values describing first derivative spline fit. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether spline fit successfully performed data. fitFlag2 (Logical) Indicates whether second growth phase identified. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"biphasic = TRUE, following steps performed define second growth phase: Determine local minima within first derivative smooth spline fit. Remove 'peak' containing highest value first derivative (.e., \\(mu_{max}\\)) flanked two local minima. Repeat smooth spline fit identification maximum slope later time values local minimum \\(mu_{max}\\). Repeat smooth spline fit identification maximum slope earlier time values local minimum \\(mu_{max}\\). Choose greater two independently determined slopes \\(mu_{max}2\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a smooth spline fit on growth data — growth.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform spline fit TestFit <- growth.gcFitSpline(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 's'))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.param.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","title":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","text":"Internal function called within growth.gcFitModel perform growth model fitting.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","text":"","code":"growth.param(time, data, gcID = \"undefined\", control)"},{"path":"https://nicwir.github.io/QurvE/reference/growth.param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","text":"time Vector independent variable (usually time). data Vector dependent variable (usually growth values). gcID (Character) name analyzed sample. control grofit.control object created growth.control, defining relevant fitting options.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","text":"gcFitModel object contains physiological parameters information best fit. Use plot.gcFitModel visualize parametric fit growth equation. raw.time Raw time values provided function time. raw.data Raw growth data provided function data. gcID (Character) Identifies tested sample. fit.time Fitted time values. fit.data Fitted growth values. parameters List determined growth parameters. : Maximum growth. dY: Difference maximum growth minimum growth fitted model. mu: Maximum growth rate (.e., maximum first derivative spline). lambda: Lag time. b.tangent: Intersection tangent maximum growth rate abscissa. fitpar: models: list additional parameters used equations describing growth curve. integral: Area curve parametric fit. model (Character) model obtained fit lowest AIC, determined AIC. nls nls object chosen model generated nls function. reliable (Logical) Indicates whether performed fit reliable (set manually). fitFlag (Logical) Indicates whether parametric model successfully fitted data. control Object class grofit.control containing list options passed function control.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function called within growth.gcFitModel to perform growth model fitting. — growth.param","text":"","code":"if (FALSE) { # Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # /// conversion to handle even data.frame inputs time <- as.vector(as.numeric(as.matrix(time)))[!is.na(time)][!is.na(data)] data    <- as.vector(as.numeric(as.matrix(data)))[!is.na(time)][!is.na(data)]  # Perform parametric fit TestFit <- growth.param(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'm'))  plot(TestFit, basesize = 18, eq.size = 1.5) }"},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"growth.report requires grofit object creates report PDF HTML format summarizes results.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"","code":"growth.report(   grofit,   out.dir = tempdir(),   out.nm = NULL,   ec50 = FALSE,   format = c(\"pdf\", \"html\"),   export = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"grofit grofit object created growth.workflow. .dir (Character) path name folder report files created.  NULL, folder named combination 'Report.growth_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'GrowthReport_' current date time. ec50 (Logical) Display results dose-response analysis (TRUE) (FALSE). format (Character) Define file format report, PDF ('pdf') /HTML ('html'). Default: (c('pdf', 'html')) export (Logical) Shall plots generated report exported individual PDF PNG files TRUE FALSE? parallelize (Logical) Create plots using one available processor cores (TRUE) single core (FALSE). ... arguments passed create report. Currently supported: mean.grp: Define groups combine common plots report based sample identifiers. Partial matches sample/group names accepted. Can '', string vector, list string vectors. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc: Define concentrations combine common plots  report. Can numeric vector, list numeric vectors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"NULL","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a PDF and HTML report with results from a growth curve analysis workflow — growth.report","text":"","code":"# \\donttest{ # Create random growth data set   rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')     # Run growth curve analysis workflow   res <- growth.workflow(time = rnd.data$time,                          data = rnd.data$data,                          fit.opt = 's',                          ec50 = FALSE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE)    growth.report(res, out.dir = tempdir(), parallelize = FALSE) #> Render reports... #> Report files saved in: '/C:\\Users\\nicwir\\AppData\\Local\\Temp\\RtmpoRc8GS' # }"},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"growth.workflow runs growth.control create grofit.control object performs computational fitting operations based user input. Finally, desired, final report created PDF HTML format summarizes results obtained.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"","code":"growth.workflow(   grodata = NULL,   time = NULL,   data = NULL,   ec50 = TRUE,   mean.grp = NA,   mean.conc = NA,   neg.nan.act = FALSE,   clean.bootstrap = TRUE,   suppress.messages = FALSE,   fit.opt = c(\"a\"),   t0 = 0,   tmax = NA,   min.growth = NA,   max.growth = NA,   log.x.gc = FALSE,   log.y.lin = TRUE,   log.y.spline = TRUE,   log.y.model = TRUE,   biphasic = FALSE,   lin.h = NULL,   lin.R2 = 0.97,   lin.RSD = 0.1,   lin.dY = 0.05,   interactive = FALSE,   nboot.gc = 0,   smooth.gc = 0.55,   model.type = c(\"logistic\", \"richards\", \"gompertz\", \"gompertz.exp\", \"huang\", \"baranyi\"),   dr.method = c(\"model\", \"spline\"),   dr.model = c(\"gammadr\", \"multi2\", \"LL.2\", \"LL.3\", \"LL.4\", \"LL.5\", \"W1.2\", \"W1.3\",     \"W1.4\", \"W2.2\", \"W2.3\", \"W2.4\", \"LL.3u\", \"LL2.2\", \"LL2.3\", \"LL2.3u\", \"LL2.4\",     \"LL2.5\", \"AR.2\", \"AR.3\", \"MM.2\"),   growth.thresh = 1.5,   dr.have.atleast = 6,   dr.parameter = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu.spline\",     \"lambda.spline\", \"dY.spline\", \"A.spline\", \"mu.model\", \"lambda.model\",     \"dY.orig.model\", \"A.orig.model\"),   smooth.dr = 0.1,   log.x.dr = FALSE,   log.y.dr = FALSE,   nboot.dr = 0,   report = NULL,   out.dir = NULL,   out.nm = NULL,   export.fig = FALSE,   export.res = FALSE,   parallelize = TRUE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"grodata grodata object created read_data parse_data, list containing 'time' matrix well 'growth' dataframe. time (optional) matrix containing time values sample. data (optional) dataframe containing growth data (time matrix provided separate argument). ec50 (Logical) Perform dose-response analysis (TRUE) (FALSE). mean.grp ('', string vector, list string vectors) Define groups combine common plots final report based sample identifiers (report == TRUE). Partial matches sample/group names accepted. Note: maximum number sample groups (unique condition/concentration indicators) 50. 50 groups, option '' produce error ! Insufficient values manual scale. [Number] needed 50 provided. mean.conc (numeric vector, list numeric vectors) Define concentrations combine common plots final report (report == TRUE). neg.nan.act (Logical) Indicates whether program stop negative growth values NA values appear (TRUE). Otherwise, program removes values silently (FALSE). Improper values may caused incorrect data input errors. Default: FALSE. clean.bootstrap (Logical) Determines negative values occur bootstrap removed (TRUE) kept (FALSE). Note: Infinite values always removed. Default: TRUE. suppress.messages (Logical) Indicates whether grofit messages (information current growth curve, EC50 values etc.) displayed (FALSE) (TRUE). option meant speed high-throughput processing data. Note: warnings still displayed. Default: FALSE. fit.opt (Character character vector) Indicates whether program perform linear regression ('l'), model fit ('m'), spline fit ('s'), (''). Combinations can freely chosen providing character vector, e.g. fit.opt = c('l', 's') Default:  fit.opt = c('l', 's'). t0 (Numeric) Minimum time value considered linear spline fits. tmax (Numeric) Maximum time value considered linear spline fits. min.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. max.growth (Numeric) Indicate whether growth values certain threshold considered linear regressions spline fits. log.x.gc (Logical) Indicates whether ln(x+1) applied time data linear spline fits. Default: FALSE. log.y.lin (Logical) Indicates whether ln(y/y0) applied growth data linear fits. Default: TRUE log.y.spline (Logical) Indicates whether ln(y/y0) applied growth data spline fits. Default: TRUE log.y.model (Logical) Indicates whether ln(y/y0) applied growth data model fits. Default: TRUE biphasic (Logical) Shall growth.gcFitLinear growth.gcFitSpline try extract growth parameters two different growth phases (observed , e.g., diauxic shifts) (TRUE) (FALSE)? lin.h (Numeric) Manually define size sliding window used growth.gcFitLinear NULL, h calculated samples based number measurements growth phase plot. lin.R2 (Numeric) R2 threshold growth.gcFitLinear lin.RSD (Numeric) Relative standard deviation (RSD) threshold calculated slope growth.gcFitLinear lin.dY (Numeric) Threshold minimum fraction growth increase linear regression window cover. Default: 0.05 (5%). interactive (Logical) Controls whether fit growth curve method controlled manually user. TRUE, fit visualized Plots pane user can adjust fitting parameters confirm reliability fit per sample. Default: TRUE. nboot.gc (Numeric) Number bootstrap samples used nonparametric growth curve fitting growth.gcBootSpline. Use nboot.gc = 0 disable bootstrap. Default: 0 smooth.gc (Numeric) Parameter describing smoothness spline fit; usually (necessary) within (0;1]. smooth.gc=NULL causes program query optimal value via cross validation techniques. Especially datasets data points option NULL might cause small smoothing parameter. can result tight fit susceptible measurement errors (thus overestimating growth rates) produce error smooth.spline lead overestimation. usage fixed value recommended reproducible results across samples. See ?smooth.spline details. Default: 0.55 model.type (Character) Vector providing names parametric models fitted data. Default: c('logistic', 'richards', 'gompertz', 'gompertz.exp', 'huang', 'baranyi'). dr.method (Character) Define method used perform dose-responde analysis: smooth spline fit ('spline') model fitting ('model'). dr.model (Character) Provide list models R package 'drc' include dose-response analysis (dr.method = 'model'). one model provided, best-fitting model chosen based Akaike Information Criterion. growth.thresh (Numeric) Define threshold growth. growth value sample greater growth.thresh (default: 1.5) times start growth, computations performed. Else, message returned. dr..atleast (Numeric) Minimum number different values response parameter one estimating dose response curve. Note: fit procedures require least six unique values. Default: 6. dr.parameter (Character numeric) response parameter output table used creating dose response curve. See growth.drFit details. Default: 'mu.linfit', represents maximum slope linear regression. Typical options include: 'mu.linfit', 'lambda.linfit', 'dY.linfit', 'mu.spline', 'dY.spline', 'mu.model', '.model'. smooth.dr (Numeric) Smoothing parameter used spline fit smooth.spline dose response curve estimation. Usually (necessesary) (0; 1]. See documentation smooth.spline details. Default: NULL. log.x.dr (Logical) Indicates whether ln(x+1) applied concentration data dose response curves. Default: FALSE. log.y.dr (Logical) Indicates whether ln(y+1) applied response data dose response curves. Default: FALSE. nboot.dr (Numeric) Defines number bootstrap samples EC50 estimation. Use nboot.dr = 0 disable bootstrapping. Default: 0. report (Character NULL) Create PDF ('pdf') /HTML ('html') report running computations. Define NULL report created. Default: (c('pdf', 'html')) .dir Character NULL Define name folder result files stored. NULL, folder named combination 'GrowthResults_' current date time. .nm Character NULL Define name report files. NULL, files named combination 'GrowthReport_' current date time. export.fig (Logical) Export figures created report separate PNG PDF files (TRUE) (FALSE). effective report = TRUE. export.res (Logical) Create tab-separated TXT files containing calculated growth parameters dose-response analysis results well .RData file resulting grofit object. parallelize Run linear fits bootstrapping operations parallel using one available processor cores ... arguments passed shiny app.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"grofit object contains computation results, compatible various plotting functions QurvE package growth.report. time Raw time matrix passed function time (grofit object provided). data Raw growth dataframe passed function data (grofit object provided). gcFit gcFit object created call growth.gcFit. drFit drFit object created call growth.drFit. expdesign Experimental design table inherited grodata created identifier columns (columns 1-3) data. control Object class grofit.control created call growth.control.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/growth.workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a complete growth curve analysis and dose-reponse analysis workflow. — growth.workflow","text":"","code":"# Create random growth data set   rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')   rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')    rnd.data <- list()   rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time)   rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)    # Run growth curve analysis workflow   res <- growth.workflow(time = rnd.data$time,                          data = rnd.data$data,                          fit.opt = 's',                          ec50 = FALSE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE)  # Load custom dataset   input <- read_data(data.growth = system.file('2-FMA_toxicity.csv', package = 'QurvE')) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.    res <- growth.workflow(grodata = input,                          fit.opt = 's',                          ec50 = TRUE,                          export.res = FALSE,                          suppress.messages = TRUE,                          parallelize = FALSE) #> The chosen 'dr.parameter' is not compatible with the selected fitting options ('fit.opt'). Dose-response analysis will not be performed.    plot(res)"},{"path":"https://nicwir.github.io/QurvE/reference/grow_exponential.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","title":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","text":"Calculate values exponential growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_exponential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","text":"","code":"grow_exponential(time, parms)"},{"path":"https://nicwir.github.io/QurvE/reference/grow_exponential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","text":"time vector time values parms vector length 2 parameters: 1. start growth value (y0), 2. exponential growth rate (mumax)","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_exponential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","text":"dataframe time calculated growth columns","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_exponential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the exponential growth model for given time points and growth parameters. — grow_exponential","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) data.exp <- grow_exponential(time, parms = c(0.05, 0.6)) plot(data.exp)"},{"path":"https://nicwir.github.io/QurvE/reference/grow_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","title":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","text":"Calculate values linear growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","text":"","code":"grow_linear(time, parms)"},{"path":"https://nicwir.github.io/QurvE/reference/grow_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","text":"time vector time values parms vector length 2 parameters: 1. start growth value (y0), 2. growth rate slope linear model (mumax)","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","text":"dataframe time calculated growth columns","code":""},{"path":"https://nicwir.github.io/QurvE/reference/grow_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the linear growth model for given time points and growth parameters. — grow_linear","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) data.lin <- grow_linear(time, parms = c(0.05, 0.6)) plot(data.lin)"},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjusted modalDialog()  function to include classes — help_modal","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"Adjusted modalDialog()  function include classes","code":""},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"","code":"help_modal(   ...,   title = NULL,   footer = NULL,   size = c(\"m\", \"s\", \"l\"),   easyClose = TRUE,   fade = TRUE,   idcss = \"\" )"},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"... UI elements body modal dialog box. title optional title dialog. footer UI footer. Use NULL footer. size One \"s\" small, \"m\" (default) medium, \"l\" large. easyClose TRUE, modal dialog can dismissed clicking outside dialog box, pressing Escape key. FALSE (default), modal dialog dismissed ways; instead must dismissed clicking modalButton(), call removeModal() server. fade FALSE, modal dialog fade-animation (simply appear rather fade view). idcss CSS class modal","code":""},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"div HTML tag modal dialog","code":""},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"Stackoverflow user mfindinge","code":""},{"path":"https://nicwir.github.io/QurvE/reference/help_modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjusted modalDialog()  function to include classes — help_modal","text":"","code":"if (FALSE) { require(shiny)  shinyApp(   ui = basicPage(     tags$style(       type = 'text/css',       '.modal-dialog.test{ width: fit-content !important; }'     ),     actionButton(\"show\", \"Show modal dialog\"),     actionButton(\"shows\", \"Show modal dialog2\")   ),    server = function(input, output) {      # Render DT     output$dt <- DT::renderDT(cbind(iris, iris))      # Modal management     observeEvent(input$show, {       showModal(         help_modal(easyClose = T,                  DT::DTOutput(\"dt\"),                  footer = tagList(                   modalButton(\"Cancel\"),                   actionButton(\"ok\", \"OK\")                 ),                 idcss = \"test\"         )       )     })      observeEvent(input$shows, {       showModal(         help_modal(easyClose = T,                  DT::DTOutput(\"dt\"),                  footer = tagList(                   modalButton(\"Cancel\"),                   actionButton(\"ok\", \"OK\")                 ),                 idcss = \"tests\"         )       )     })   } ) }"},{"path":"https://nicwir.github.io/QurvE/reference/huang.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","title":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","text":"Calculate values Huang growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/huang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","text":"","code":"huang(time, A, mu, lambda, addpar)"},{"path":"https://nicwir.github.io/QurvE/reference/huang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar additional parameters (: minimum growth)","code":""},{"path":"https://nicwir.github.io/QurvE/reference/huang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/huang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the Huang growth model for given time points and growth parameters. — huang","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) growth <- huang(time, A = 3, mu=0.6, lambda = 3, addpar = 0.01)  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":null,"dir":"Reference","previous_headings":"","what":"Find indices of maxima an minima in a data series — inflect","title":"Find indices of maxima an minima in a data series — inflect","text":"Find indices maxima minima data series","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find indices of maxima an minima in a data series — inflect","text":"","code":"inflect(x, threshold = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find indices of maxima an minima in a data series — inflect","text":"x vector values minima maxima threshold Threshold consider minima maxima","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find indices of maxima an minima in a data series — inflect","text":"list 1. vector minima 2. vector maxima.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find indices of maxima an minima in a data series — inflect","text":"Evan Friedland","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inflect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find indices of maxima an minima in a data series — inflect","text":"","code":"# Pick a desired threshold to plot up to n <- 3 # Generate Data randomwalk <- 100 + cumsum(rnorm(50, 0.2, 1)) # climbs upwards most of the time bottoms <- lapply(1:n, function(x) inflect(randomwalk, threshold = x)$minima) tops <- lapply(1:n, function(x) inflect(randomwalk, threshold = x)$maxima) # Color functions cf.1 <- grDevices::colorRampPalette(c('pink','red')) cf.2 <- grDevices::colorRampPalette(c('cyan','blue')) plot(randomwalk, type = 'l', main = 'Minima & Maxima\\nVariable Thresholds') for(i in 1:n){   points(bottoms[[i]], randomwalk[bottoms[[i]]], pch = 16, col = cf.1(n)[i], cex = i/1.5) } for(i in 1:n){   points(tops[[i]], randomwalk[tops[[i]]], pch = 16, col = cf.2(n)[i], cex = i/1.5) } legend('topleft', legend = c('Minima',1:n,'Maxima',1:n),        pch = rep(c(NA, rep(16,n)), 2), col = c(1, cf.1(n),1, cf.2(n)),        pt.cex =  c(rep(c(1, c(1:n) / 1.5), 2)), cex = .75, ncol = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/initbaranyi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","title":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls Baranyi's growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbaranyi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","text":"","code":"initbaranyi(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/initbaranyi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbaranyi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag time. addpar Minimum curve \\(y0\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbaranyi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the Baranyi's growth model — initbaranyi","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- initbaranyi(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/initbiosensor.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","title":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","text":"Generate initial values parameter estimation biosensor response model","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbiosensor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","text":"","code":"initbiosensor(x, y, n)"},{"path":"https://nicwir.github.io/QurvE/reference/initbiosensor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","text":"x vector concentration values least four elements. y vector response values least four elements. n Cooperativity parameter","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbiosensor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","text":"list: y.max Maximum response value. K Sensitivity parameter. n initially defined cooperativity parameter.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initbiosensor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the biosensor response model — initbiosensor","text":"","code":"if (FALSE) { n <- seq(1:10) conc <- (10*(1/2)^n) response <- log10(y <- gompertz(conc, A = 2, mu = 0.6, lambda = 3))  init <- initbiosensor(x = conc,                       y = response,                       n= 0.5) }"},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","title":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls Gompertz's growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","text":"","code":"initgompertz.exp(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag time. addpar Two element vector defining scaling parameter \\(\\alpha\\) shifting parameter \\(t_{shift}\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the modified Gompertz growth model — initgompertz.exp","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- initgompertz(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","title":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls Gompertz's growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","text":"","code":"initgompertz(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag time. addpar Additional parameters used type model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initgompertz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the Gompertz's growth model — initgompertz","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- initgompertz(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/inithuang.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","title":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls Huang's growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inithuang.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","text":"","code":"inithuang(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/inithuang.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inithuang.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag time. addpar Minimum curve \\(y0\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/inithuang.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the Huang's growth model — inithuang","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- inithuang(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/initlogistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","title":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls logistic growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initlogistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","text":"","code":"initlogistic(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/initlogistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initlogistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag-phase. addpar additional parameters used type model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initlogistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the logistic growth model — initlogistic","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- initlogistic(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/initrichards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","title":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","text":"initlogistic receives time points, growth data, values \\(\\), \\(\\mu\\) \\(\\lambda\\) returns list object entries used initial values nonlinear fit procedure nls Richard's growth model.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initrichards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","text":"","code":"initrichards(time, y, A, mu, lambda)"},{"path":"https://nicwir.github.io/QurvE/reference/initrichards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","text":"time vector time values. y vector growth values (e.g., growth). Maximum curve. vector provided first entry used. mu Maximum slope. vector provided first entry used. lambda Lag time. vector provided first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initrichards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","text":"parameters input arguments list: Maximum curve. mu Maximum slope. lambda Lag time. addpar Shape exponent \\(\\nu\\).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/initrichards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate initial values for parameter estimation with the Richard's growth model — initrichards","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate baranyi growth curve y <- baranyi(time, A = 3, mu=0.6, lambda = 2, addpar = 0.01)  init <- initrichards(time, y, A = 3, mu = 0.6, lambda = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions for handling linear fits. — lm_parms","title":"Helper functions for handling linear fits. — lm_parms","text":"lm_window performs linear regression Theil-Sen estimator subset data.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions for handling linear fits. — lm_parms","text":"","code":"lm_parms(m)  lm_window(x, y, i0, h = 5)"},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions for handling linear fits. — lm_parms","text":"m linear model (lm) object x vector independent variable (e.g. time). y vector dependent variable (concentration organisms). i0 index first value used window. h window (number data).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions for handling linear fits. — lm_parms","text":"linear model object class lm (lm_window) resp. vector parameters fit (lm_parms).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper functions for handling linear fits. — lm_parms","text":"Hall, B. G., H. Acar M. Barlow 2013. Growth Rates Made Easy. Mol. Biol. Evol. 31: 232-238 doi:10.1093/molbev/mst197","code":""},{"path":"https://nicwir.github.io/QurvE/reference/lm_window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper functions for handling linear fits. — lm_parms","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- as.numeric(rnd.dataset$data[1,-(1:3)]) # Remove identifier columns data.log <- log(data/data[1])  # Perform linear fit on 8th window of size 8 linreg <- lm_window(time, data.log, 8, h=8)  summary(linreg) #>  #> Call: #> theil_sen_regression(formula = y ~ x) #>  #> Residuals: #>       Min        1Q    Median        3Q       Max  #> -0.040833 -0.010545  0.000000  0.009555  0.011131  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -0.12314    0.03367  -3.657 0.010611 *   #> x            0.11351    0.01253   9.058 0.000102 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.0203 on 6 degrees of freedom #> Multiple R-squared:  0.9319,\tAdjusted R-squared:  0.9205  #> F-statistic: 82.05 on 1 and 6 DF,  p-value: 0.0001015 #>   lm_parms(linreg) #>           a           b        b.se          r2       b.rsd  #> -0.12314490  0.11351084  0.01253151  0.93185532  0.11039924"},{"path":"https://nicwir.github.io/QurvE/reference/logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","title":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","text":"Calculate values logistic growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","text":"","code":"logistic(time, A, mu, lambda, addpar = NULL)"},{"path":"https://nicwir.github.io/QurvE/reference/logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar Additional parameters effect type model. belong standard model description QurvE initialized addpar=NULL function header.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the logistic growth model for given time points and growth parameters. — logistic","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) # Simulate logistic growth curve growth <- logistic(time, A = 3, mu=0.6, lambda = 3, addpar = 0.01)  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"Function estimate area curve given x y(x) values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"","code":"low.integrate(x, y)"},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"x Numeric vector x values. y Numeric vector y values length x.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"Numeric value: Area smoothed spline.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"function uses R internal function smooth.spline.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/low.integrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to estimate the area under a curve given as x and y(x) values — low.integrate","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- as.numeric(rnd.dataset$data[1,-(1:3)]) # Remove identifier columns  plot(time, data)   print(low.integrate(time, data)) #> [1] 78.17854"},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"match arg to choices — match_arg","title":"match arg to choices — match_arg","text":"Wrapper around match.arg defaults ignoring case trimming white space","code":""},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"match arg to choices — match_arg","text":"","code":"match_arg(arg, choices, multiple = FALSE, ignore_case = TRUE, trim_ws = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"match arg to choices — match_arg","text":"arg character vector (length one unless several.ok TRUE) NULL choices character vector candidate values multiple logical specifying arg allowed one element. Defaults FALSE ignore_case logical indicating whether ignore capitalization. Defaults TRUE trim_ws logical indicating whether trim surrounding white space. Defaults TRUE","code":""},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"match arg to choices — match_arg","text":"Value(s) matched via partial matching.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"match arg to choices — match_arg","text":"Alban Sagouis","code":""},{"path":"https://nicwir.github.io/QurvE/reference/match_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"match arg to choices — match_arg","text":"","code":"if (FALSE) { require(stats) center <- function(x, type = c('mean', 'median', 'trimmed')) {   type <- match_arg(type)     switch(type,            mean = mean(x),            median = median(x),            trimmed = mean(x, trim = .1)) } x <- rcauchy(10) center(x, 't')       # Works center(x, 'T')       # Works as well center(x, 'T')       # Works as well center(x, 'med')     # Works try(center(x, 'm'))  # Error }"},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a numeric input — numberInput","title":"Create a numeric input — numberInput","text":"Create input control entry numeric values. identical shiny::numericInput() flexible requiring initial value allowing placeholders.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a numeric input — numberInput","text":"","code":"numberInput(   inputId,   label,   value = NULL,   min = NA,   max = NA,   step = NA,   placeholder = NULL,   width = NULL )"},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a numeric input — numberInput","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value. NULL default. min Minimum allowed value max Maximum allowed value step Interval use stepping min max placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option. width width input, e.g. '400px', '100%'; see validateCssUnit().","code":""},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a numeric input — numberInput","text":"numeric input control can added UI definition.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"server-value","dir":"Reference","previous_headings":"","what":"Server value","title":"Create a numeric input — numberInput","text":"numeric vector length 1.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a numeric input — numberInput","text":"Trattner, J. (2021) shinysurveys: Create Deploy Surveys 'Shiny' (R package version 0.2.0)","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/numberInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a numeric input — numberInput","text":"","code":"if (FALSE) { if (interactive()) { library(shiny) library(shinysurveys)  ui <- fluidPage(   numberInput(\"obs\", \"Observations:\", placeholder = \"How many do you see?\", min = 1, max = 100),   verbatimTextOutput(\"value\") ) server <- function(input, output) {   output$value <- renderText({ input$obs }) } shinyApp(ui, server) } }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Biolector\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_biolector(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth dataframe first element NA second. first column dataframe represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"biolector.csv\", package = \"QurvE\"), csvsep = \";\" ) parsed <- parse_biolector(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Biolector\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_biolector_shiny(input, growth.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file growth.nm Name read corresponding growth rate","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth dataframe first element NA second. first column dataframe represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_biolector_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"biolector\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_biolector_shiny(input, \"[1] Biomass Gain=3\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Chi.Bio\" bioreactors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_chibio(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"ChiBio.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_chibio(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Chi.Bio\" bioreactors.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_chibio_shiny(input, growth.nm, fl.nm, fl2.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file growth.nm Name read corresponding growth rate fl.nm, fl2.nm Name read corresponding fluorescence fluorescence2 data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_chibio_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"ChiBio.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_chibio(input, \"od_measured\", \"FP1_emit1\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":null,"dir":"Reference","previous_headings":"","what":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","title":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"parse_data takes raw export file plate reader experiment (similar device), extracts relevant information parses format required run growth.workflow. one read type found user prompted assign correct reads growth fluorescence.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"","code":"parse_data(   data.file = NULL,   map.file = NULL,   software = c(\"Gen5\", \"Gen6\", \"Biolector\", \"Chi.Bio\", \"GrowthProfiler\", \"Tecan\",     \"VictorNivo\", \"VictorX3\"),   convert.time = NULL,   sheet.data = 1,   sheet.map = 1,   csvsep.data = \";\",   dec.data = \".\",   csvsep.map = \";\",   dec.map = \".\",   subtract.blank = TRUE,   calib.growth = NULL,   calib.fl = NULL,   calib.fl2 = NULL,   fl.normtype = c(\"growth\", \"fl2\") )"},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"data.file (Character) table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing raw plate reader (similar device) data. map.file (Character) table file column format extension '.xlsx', '.xls', '.csv', '.tsv', '.txt'  'well', 'ID', 'replicate', 'concentration' first row. Used assign sample information wells plate. software (Character) name software/device used export plate reader data. convert.time (NULL string) Convert time values formula provided form 'y = function(x)'. example: convert.time = 'y = 24 * x' sheet.data, sheet.map (Numeric Character) Number name sheets XLS XLSX files containing experimental data mapping information, respectively (optional). csvsep.data, csvsep.map (Character) separator used CSV data files (ignored file types).  Default: \";\" dec.data, dec.map (Character) decimal separator used CSV, TSV TXT files measurements mapping information, respectively. subtract.blank (Logical) Shall blank values subtracted values within experiment (TRUE, default) (FALSE). calib.growth, calib.fl, calib.fl2 (Character NULL) Provide equation form 'y = function(x)' (example: 'y = x^2 * 0.3 - 0.5') convert growth fluorescence values. can used , e.g., convert plate reader absorbance values OD600 fluorescence intensity molecule concentrations. Caution!: utilizing calibration, carefully consider whether blanks subtracted determine calibration selecting input subtract.blank = TRUE. fl.normtype (Character string) Normalize fluorescence values either diving 'growth' fluorescence2 values ('fl2').","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"grodata object suitable run growth.workflow. See read_data structure.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Experimental) Parse raw plate reader data and convert it to a format compatible with QurvE — parse_data","text":"","code":"if(interactive()){ grodata <- parse_data(data.file = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\"),                       sheet.data = 1,                       map.file = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\"),                       sheet.map = \"mapping\",                       software = \"Gen5\",                       convert.time = \"y = x * 24\", # convert days to hours                       calib.growth = \"y = x * 3.058\") # convert absorbance to OD values }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated with the ","title":"Extract relevant data from a raw data export file generated with the ","text":"Extract relevant data raw data export file generated \"Gen5\" \"Gen6\" software.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"parse_Gen5Gen6(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated with the ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated with the ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\") ) parsed <- parse_Gen5Gen6(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated with the ","title":"Extract relevant data from a raw data export file generated with the ","text":"Extract relevant data raw data export file generated \"Gen5\" \"Gen6\" software.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"parse_Gen5Gen6_shiny(data, growth.nm, fl.nm, fl2.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated with the ","text":"data dataframe created reading table file read_file growth.nm Name read corresponding growth rate fl.nm, fl2.nm Name read corresponding fluorescence fluorescence2 data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated with the ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector, remainder measurements.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_Gen5Gen6_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated with the ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\") ) parsed <- parse_Gen5Gen6_shiny(input, \"Read 3:630\", \"GFP:485,528\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_growthprofiler.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of the ","title":"Extract relevant data from a raw data export file generated from the software of the ","text":"Extract relevant data raw data export file generated software \"Growth Profiler\".","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_growthprofiler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of the ","text":"","code":"parse_growthprofiler(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_growthprofiler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of the ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_growthprofiler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of the ","text":"list length two containing growth dataframe first element NA second. first column dataframe represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_growthprofiler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of the ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"GrowthProfiler.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_growthprofiler(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_biolector.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","title":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","text":"Extract names biomass reads experimental data created Biolector plate reader","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_biolector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","text":"","code":"parse_properties_biolector(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_biolector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_biolector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_biolector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of biomass reads from experimental data created with a Biolector plate reader — parse_properties_biolector","text":"","code":"if (FALSE) { parse_properties_biolector(file = system.file(\"biolector.csv\", package = \"QurvE\"), csvsep = \";\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_chibio.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","title":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","text":"Extract names reads experimental data created Chi.Bio bioreactor setup","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_chibio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","text":"","code":"parse_properties_chibio(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_chibio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_chibio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_chibio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of reads from experimental data created with a Chi.Bio bioreactor setup — parse_properties_chibio","text":"","code":"if (FALSE) { parse_properties_chibio(file = system.file(\"ChiBio.csv\", package = \"QurvE\"), csvsep = \",\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_Gen5Gen6.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of reads from experimental data created with the ","title":"Extract names of reads from experimental data created with the ","text":"Extract names reads experimental data created \"Gen5\" \"Gen6\" software","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_Gen5Gen6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of reads from experimental data created with the ","text":"","code":"parse_properties_Gen5Gen6(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_Gen5Gen6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of reads from experimental data created with the ","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_Gen5Gen6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of reads from experimental data created with the ","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_Gen5Gen6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of reads from experimental data created with the ","text":"","code":"if (FALSE) { parse_properties_Gen5Gen6(file = system.file(\"fluorescence_test_Gen5.xlsx\", package = \"QurvE\")) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_tecan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","title":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","text":"Extract names reads experimental data created Tecan plate reader","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_tecan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","text":"","code":"parse_properties_tecan(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_tecan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_tecan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_tecan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of reads from experimental data created with a Tecan plate reader — parse_properties_tecan","text":"","code":"if (FALSE) { parse_properties_tecan(file = system.file(\"Tecan.csv\", package = \"QurvE\"), csvsep = \";\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victornivo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","text":"Extract names reads experimental data created Pelkin Elmer's Victor Nivo plate readers","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victornivo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","text":"","code":"parse_properties_victornivo(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victornivo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victornivo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victornivo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor Nivo plate readers — parse_properties_victornivo","text":"","code":"if (FALSE) { parse_properties_victornivo(file = system.file(\"nivo_output.csv\", package = \"QurvE\"), csvsep = \",\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victorx3.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","text":"Extract names reads experimental data created Pelkin Elmer's Victor X3 plate readers","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victorx3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","text":"","code":"parse_properties_victorx3(file, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victorx3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","text":"file path file experiment data csvsep CSV separator string. dec Decimal separator string (CSV, TXT, TSV files) sheet Sheet number name (string) XLS XLSX files.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victorx3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","text":"vector read name strings","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_properties_victorx3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract names of reads from experimental data created with Pelkin Elmer's Victor X3 plate readers — parse_properties_victorx3","text":"","code":"if (FALSE) { parse_properties_victorx3(file = system.file(\"victorx3_output.txt\", package = \"QurvE\")) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Tecan\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_tecan(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"Tecan.csv\", package = \"QurvE\"), csvsep = \";\" ) parsed <- parse_tecan(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of ","title":"Extract relevant data from a raw data export file generated from the software of ","text":"Extract relevant data raw data export file generated software \"Tecan\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"parse_tecan_shiny(input, growth.nm, fl.nm, fl2.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of ","text":"input dataframe created reading table file read_file growth.nm Name read corresponding growth rate fl.nm, fl2.nm Name read corresponding fluorescence fluorescence2 data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_tecan_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"Tecan.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_tecan(input, \"Label1_Copy1\", \"sfGFP\", \"mRFP1\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor Nivo\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victornivo(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"nivo_output.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_victornivo(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor Nivo\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victornivo_shiny(input, growth.nm, fl.nm, fl2.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file growth.nm Name read corresponding growth rate fl.nm, fl2.nm Name read corresponding fluorescence fluorescence2 data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victornivo_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"nivo_output.csv\", package = \"QurvE\"), csvsep = \",\" ) parsed <- parse_victornivo_shiny(input, \"ABS (F) - Kinetics\") }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor X3\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victorx3(input)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if(interactive()){ input <- read_file(filename = system.file(\"victorx3_output.txt\", package = \"QurvE\") ) parsed <- parse_victorx3(input) }"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"Extract relevant data raw data export file generated software Perkin Elmer's \"Victor X3\" plate readers.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"parse_victorx3_shiny(input, growth.nm, fl.nm, fl2.nm)"},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"input dataframe created reading table file read_file growth.nm Name read corresponding growth rate fl.nm, fl2.nm Name read corresponding fluorescence fluorescence2 data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"list length two containing growth /fluorescence dataframes first second element, respectively. first column dataframes represents time vector.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/parse_victorx3_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract relevant data from a raw data export file generated from the software of Perkin Elmer's ","text":"","code":"if (FALSE) { input <- read_file(filename = system.file(\"victorx3_output.txt\", package = \"QurvE\") ) parsed <- parse_victorx3_shiny(input, \"Absorbance @ 600 (A)\", \"GFP (Counts)\") }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"Generic plot function gcBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"","code":"# S3 method for drBootSpline plot(   x,   pch = 19,   colData = 1,   colSpline = \"black\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"x drBootSpline object created growth.drBootSpline stored within grofit drFit object created growth.workflow growth.drFit, respectively. pch (Numeric) Shape raw data symbols. colData (Numeric Character) Color used plot raw data. colSpline (Numeric Character) Color used plot splines. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether dose-response curves parameter plots shall shown within window. ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"plot dose-response spline fits bootstrapping operation.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcBootSpline objects. — plot.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = \"test\",         control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8, nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.918348091863082 StDev :  0.0425346913635473  #> 90% CI:  0.916948700517221 90% CI:  0.919747483208943 #> 95% CI:  0.916680731961631 95% CI:  0.920015451764533 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.50514869451528  #> 90% CI:  1.50164546287979 90% CI:  1.50865683197458 #> 95% CI:  1.50097519036849 95% CI:  1.50932916320011 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.9183481    0.04253469        0.5196125     0.06548325 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.8483785          0.9883177          0.8349801           1.001716 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.505149                1.335856                1.686711 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                1.304768                1.722951 plot(TestRun, combine = TRUE)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFit objects. — plot.drFit","title":"Generic plot function for drFit objects. — plot.drFit","text":"codeplot.drFit calls codeplot.drFitSpline group used dose-response analysis","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFit objects. — plot.drFit","text":"","code":"# S3 method for drFit plot(   x,   combine = TRUE,   names = NULL,   exclude.nm = NULL,   pch = 16,   cex.point = 2,   basesize = 15,   colors = NULL,   lwd = 0.7,   ec50line = TRUE,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   log.y = FALSE,   log.x = FALSE,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFit objects. — plot.drFit","text":"x object class drFit, created growth.drFit. combine (Logical) Combine dose-response analysis results conditions single plot (TRUE) (FALSE). names (String vector strings) Define conditions combine single plot (combine = TRUE). Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. exclude.nm (String vector strings) Define conditions exclude plot (combine = TRUE). Partial matches sample/group names accepted. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. basesize (Numeric) Base font size. colors (Numeric character) Define colors different conditions. lwd (Numeric) Line width individual splines. ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis. x.title (Character) Optional: Provide title x-axis. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? log.x (Logical) Log-transform x-axis plot (TRUE) (FALSE)? plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFit objects. — plot.drFit","text":"One plot per condition tested dose-response analysis single plot showing conditions control = growth.control(dr.method = \"spline\") used growth.drFit combine = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFit objects. — plot.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = \"s\",                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,                  control = growth.control(dr.parameter = \"mu.spline\")) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1589746     0.003161504  0.1525180  0.1654313 #> 2 Test2 FALSE FALSE       0     0.1157718     0.001685082  0.1123394  0.1192042 #>       yEC50      test model #> 1 0.3290318 mu.spline  LL.5 #> 2 0.2339380 mu.spline  W1.3  plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitFL objects. — plot.drFitfl","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"codedrFitfl calls plot.drFitFLModel group used dose-response analysis dr.method = \"model\"","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"","code":"# S3 method for drFitfl plot(   x,   ec50line = TRUE,   log = c(\"xy\"),   pch = 1,   broken = TRUE,   bp,   n.xbreaks,   n.ybreaks,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"x object class drFit, created growth.drFit. ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. pch (Numeric) Shape raw data symbols. broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. colSpline (Numeric character) Spline line colour. colData (Numeric character) Contour color raw data circles. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. lwd (Numeric) Line width individual splines. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"One plot per condition tested dose-response analysis (fl.drFit control = fl.control(dr.method = \"model\")).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitFL objects. — plot.drFitfl","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = \"s\",              x_type = \"time\", norm_fl = TRUE,              dr.parameter = \"max_slope.spline\",              dr.method = \"model\",              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = control)  # Perform dose-response analysis with biosensor model drFitfl <- fl.drFit(flTable = res$flTable, control = control)  plot(drFitfl)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"Generic plot function drFitFLModel objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"","code":"# S3 method for drFitFLModel plot(   x,   ec50line = TRUE,   broken = TRUE,   bp,   n.xbreaks,   n.ybreaks,   log = c(\"xy\"),   pch = 1,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"x Object class drFitFLModel, created fl.drFitModel. ec50line (Logical) Show pointed horizontal vertical lines EC50 value (TRUE) (FALSE). broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input.#' @param pch (Numeric) Size raw data circles. log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. pch (Numeric) Symbol used plot data points. colSpline (Numeric Character) Color used plot splines. colData (Numeric Character) Color used plot raw data. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lwd (Numeric) Line width. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"plot biosensor dose-response model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitFLModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitFLModel objects. — plot.drFitFLModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = \"test\", control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.496 | yEC50: 3017 | fold change: 214.56 | leakiness: 28 #>  #>   print(summary(TestRun)) #>      yEC50    y.min    y.max      fc         K        n yEC50.orig    K.orig #> 1 3017.305 27.99478 6006.616 214.562 0.4963868 1.977209   3017.305 0.4963868 #>   test #> 1   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitModel objects. — plot.drFitModel","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"Generic plot function drFitModel objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"","code":"# S3 method for drFitModel plot(   x,   type = c(\"confidence\", \"all\", \"bars\", \"none\", \"obs\", \"average\"),   ec50line = TRUE,   add = FALSE,   broken = TRUE,   bp,   gridsize = 200,   log = \"x\",   n.xbreaks,   n.ybreaks,   x.lim,   y.lim,   pch = 1,   cex.point,   cex.axis = 1,   cex.lab = 1.3,   col = 1,   lwd = 2,   lty = 2,   xlab,   ylab,   legend = TRUE,   legendText,   legendPos,   cex.legend = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"x object class drFitModel, created growth.drFitModel. type (Character) Specify plot data. currently 5 options: \"average\" (averages fitted curve(s); default), \"none\" (fitted curve(s)), \"obs\" (data points), \"\" (data points fitted curve(s)), \"bars\" (averages fitted curve(s) model-based standard errors (see Details)), \"confidence\" (confidence bands fitted curve(s)). ec50line (Logical) Show pointed horizontal vertical lines EC50 values (TRUE) (FALSE). add (Logical) TRUE add already existing plot. broken (Logical) TRUE x axis broken provided axis logarithmic (using functionality CRAN package 'plotrix'). bp (Numeric) Specifying break point dose zero (amount stretching dose axis zero order create visual illusion logarithmic scale including 0). default base-10 value corresponding rounded value minimum log10 values positive dose values. argument working logarithmic dose axes. gridsize (Numeric) Number points grid used plotting fitted curves. log (Character) String contains '\"x\"' x axis logarithmic, '\"y\"' y axis logarithmic '\"xy\"' '\"yx\"' axes logarithmic. default \"x\". empty string \"\" yields original axes. n.xbreaks (Numeric) Number breaks x-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. n.ybreaks (Numeric) Number breaks y-axis (log-transformed). breaks generated using pretty. Thus, final number breaks can deviate user input. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. pch (Numeric) Symbol used plot data points. cex.point (Numeric) Size raw data points. cex.axis (Numeric) Font size axis annotations. cex.lab (Numeric) Font size axis titles. col (Logical vector colors) TRUE default colours used. FALSE (default) colors used. lwd (Numeric) Line width. lty (Numeric) Specify line type. xlab (Character) optional label x axis. ylab (Character) optional label y axis. legend (Logical) TRUE legend displayed. legendText (Character) Specify legend text (position upper right corner legend box). legendPos (Numeric) Vector length 2 giving position legend. cex.legend numeric specifying legend text size. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"plot dose-response model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"Christian Ritz, Florent Baty, Jens C. Streibig, Daniel Gerhard (2015). Dose-Response Analysis Using R. PLoS ONE 10(12): e0146021. DOI: 10.1371/journal.pone.0146021","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitModel objects. — plot.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = \"test\")  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper     yEC50      test #> e:1:50      4.326915      0.07556517   4.167487   4.486344 0.4660118 mu.linfit #>        model #> e:1:50  W1.3 plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for drFitSpline objects. — plot.drFitSpline","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"codeplot.drFitSpline generates spline fit plot response-parameter vs. concentration data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"","code":"# S3 method for drFitSpline plot(   x,   add = FALSE,   ec50line = TRUE,   log = \"\",   pch = 16,   colSpline = 1,   colData = 1,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 2,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"x object class drFitSpline, created growth.drFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.drBootSpline. ec50line (Logical) Show pointed horizontal vertical lines EC50 value (TRUE) (FALSE). log (\"x\", \"y\", \"xy\") Display x- y-axis logarithmic scale. pch (Numeric) Shape raw data symbols. colSpline (Numeric character) Spline line colour. colData (Numeric character) Contour color raw data circles. cex.point (Numeric) Size raw data symbols. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis. x.title (Character) Optional: Provide title x-axis. lwd (Numeric) Line width spline. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"plot nonparametric dose-response fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for drFitSpline objects. — plot.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = \"test\",                      control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.63700157762612 yEC50 0.468581728009329 #> --> Original scale  #> xEC50 4.13973528735413 yEC50 0.468581728009329 #>  #>   print(summary(TestRun)) #>       EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.637002 0.4685817  4.139735  0.4685817   NA plot(TestRun)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"plot.dr_parameter gathers parameters results dose-response analysis compares chosen parameter condition column plot. Error bars represent 95% confidence interval (shown > 2 replicates).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"","code":"# S3 method for dr_parameter plot(   x,   param = c(\"EC50\", \"EC50.Estimate\", \"y.max\", \"y.min\", \"fc\", \"K\", \"n\", \"yEC50\",     \"drboot.meanEC50\", \"drboot.meanEC50y\", \"EC50.orig\", \"yEC50.orig\"),   names = NULL,   exclude.nm = NULL,   basesize = 12,   reference.nm = NULL,   label.size = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"x grofit, drFit, drTable, flFitRes object obtained growth.workflow, growth.drFit, fl.drFit, fl.workflow. param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'y.max', 'y.min', 'fc', 'K', 'n' fluorescence dose-response analyses dr.type = 'model' control argument, 'EC50', 'yEC50', 'drboot.meanEC50', 'drboot.meanEC50y'. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. basesize (Numeric) Base font size. reference.nm (Character) Name reference condition, parameter values normalized. Partially matching strings tolerated long can uniquely identify condition. label.size (Numeric) Font size sample labels x-axis. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"column plot comparing selected parameter dose-response analysis tested conditions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dr_parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare calculated dose-response parameters between conditions. — plot.dr_parameter","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = \"s\",                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,             control = growth.control(dr.parameter = \"mu.spline\")) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      plot.dr_parameter(drFit, param = 'EC50')  # }"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fluorescence and growth over time — plot.dual","title":"Compare fluorescence and growth over time — plot.dual","text":"plot.dual creates two-panel plot fluorescence growth values shown time, allowing identification , e.g., expression patterns different growth stages.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fluorescence and growth over time — plot.dual","text":"","code":"# S3 method for dual plot(   x,   fluorescence = c(\"fl\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y.growth = FALSE,   log.y.fl = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim.growth = NULL,   y.lim.fl = NULL,   x.lim = NULL,   x.title = NULL,   y.title.growth = NULL,   y.title.fl = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fluorescence and growth over time — plot.dual","text":"x flFit, flFitRes, grodata object created flFit, fl.workflow read_data fluorescence (Character) Indicate, type fluorescence data displayed. IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y.growth (Logical) Log-transform y-axis growth plot (TRUE) (FALSE)? log.y.fl (Logical) Log-transform y-axis fluorescence plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim.growth (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.fl (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence plot vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence growth plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.growth (Character) Optional: Provide title y-axis growth plot. y.title.fl (Character) Optional: Provide title y-axis fluorescence plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare fluorescence and growth over time — plot.dual","text":"two-panel plot, showing raw fluorescence (fluorescence = \"fl\") normalized fluorescence (fluorescence = \"norm.fl\") time top panel, growth time bottom panel.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.dual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare fluorescence and growth over time — plot.dual","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot.dual(res, legend.ncol = 3, basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flBootSpline objects. — plot.flBootSpline","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"Generic plot function flBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"","code":"# S3 method for flBootSpline plot(   x,   pch = 1,   colData = 1,   deriv = TRUE,   colSpline = \"dodgerblue3\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"x Object class flBootSpline, created flBootSpline. pch (Numeric) Size raw data circles. colData (Numeric Character) Color used plot raw data. deriv (Logical) Show derivatives (.e., slope) time secondary plot (TRUE) (FALSE). colSpline (Numeric Character) Color used plot splines. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether growth curves parameter plots shall shown within window. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"single plot spline fits bootstrapping operation statistical distribution parameters combine = TRUE separate plots fits parameter distributions (combine = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flBootSpline objects. — plot.flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"s\", x_type = \"time\",                        nboot.fl = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"plot.flFitLinear shows results linear regression visualizes raw data, data points included fit, tangent obtained linear regression, lag time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"","code":"# S3 method for flFitLinear plot(   x,   log = \"\",   which = c(\"fit\", \"diagnostics\", \"fit_diagnostics\"),   pch = 21,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   color = \"firebrick3\",   y.lim = NULL,   x.lim = NULL,   plot = TRUE,   export = FALSE,   height = ifelse(which == \"fit\", 7, 5),   width = ifelse(which == \"fit\", 9, 9),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"x flFittedLinear object created flFitLinear stored within flFitRes flFit object created fl.workflow flFit, respectively. log (\"x\" \"y\") Display x- y-axis logarithmic scale. (\"fit\" \"diagnostics\") Display either results linear fit raw data statistical evaluation linear regression. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Line width. color (Character string) Enter color either name (e.g., red, blue, coral3) via hexadecimal code (e.g., #AE4371, #CCFF00FF, #0066FFFF). full list colors available name can found http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"plot linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"l\", x_type = \"time\",                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine different groups of samples into a single plot — plot.flFitRes","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"Visualize fluorescence, normalized fluorescence, spline fits multiple sample groups single plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"","code":"# S3 method for flFitRes plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   deriv = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )  # S3 method for flFit plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   deriv = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"x flFitRes, flFit, grodata object created fl.workflow containing fluorescence data. data.type (Character) Indicate, type fluorescence data displayed. IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? deriv (Logical) Show derivatives time separate panel plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using axisTicks(). Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis fluorescence curve plot. x.title (Character) Optional: Provide title x-axis fluorescence curve derivative plots. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"plot curves (nonparametric fits, raw fluorescence measurements, raw normalized fluorescence time) flFitRes object created fl.workflow, replicates combined group averages (mean = TRUE) (mean = FALSE). plot curves (raw fluorescence measurements raw normalized fluorescence time) flFit object flFit, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitRes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine different groups of samples into a single plot — plot.flFitRes","text":"","code":"# \\donttest{ # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  plot(res, legend.ncol = 3, basesize = 15)  # }  # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = fl.control(fit.opt = \"s\", suppress.messages = TRUE,              x_type = \"time\", norm_fl = TRUE))  plot(res, legend.ncol = 3, basesize = 15)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for flFitSpline objects. — plot.flFitSpline","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"plot.flFitSpline generates spline fit plot single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"","code":"# S3 method for flFitSpline plot(   x,   add = FALSE,   raw = TRUE,   slope = TRUE,   deriv = TRUE,   spline = TRUE,   log.y = FALSE,   basesize = 16,   pch = 1,   colData = 1,   colSpline = \"dodgerblue3\",   cex.point = 2,   lwd = 0.7,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   n.ybreaks = 6,   y.title = NULL,   x.title = NULL,   y.title.deriv = NULL,   plot = TRUE,   export = FALSE,   width = 8,   height = ifelse(deriv == TRUE, 8, 6),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"x Object class flFitSpline, created flFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.flBootSpline. raw (Logical) Display raw growth circles (TRUE) (FALSE). slope (Logical) Show slope maximum slope (TRUE) (FALSE). deriv (Logical) Show derivative (.e., slope) time secondary plot (TRUE) (FALSE). spline (Logical) add = TRUE: add current spline existing plot (FALSE). log.y (Logical) Log-transform y-axis (TRUE) (FALSE). basesize (Numeric) Base font size. pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. colSpline (Numeric character) Spline line colour. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis fluorescence curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis fluorescence curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using axisTicks(). Thus, final number breaks can deviate user input. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). width (Numeric) Width exported image inches. height (Numeric) Height exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"plot nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for flFitSpline objects. — plot.flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = \"TestFit\",                        control = fl.control(fit.opt = \"s\", x_type = \"time\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"Generic plot function gcBootSpline objects.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"","code":"# S3 method for gcBootSpline plot(   x,   pch = 1,   colData = 1,   deriv = TRUE,   colSpline = \"dodgerblue3\",   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   plot = TRUE,   export = FALSE,   height = 7,   width = 9,   out.dir = NULL,   combine = FALSE,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"x object class gcBootSpline, created growth.gcBootSpline. pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. deriv (Logical) Show derivatives (.e., slope) time secondary plot (TRUE) (FALSE). colSpline (Numeric character) Spline line colour. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . combine (Logical) Indicate whether growth curves parameter plots shall shown within window. ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"single plot spline growth fits bootstrapping operation statistical distribution growth parameters combine = TRUE separate plots growth fits parameter distributions (combine = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcBootSpline objects. — plot.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = \"TestFit\",               control = growth.control(fit.opt = \"s\", nboot.gc = 50))  plot(TestFit, combine = TRUE, lwd = 0.5)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"plot.gcFitLinear shows results linear regression log-transformed data visualizes raw data, data points included fit, tangent obtained linear regression, lag time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"","code":"# S3 method for gcFitLinear plot(   x,   log = \"y\",   which = c(\"fit\", \"diagnostics\", \"fit_diagnostics\"),   pch = 21,   cex.point = 1,   cex.lab = 1.5,   cex.axis = 1.3,   lwd = 2,   color = \"firebrick3\",   y.lim = NULL,   x.lim = NULL,   plot = TRUE,   export = FALSE,   height = ifelse(which == \"fit\", 7, 5),   width = ifelse(which == \"fit\", 9, 9),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"x gcFittedLinear object created growth.gcFitLinear stored within grofit gcFit object created growth.workflow growth.gcFit, respectively. log (\"x\" \"y\") Display x- y-axis logarithmic scale. (\"fit\" \"diagnostics\") Display either results linear fit raw data statistical evaluation linear regression. pch (Numeric) Shape raw data symbols. cex.point (Numeric) Size raw data points. cex.lab (Numeric) Font size axis titles. cex.axis (Numeric) Font size axis annotations. lwd (Numeric) Line width. color (Character string) Enter color either name (e.g., red, blue, coral3) via hexadecimal code (e.g., #AE4371, #CCFF00FF, #0066FFFF). full list colors available name can found http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis vector form c(l, u). x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"plot linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFittedLinear objects. Plot the results of a linear regression on ln-transformed data — plot.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"l\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFitModel objects. — plot.gcFitModel","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"Plot results parametric model fit growth vs. time data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"","code":"# S3 method for gcFitModel plot(   x,   raw = TRUE,   pch = 1,   colData = 1,   equation = TRUE,   eq.size = 1,   colModel = \"forestgreen\",   basesize = 16,   cex.point = 2,   lwd = 0.7,   x.lim = NULL,   y.lim = NULL,   n.ybreaks = 6,   plot = TRUE,   export = FALSE,   height = 6,   width = 8,   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"x gcFittedModel object created growth.gcFitModel stored within grofit gcFit object created growth.workflow growth.gcFit, respectively. raw (Logical) Show raw data within plot (TRUE) (FALSE). pch (Numeric) Symbol used plot data points. colData (Numeric Character) Color used plot raw data. equation (Logical) Show equation fitted model within plot (TRUE) (FALSE). eq.size (Numeric) Provide value scale size displayed equation. colModel (Numeric Character) Color used plot fitted model. basesize (Numeric) Base font size. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated ggplot2 plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"plot parametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFitModel objects. — plot.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"m\")) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  plot(TestFit, basesize = 18, eq.size = 1.5) #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale. #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"codeplot.gcFitSpline generates spline fit plot single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"","code":"# S3 method for gcFitSpline plot(   x,   add = FALSE,   raw = TRUE,   slope = TRUE,   deriv = TRUE,   spline = TRUE,   log.y = TRUE,   pch = 1,   colData = 1,   colSpline = \"dodgerblue3\",   basesize = 16,   cex.point = 2,   lwd = 0.7,   y.lim = NULL,   x.lim = NULL,   y.lim.deriv = NULL,   n.ybreaks = 6,   y.title = NULL,   x.title = NULL,   y.title.deriv = NULL,   plot = TRUE,   export = FALSE,   width = 8,   height = ifelse(deriv == TRUE, 8, 6),   out.dir = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"x object class gcFitSpline, created growth.gcFitSpline. add (Logical) Shall fitted spline added existing plot? TRUE used internally plot.gcBootSpline. raw (Logical) Display raw growth circles (TRUE) (FALSE). slope (Logical) Show slope maximum growth rate (TRUE) (FALSE). deriv (Logical) Show derivative (.e., slope) time secondary plot (TRUE) (FALSE). spline (Logical) add = TRUE: add current spline existing plot (FALSE). log.y (Logical) Log-transform y-axis (TRUE) (FALSE). pch (Numeric) Symbol used plot data points. colData (Numeric character) Contour color raw data circles. colSpline (Numeric character) Spline line colour. basesize (Numeric) Base font size. cex.point (Numeric) Size raw data points. lwd (Numeric) Spline line width. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). width (Numeric) Width exported image inches. height (Numeric) Height exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . ... arguments refine generated base R plot (add = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"plot nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for gcFitSpline objects. — plot.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform spline fit TestFit <- growth.gcFitSpline(time, data, gcID = \"TestFit\",                  control = growth.control(fit.opt = \"s\"))  plot(TestFit)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a matrix of growth curve panels — plot.grid","title":"Plot a matrix of growth curve panels — plot.grid","text":"plot.grid takes grofit flFitRes object returns facet grid individual growth fluorescence plots","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a matrix of growth curve panels — plot.grid","text":"","code":"# S3 method for grid plot(   x,   data.type = c(\"spline\", \"raw\", \"norm.fl\"),   param = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu2.linfit\",     \"lambda2.linfit\", \"mu.model\", \"lambda.model\", \"A.model\", \"A.orig.model\", \"dY.model\",     \"dY.orig.model\", \"tD.linfit\", \"tD2.linfit\", \"tD.spline\", \"tD2.spline\", \"mu.spline\",     \"lambda.spline\", \"A.spline\", \"dY.spline\", \"integral.spline\", \"mu2.spline\",     \"lambda2.spline\", \"mu.bt\", \"lambda.bt\", \"A.bt\", \"integral.bt\", \"max_slope.linfit\",     \"max_slope.spline\"),   pal = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\", \"Cyan\",     \"Brown\", \"Mint\"),   invert.pal = FALSE,   IDs = NULL,   sort_by_ID = FALSE,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   mean = TRUE,   log.y = TRUE,   n.ybreaks = 6,   sort_by_conc = TRUE,   nrow = NULL,   basesize = 20,   y.lim = NULL,   x.lim = NULL,   legend.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 1.1,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a matrix of growth curve panels — plot.grid","text":"x grofit flFitRes object created growth.workflow codefl.workflow containing spline fits. data.type (Character) Plot either raw data (data.type = \"raw\") spline fit results param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'mu.linfit', 'lambda.linfit', 'dY.linfit', '.linfit', 'mu.model', 'lambda.model', '.model', 'mu.spline', 'lambda.spline', '.spline', 'dY.spline', 'integral.spline', 'mu.bt', 'lambda.bt', '.bt', 'integral.bt' pal (Character string) Choose one 'Green',   'Orange',  'Purple',  'Magenta', 'Grey', 'Blue', 'Grey', 'Red', 'Cyan', 'Brown', 'Mint' visualize value parameter chosen param sample condition. invert.pal (Logical) Shall colors chosen pal inverted (TRUE) FALSE? IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. order strings within vector defines order samples within grid. sort_by_ID (Logical) Shall samples/conditions ordered entered IDs (TRUE) alphabetically (FALSE)? names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)?#' n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. sort_by_conc (Logical) Shall samples/conditions sorted concentrations rows groups columns? nrow (Numeric) Defines number rows grid sort_by_conc FALSE. basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. legend.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds color scale applied param vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. lwd (Numeric) Line width individual plots. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a matrix of growth curve panels — plot.grid","text":"plot matrix growth curves (raw measurements nonparametric fits) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a matrix of growth curve panels — plot.grid","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        suppress.messages = TRUE,                        parallelize = FALSE)   plot.grid(res, param = \"mu.spline\")"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"plot.grodata calls plot.grofit plot.flFitRes based chosen data.type, respectively.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"","code":"# S3 method for grodata plot(   x,   data.type = c(\"growth\", \"fl\", \"norm.fl\"),   IDs = NULL,   names = NULL,   conc = NULL,   mean = TRUE,   exclude.nm = NULL,   exclude.conc = NULL,   log.y = FALSE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"x grodata object created read_data parse_data. data.type (Character) Plot either raw growth (data.type = \"growth\"), raw fluorescence (data.type = \"fl\"), fluorescence normalized growth (data.type = \"norm.fl\"). IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"plot growth curves (raw measurements) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grodata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for grodata objects. Plots raw growth, fluorescence, or normalized fluorescence data of multiple samples or conditions. — plot.grodata","text":"","code":"# Create random growth data sets rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  # Create dataframe with both data sets and a single time vector time <- as.data.frame(matrix(t(c(\"Time\",NA,NA, rnd.data1$time[1,])),nrow=1),              stringsAsFactors=FALSE) colnames(time) <- colnames(rnd.data1$data) data <- rbind(time, rnd.data1$data, rnd.data2$data)   # Create a grodata object grodata <- read_data(data.growth = data, data.format = \"row\") #> Sample data are stored in rows. If they are stored in column format, please run read_data() with data.format = 'col'.  plot(grodata, exclude.nm = \"Test1\", legend.ncol = 4)"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"plot.grofit extracts spline fits subset samples grofit object calculates averages standard deviations conditions replicates combines single plot.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"","code":"# S3 method for grofit plot(   x,   ...,   data.type = c(\"spline\", \"raw\"),   IDs = NULL,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   mean = TRUE,   log.y = TRUE,   deriv = TRUE,   n.ybreaks = 6,   colors = NULL,   color_groups = TRUE,   group_pals = c(\"Green\", \"Orange\", \"Purple\", \"Magenta\", \"Grey\", \"Blue\", \"Grey\", \"Red\",     \"Cyan\", \"Brown\", \"Mint\"),   basesize = 20,   y.lim = NULL,   x.lim = NULL,   y.title = NULL,   x.title = NULL,   y.lim.deriv = NULL,   y.title.deriv = NULL,   lwd = 1.1,   legend.position = \"bottom\",   legend.ncol = 2,   plot = TRUE,   export = FALSE,   height = NULL,   width = NULL,   out.dir = NULL,   out.nm = NULL )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"x grofit object created growth.workflow containing spline fits. ... (optional) Additional grofit objects created separate workflows joint plotting single graph. data.type (Character) Plot either raw data (data.type = \"raw\") spline fit results IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. mean (Logical) Display mean standard deviation groups replicates (TRUE) plot sample individually (FALSE)? log.y (Logical) Log-transform y-axis plot (TRUE) (FALSE)? deriv (Logical) Show derivatives time separate panel plot (TRUE) (FALSE)? n.ybreaks (Numeric) Number breaks y-axis. breaks generated using scales::pretty_breaks. Thus, final number breaks can deviate user input. colors (vector strings) Define color palette used draw plots. NULL, default palettes chosen based number groups/samples within plot. Note: number provided colors least match number groups/samples. color_groups (Logical) Shall samples within group different concentrations shown different shades color? group_pals (String vector) Define colors used display sample groups identical concentrations. number selected color palettes must least number displayed groups. order chosen palettes corresponds oder conditions legend. Available options: \"Green\", \"Oranges\", \"Purple\", \"Cyan\", \"Grey\", \"Red\", \"Blue\", \"Magenta\". basesize (Numeric) Base font size. y.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis growth curve plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. x.lim (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds x-axis growth curve derivative plots vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title (Character) Optional: Provide title y-axis growth curve plot. x.title (Character) Optional: Provide title x-axis growth curve derivative plots. y.lim.deriv (Numeric vector two elements) Optional: Provide lower (l) upper (u) bounds y-axis derivative plot vector form c(l, u). lower upper bound fixed, provide c(l, NA) c(NA, u), respectively. y.title.deriv (Character) Optional: Provide title y-axis derivative plot. lwd (Numeric) Line width individual plots. legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"plot growth curves (raw measurements nonparametric fits) dataset, replicates combined group averages (mean = TRUE) (mean = FALSE).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.grofit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic plot function for grofit objects. Combine different groups of samples into a single plot — plot.grofit","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        suppress.messages = TRUE,                        parallelize = FALSE)   plot(res, names = \"Test1\", legend.ncol = 4) # Show only samples for condition \"Test1\""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare growth parameters between samples or conditions — plot.parameter","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"plot.parameter gathers physiological parameters results growth fit analysis compares chosen parameter sample condition column plot. Error bars represent 95% confidence interval (shown > 2 replicates).","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"","code":"# S3 method for parameter plot(   x,   param = c(\"mu.linfit\", \"lambda.linfit\", \"dY.linfit\", \"A.linfit\", \"mu2.linfit\",     \"lambda2.linfit\", \"mu.model\", \"lambda.model\", \"A.model\", \"A.orig.model\", \"dY.model\",     \"dY.orig.model\", \"tD.linfit\", \"tD2.linfit\", \"tD.spline\", \"tD2.spline\", \"mu.spline\",     \"lambda.spline\", \"A.spline\", \"dY.spline\", \"integral.spline\", \"mu2.spline\",     \"lambda2.spline\", \"mu.bt\", \"lambda.bt\", \"A.bt\", \"integral.bt\", \"max_slope.linfit\",     \"max_slope.spline\"),   IDs = NULL,   names = NULL,   conc = NULL,   exclude.nm = NULL,   exclude.conc = NULL,   reference.nm = NULL,   reference.conc = NULL,   order_by_conc = FALSE,   colors = NULL,   basesize = 12,   label.size = NULL,   shape.size = 2.5,   legend.position = \"right\",   legend.ncol = 1,   plot = TRUE,   export = FALSE,   height = 7,   width = NULL,   out.dir = NULL,   out.nm = NULL,   ... )"},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"x grofit, gcFit, gcTable object obtained growth.workflow growth.gcFit. param (Character) parameter used compare different sample groups. name column containing numeric values gcTable (stored within grofit gcFit objects) can used input. Useful options : 'mu.linfit', 'lambda.linfit', 'dY.linfit', '.linfit', 'mu.model', 'lambda.model', '.model', 'mu.spline', 'lambda.spline', '.spline', 'dY.spline', 'integral.spline', 'mu.bt', 'lambda.bt', '.bt', 'integral.bt' IDs (String vector strings) Define samples groups (mean = TRUE) combine single plot based exact matches entries label condition columns grofit$expdesign. names (String vector strings) Define groups combine single plot. Partial matches sample/group names accepted. NULL, samples considered. Note: Ensure use unique substrings extract groups interest. name one condition included entirety within name conditions, extracted individually. conc (Numeric numeric vector) Define concentrations combine single plot. NULL, concentrations considered. Note: Ensure use unique concentration values extract groups interest. concentration value one condition included entirety within name conditions (e.g., dataset contains '1', '10', '100', code = 10 select '10 '100'), extracted individually. exclude.nm (String vector strings) Define groups exclude plot. Partial matches sample/group names accepted. exclude.conc (Numeric numeric vector) Define concentrations exclude plot. reference.nm (Character) Name reference condition, parameter values normalized. Partially matching strings tolerated long can uniquely identify condition. reference.conc (Numeric) Concentration reference condition, parameter values normalized. order_by_conc (Logical) Shall columns sorted order ascending concentrations (TRUE) sample groups FALSE? colors (vector strings) Define color palette used draw columns. NULL, default palettes chosen. Note: number provided colors least match number groups. basesize (Numeric) Base font size. label.size (Numeric) Font size sample labels x-axis. shape.size (Numeric) size symbols indicating replicate values. Default: 2.5 legend.position (Character) Position legend. One \"bottom\", \"top\", \"left\", \"right\". legend.ncol (Numeric) Number columns legend. plot (Logical) Show generated plot Plots pane (TRUE) (FALSE). FALSE, ggplot object returned. export (Logical) Export generated plot PDF PNG files (TRUE) (FALSE). height (Numeric) Height exported image inches. width (Numeric) Width exported image inches. .dir (Character) Name path folder exported files stored. NULL, \"Plots\" folder created current working directory store files . .nm (Character) name PDF PNG files export = TRUE. NULL, name automatically generated including chosen parameter. ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"column plot comparing selected growth parameter tested conditions.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/plot.parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare growth parameters between samples or conditions — plot.parameter","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\") rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = \"Test2\")  rnd.data <- list() rnd.data[[\"time\"]] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[[\"data\"]] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)   plot.parameter(res,                param = \"mu.spline\",                legend.ncol = 4,                legend.position = \"bottom\",                basesize = 15,                label.size = 11)"},{"path":"https://nicwir.github.io/QurvE/reference/QurvE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","title":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","text":"High-throughput analysis growth curves fluorescence data using three methods: linear regression, growth model fitting, smooth spline fit. Analysis dose-response relationships via smoothing splines dose-response models. Complete data analysis workflows can executed single step via user-friendly wrapper functions. results workflows summarized detailed reports well intuitively navigable 'R' data containers. 'shiny' application provides access features without requiring programming knowledge.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/QurvE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"QurvE: Robust and User-Friendly Analysis of Growth and Fluorescence Curves — QurvE-package","text":"Maintainer: Nicolas T. Wirth mail.nicowirth@gmail.com (ORCID) [copyright holder] Authors: Jonathan Funk funk.jonathan21@gmail.com (Co-developer shiny app.) contributors: Matthias Kahm (Author 'grofit' package, whose general data structure adopted QurvE.) [contributor] Maik Kschischo (Author 'grofit' package, whose general data structure adopted QurvE.) [contributor] Thomas Petzoldt thomas.petzoldt@tu-dresden.de (ORCID) (Creator package 'growthrates', whose function calculating linear regressions served template QurvE.) [contributor] Andrew Stein andy.stein@gmail.com (Creator 'xgxr' package QurvE adopted code plot axis ticks log10 scale.) [contributor] Michael W. Kearney kearneymw@missouri.edu (Creator 'tfse' package QurvE adopted match_arg function.) [contributor] Santiago . Hurtado santih@carina.fcaglp.unlp.edu.ar (Creator 'RobustLinearReg' package QurvE adopted Theil Sehn Regression method.) [contributor] Mark Heckmann (Creator 'zipFastener' function; source: https://ryouready.wordpress.com/2009/03/27/r-zip-fastener--two-data-frames-combining-rows--columns--two-dataframes---alternating-manner/) [contributor] Nicholas Hamilton (Creator 'colFmt' function.) [contributor] Evan Friedland (Creator 'inflect' function.) [contributor] Heather Turner (Creator 'base_breaks' function.) [contributor] Georgi N. Boshnakov georgi.boshnakov@manchester.ac.uk (Creator 'gbRd' package functions used display function help pages within shiny app.) [contributor]","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":null,"dir":"Reference","previous_headings":"","what":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"function calls baranyi function generate curves time zero t adds random noise x- y-axes. three growth parameters given input values slightly changed produce different growth curves. resulting datasets can used test growth.workflow function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"","code":"rdm.data(d, y0 = 0.05, tmax = 24, mu = 0.6, lambda = 5, A = 3, label = \"Test1\")"},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"d Numeric value, number data sets. d vector, first entry used. y0 Numeric value, start growth. t vector, first entry used. tmax Numeric value, number time points per data set. t vector, first entry used. mu Numeric value, maximum slope. mu vector, first entry used. lambda Numeric value, lag-phase. lambda vector, first entry used. Numeric value, maximum growth. vector, first entry used. label Character string, condition label  label vector, first entry used.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"list containing simulated data three tests (e.g., 'organisms'): time numeric matrix size dxt, row represent time points growth data simulated stored row data. data data.frame size dx(3+t), 1. column, character experiment identifier; 2. column: Replicate number; 3. column: concentration substrate compound experiment obtained; 4.-(3+t). column: growth data corresponding time points time.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"Matthias Kahm, Guido Hasenbrink, Hella Lichtenberg-Frate, Jost Ludwig, Maik Kschischo (2010). grofit: Fitting Biological Growth Curves R. Journal Statistical Software, 33(7), 1-21. DOI: 10.18637/jss.v033.i07","code":""},{"path":"https://nicwir.github.io/QurvE/reference/rdm.data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The function calls the baranyi function to generate curves between time zero and t and adds some random noise to the x- and y-axes. The three growth parameters given as input values will be slightly changed to produce different growth curves. The resulting datasets can be used to test the growth.workflow function. — rdm.data","text":"","code":"# Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # \\donttest{ # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,              control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1582602     0.002521583  0.1531239  0.1633964 #> 2 Test2 FALSE FALSE       0     0.1137851     0.001906499  0.1099017  0.1176685 #>       yEC50      test model #> 1 0.3311474 mu.spline  W1.3 #> 2 0.2367567 mu.spline  W1.3 plot(drFit)   # }"},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read growth and fluorescence data in table format — read_data","title":"Read growth and fluorescence data in table format — read_data","text":"read_data reads table files R dataframe objects containing growth fluorescence data extracts datasets, sample group information, performs blank correction, applies data transformation (calibration), combines technical replicates.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read growth and fluorescence data in table format — read_data","text":"","code":"read_data(   data.growth = NA,   data.fl = NA,   data.fl2 = NA,   data.format = \"col\",   csvsep = \";\",   dec = \".\",   csvsep.fl = \";\",   dec.fl = \".\",   csvsep.fl2 = \";\",   dec.fl2 = \".\",   sheet.growth = 1,   sheet.fl = 1,   sheet.fl2 = 1,   fl.normtype = c(\"growth\", \"fl2\"),   subtract.blank = TRUE,   convert.time = NULL,   calib.growth = NULL,   calib.fl = NULL,   calib.fl2 = NULL )"},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read growth and fluorescence data in table format — read_data","text":"data.growth R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing growth data. first three table rows contain sample description replicate number (optional: followed letter indicate technical replicates) concentration value (optional) data.fl (optional) R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing fluorescence data. Table layout must mimic data.growth. data.fl2 (optional) R dataframe object table file extension '.xlsx', '.xls', '.csv', '.tsv', '.txt' containing measurements second fluorescence channel (used normalize fluorescence data). Table layout must mimic data.growth. data.format (Character) \"col\" samples columns, \"row\" samples rows. Default: \"col\" csvsep (Character) separator used CSV file storing growth data (ignored file types). Default: \";\" dec (Character) decimal separator used CSV, TSV TXT file storing growth data. Default: \".\" csvsep.fl, csvsep.fl2 (Character) separator used CSV file storing fluorescence data (ignored file types). Default: \";\" dec.fl, dec.fl2 (Character) decimal separator used CSV, TSV TXT file storing fluorescence data. Default: \".\" sheet.growth, sheet.fl, sheet.fl2 (Numeric Character) Number name sheet respective data type XLS XLSX files (optional). fl.normtype (Character string) Normalize fluorescence values either diving 'growth' fluorescence2 values ('fl2'). subtract.blank (Logical) Shall blank values subtracted values within experiment (TRUE, default) (FALSE). convert.time (NULL string) Convert time values formula provided form 'y = function(x)'. example: convert.time = 'y = 24 * x' calib.growth, calib.fl, calib.fl2 (Character NULL) Provide equation form 'y = function(x)' (example: 'y = x^2 * 0.3 - 0.5') convert growth fluorescence values. can used , e.g., convert plate reader absorbance values OD600 fluorescence intensity molecule concentrations. Caution!: utilizing calibration, carefully consider whether blanks subtracted determine calibration selecting input subtract.blank = TRUE.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read growth and fluorescence data in table format — read_data","text":"R list object class grodata containing time matrix, dataframes growth fluorescence data (applicable), experimental design table. grodata object can directly used run growth.workflow/fl.workflow , together growth.control/fl.control object, growth.gcFit/flFit. time Matrix raw time values extracted data.growth. growth Dataframe raw growth values sample identifiers extracted data.growth. fluorescence Dataframe raw fluorescence values sample identifiers extracted data.fl. NA, fluorescence data provided. norm.fluorescence fluorescence data divided growth values. NA, fluorescence data provided. expdesign Experimental design table created first three identifier rows/columns (see argument data.format) (data.growth.","code":""},{"path":[]},{"path":"https://nicwir.github.io/QurvE/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read growth and fluorescence data in table format — read_data","text":"","code":"# Load CSV file containing only growth data data_growth <- read_data(data.growth = system.file(\"2-FMA_toxicity.csv\",                          package = \"QurvE\"), csvsep = \";\" ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Load XLSX file containing both growth and fluorescence data data_growth_fl <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                             sheet.growth = \"OD\",                             data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                             sheet.fl = 2) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'."},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"read_file automatically detects format file provided filename calls appropriate function read table file.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"","code":"read_file(filename, csvsep = \";\", dec = \".\", sheet = 1)"},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"filename (Character) Name path table file read. Can type CSV, XLS, XLSX, TSV, TXT. csvsep (Character) separator used CSV file (ignored file types). dec (Character) decimal separator used CSV, TSV TXT files. sheet (Numeric Character) Number name sheet XLS XLSX files (optional). Default: \";\"","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"dataframe object headers first row.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/read_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call the appropriate function required to read a table file and return the table as a dataframe object. — read_file","text":"","code":"input <- read_file(filename = system.file(\"2-FMA_toxicity.csv\", package = \"QurvE\"), csvsep = \";\" )"},{"path":"https://nicwir.github.io/QurvE/reference/richards.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","title":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","text":"Calculate values Richards growth model given time points growth parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/richards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","text":"","code":"richards(time, A, mu, lambda, addpar)"},{"path":"https://nicwir.github.io/QurvE/reference/richards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","text":"time vector time values Maximum growth value mu Growth rate lambda Lag time addpar additional parameters (: Shape exponent \\(\\nu\\).)","code":""},{"path":"https://nicwir.github.io/QurvE/reference/richards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","text":"vector growth values","code":""},{"path":"https://nicwir.github.io/QurvE/reference/richards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the values of the Richards growth model for given time points and growth parameters. — richards","text":"","code":"time <- seq(from = 0, to = 24, by = 0.25) growth <- richards(time, A = 3, mu=0.6, lambda = 3, addpar = 0.01)  plot(time, growth)"},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny QurvE App — run_app","title":"Run Shiny QurvE App — run_app","text":"Run Shiny QurvE App","code":""},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny QurvE App — run_app","text":"","code":"run_app()"},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Shiny QurvE App — run_app","text":"Launches browser shiny app","code":""},{"path":"https://nicwir.github.io/QurvE/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Shiny QurvE App — run_app","text":"","code":"if(interactive()){ # Run the app run_app() }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drBootSpline objects — summary.drBootSpline","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"Generic summary function drBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"","code":"# S3 method for drBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"object object class drBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"dataframe statistical parameters extracted dose-response bootstrapping analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drBootSpline objects — summary.drBootSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+stats::rnorm(19)/50, 0)  TestRun <- growth.drBootSpline(conc, response, drID = 'test',         control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8, nboot.dr = 50)) #> === Bootstrapping of dose response curve ========== #> --- EC 50 ----------------------------------------- #>  #> Mean  :  0.910183702046794 StDev :  0.0630126397737817  #> 90% CI:  0.908110586198236 90% CI:  0.912256817895351 #> 95% CI:  0.907713606567661 95% CI:  0.912653797525926 #>  #>  #> --- EC 50 in original scale ----------------------- #>  #> Mean  :  1.48477895044018  #> 90% CI:  1.47963305168301 90% CI:  1.48993552830732 #> 95% CI:  1.47864888323053 95% CI:  1.49092417821746 #>   print(summary(TestRun)) #>   drboot.meanEC50 drboot.sdEC50 drboot.meanEC50y drboot.sdEC50y #> 1       0.9101837    0.06301264         0.532356      0.0750647 #>   drboot.ci90EC50.lo drboot.ci90EC50.up drboot.ci95EC50.lo drboot.ci95EC50.up #> 1          0.8065279           1.013839          0.7866789           1.033688 #>   drboot.meanEC50.orig drboot.ci90EC50.orig.lo drboot.ci90EC50.orig.up #> 1             1.484779                1.240117                1.756163 #>   drboot.ci95EC50.orig.lo drboot.ci95EC50.orig.up #> 1                1.196091                1.811417"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFit objects — summary.drFit","title":"Generic summary function for drFit objects — summary.drFit","text":"Generic summary function drFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFit objects — summary.drFit","text":"","code":"# S3 method for drFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFit objects — summary.drFit","text":"object object class drFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFit objects — summary.drFit","text":"dataframe parameters samples extracted dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFit objects — summary.drFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE))  # Perform dose-response analysis drFit <- growth.drFit(gcTable = gcFit$gcTable,                  control = growth.control(dr.parameter = 'mu.spline')) #>  #> === EC 50 Estimation ============================== #> --------------------------------------------------- #> --> Checking data ... #> --> Number of distinct tests found: 2  #> --> Valid datasets per test:  #>       TestID Number #>       Test1  35     #>       Test2  35      # Inspect results summary(drFit) #>    Test log.x log.y Samples EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper #> 1 Test1 FALSE FALSE       0     0.1557239     0.002397640  0.1508401  0.1606077 #> 2 Test2 FALSE FALSE       0     0.1184367     0.001847953  0.1146726  0.1222009 #>       yEC50      test model #> 1 0.3324973 mu.spline  W1.3 #> 2 0.2333540 mu.spline  W1.3 # }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitfl objects — summary.drFitfl","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"Generic summary function drFitfl objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"","code":"# S3 method for drFitfl summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"object object class drFitfl ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"dataframe parameters samples extracted dose-response analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitfl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitfl objects — summary.drFitfl","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Define fit controls control <- fl.control(fit.opt = 's',              x_type = 'time', norm_fl = TRUE,              dr.parameter = 'max_slope.spline',              dr.method = 'model',              suppress.messages = TRUE)  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = control)  # Perform dose-response analysis with biosensor model drFitfl <- fl.drFit(flTable = res$flTable, control = control)  summary(drFitfl) #>             Test log.x log.y    yEC50    y.min    y.max        fc          K #> 1 pSEVA634rκ∙GFP FALSE FALSE 205.9582 64.17578 347.7406  5.418565 0.01018009 #> 2  pSEVA634r∙GFP FALSE FALSE 190.4523 30.77274 350.1318 11.377987 0.04563572 #> 3   pSEVA634∙GFP FALSE FALSE 446.4530 92.26689 800.6390  8.677425 0.03285861 #>           n yEC50.orig     K.orig             test #> 1 0.9764875   205.9582 0.01018009 max_slope.spline #> 2 2.7157643   190.4523 0.04563572 max_slope.spline #> 3 1.1757148   446.4530 0.03285861 max_slope.spline"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"Generic summary function drFitFLModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"","code":"# S3 method for drFitFLModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"object object class drFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"dataframe biosensor response parameters.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitFLModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitFLModel objects — summary.drFitFLModel","text":"","code":"# Create concentration values via a serial dilution conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10)  # Simulate response values via biosensor equation response <- biosensor.eq(conc, y.min = 110, y.max = 6000, K = 0.5, n = 2) +             0.01*6000*rnorm(10)  # Perform fit TestRun <- fl.drFitModel(conc, response, drID = 'test', control = fl.control()) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> sensitivity: 0.509 | yEC50: 3056 | fold change: 51.12 | leakiness: 117.3 #>  #>   print(summary(TestRun)) #>     yEC50    y.min    y.max       fc         K        n yEC50.orig    K.orig #> 1 3056.18 117.2654 5995.094 51.12414 0.5091937 2.023208    3056.18 0.5091937 #>   test #> 1   NA"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitModel objects — summary.drFitModel","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"Generic summary function drFitModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"","code":"# S3 method for drFitModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"object object class drFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"dataframe parameters extracted dose-response analysis single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitModel objects — summary.drFitModel","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitModel(conc, response, drID = 'test')  print(summary(TestRun)) #>        EC50.Estimate EC50.Std..Error EC50.Lower EC50.Upper     yEC50      test #> e:1:50      4.262904       0.0880026   4.077235   4.448573 0.4671013 mu.linfit #>        model #> e:1:50  W1.3"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for drFitSpline objects — summary.drFitSpline","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"Generic summary function drFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"","code":"# S3 method for drFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"object object class drFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"dataframe parameters extracted dose-response analysis single sample.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.drFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for drFitSpline objects — summary.drFitSpline","text":"","code":"conc <- c(0, rev(unlist(lapply(1:18, function(x) 10*(2/3)^x))),10) response <- c(1/(1+exp(-0.7*(4-conc[-20])))+rnorm(19)/50, 0)  TestRun <- growth.drFitSpline(conc, response, drID = 'test',               control = growth.control(log.x.dr = TRUE, smooth.dr = 0.8)) #>  #>  #> === Dose response curve estimation ================ #> --- EC 50 ----------------------------------------- #> --> test #> xEC50 1.58659537069041 yEC50 0.492257084636346 #> --> Original scale  #> xEC50 3.88708186967626 yEC50 0.492257084636346 #>  #>   print(summary(TestRun)) #>       EC50     yEC50 EC50.orig yEC50.orig test #> 1 1.586595 0.4922571  3.887082  0.4922571   NA"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flBootSpline objects — summary.flBootSpline","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"Generic summary function flBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"","code":"# S3 method for flBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"object object class flBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"dataframe statistical parameters extracted dose-response bootstrapping analysis.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flBootSpline objects — summary.flBootSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flBootSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time',                        nboot.fl = 50))  summary(TestFit) #>       max_slope.bt        lambda.bt             A.bt            dY.bt #> 1 242.614299112259 15.0180445923272 7568.68413269054 6042.88655249566 #>        integral.bt  stdmax_slope.bt      stdlambda.bt        stdA.bt #> 1 149411.201272125 2.52072664788996 0.272647932745985 46.39442864269 #>          stddY.bt   stdintegral.bt reliable_fit.bt   ci90.mu.bt.lo #> 1 69.410525231141 2553.37583038067            TRUE 238.46770377648 #>      ci90.mu.bt.up ci90.lambda.bt.lo ci90.lambda.bt.up     ci90.A.bt.lo #> 1 246.760894448038  14.5695387429601  15.4665504416943 7492.36529757332 #>       ci90.A.bt.up ci90.integral.bt.lo ci90.integral.bt.up    ci95.mu.bt.lo #> 1 7645.00296780777    145210.898031148    153611.504513101 237.673674882395 #>      ci95.mu.bt.up ci95.lambda.bt.lo ci95.lambda.bt.up     ci95.A.bt.lo #> 1 247.554923342123  14.4836546441451  15.5524345405093 7477.75105255087 #>       ci95.A.bt.up ci95.integral.bt.lo ci95.integral.bt.up #> 1 7659.61721283021    144406.584644578    154415.817899671"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFit objects — summary.flFit","title":"Generic summary function for flFit objects — summary.flFit","text":"Generic summary function flFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFit objects — summary.flFit","text":"","code":"# S3 method for flFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFit objects — summary.flFit","text":"object object class flFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFit objects — summary.flFit","text":"dataframe parameters extracted fits workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFit objects — summary.flFit","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run curve fitting workflow res <- flFit(fl_data = input$norm.fluorescence,              time = input$time,              parallelize = FALSE,              control = fl.control(fit.opt = 's', suppress.messages = TRUE,              x_type = 'time', norm_fl = TRUE, nboot.fl = 20))  summary(res) #>            TestId AddId concentration reliability_tag log.x.spline log.y.spline #> 1    pSEVA634∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 2   pSEVA634r∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 3  pSEVA634rκ∙GFP  <NA>             0            TRUE        FALSE        FALSE #> 4    pSEVA634∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 5   pSEVA634r∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 6  pSEVA634rκ∙GFP  <NA>          0.01            TRUE        FALSE        FALSE #> 7    pSEVA634∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 8   pSEVA634r∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 9  pSEVA634rκ∙GFP  <NA>          0.05            TRUE        FALSE        FALSE #> 10   pSEVA634∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 11  pSEVA634r∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 12 pSEVA634rκ∙GFP  <NA>           0.1            TRUE        FALSE        FALSE #> 13   pSEVA634∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 14  pSEVA634r∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 15 pSEVA634rκ∙GFP  <NA>           0.2            TRUE        FALSE        FALSE #> 16   pSEVA634∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 17  pSEVA634r∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 18 pSEVA634rκ∙GFP  <NA>           0.5            TRUE        FALSE        FALSE #> 19   pSEVA634∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 20  pSEVA634r∙GFP  <NA>             1            TRUE        FALSE        FALSE #> 21 pSEVA634rκ∙GFP  <NA>             1            TRUE        FALSE        FALSE #>    log.x.lin log.y.lin nboot.fl max_slope.linfit lambda.linfit dY.linfit #> 1      FALSE     FALSE       20                0          <NA>      <NA> #> 2      FALSE     FALSE       20                0          <NA>      <NA> #> 3      FALSE     FALSE       20                0          <NA>      <NA> #> 4      FALSE     FALSE       20                0          <NA>      <NA> #> 5      FALSE     FALSE       20                0          <NA>      <NA> #> 6      FALSE     FALSE       20                0          <NA>      <NA> #> 7      FALSE     FALSE       20                0          <NA>      <NA> #> 8      FALSE     FALSE       20                0          <NA>      <NA> #> 9      FALSE     FALSE       20                0          <NA>      <NA> #> 10     FALSE     FALSE       20                0          <NA>      <NA> #> 11     FALSE     FALSE       20                0          <NA>      <NA> #> 12     FALSE     FALSE       20                0          <NA>      <NA> #> 13     FALSE     FALSE       20                0          <NA>      <NA> #> 14     FALSE     FALSE       20                0          <NA>      <NA> #> 15     FALSE     FALSE       20                0          <NA>      <NA> #> 16     FALSE     FALSE       20                0          <NA>      <NA> #> 17     FALSE     FALSE       20                0          <NA>      <NA> #> 18     FALSE     FALSE       20                0          <NA>      <NA> #> 19     FALSE     FALSE       20                0          <NA>      <NA> #> 20     FALSE     FALSE       20                0          <NA>      <NA> #> 21     FALSE     FALSE       20                0          <NA>      <NA> #>    A.linfit x.mu.start.linfit x.mu.end.linfit r2mu.linfit reliable_fit.linfit #> 1      <NA>              <NA>            <NA>        <NA>               FALSE #> 2      <NA>              <NA>            <NA>        <NA>               FALSE #> 3      <NA>              <NA>            <NA>        <NA>               FALSE #> 4      <NA>              <NA>            <NA>        <NA>               FALSE #> 5      <NA>              <NA>            <NA>        <NA>               FALSE #> 6      <NA>              <NA>            <NA>        <NA>               FALSE #> 7      <NA>              <NA>            <NA>        <NA>               FALSE #> 8      <NA>              <NA>            <NA>        <NA>               FALSE #> 9      <NA>              <NA>            <NA>        <NA>               FALSE #> 10     <NA>              <NA>            <NA>        <NA>               FALSE #> 11     <NA>              <NA>            <NA>        <NA>               FALSE #> 12     <NA>              <NA>            <NA>        <NA>               FALSE #> 13     <NA>              <NA>            <NA>        <NA>               FALSE #> 14     <NA>              <NA>            <NA>        <NA>               FALSE #> 15     <NA>              <NA>            <NA>        <NA>               FALSE #> 16     <NA>              <NA>            <NA>        <NA>               FALSE #> 17     <NA>              <NA>            <NA>        <NA>               FALSE #> 18     <NA>              <NA>            <NA>        <NA>               FALSE #> 19     <NA>              <NA>            <NA>        <NA>               FALSE #> 20     <NA>              <NA>            <NA>        <NA>               FALSE #> 21     <NA>              <NA>            <NA>        <NA>               FALSE #>    max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1               <NA>               <NA>             <NA>         <NA> #> 2               <NA>               <NA>             <NA>         <NA> #> 3               <NA>               <NA>             <NA>         <NA> #> 4               <NA>               <NA>             <NA>         <NA> #> 5               <NA>               <NA>             <NA>         <NA> #> 6               <NA>               <NA>             <NA>         <NA> #> 7               <NA>               <NA>             <NA>         <NA> #> 8               <NA>               <NA>             <NA>         <NA> #> 9               <NA>               <NA>             <NA>         <NA> #> 10              <NA>               <NA>             <NA>         <NA> #> 11              <NA>               <NA>             <NA>         <NA> #> 12              <NA>               <NA>             <NA>         <NA> #> 13              <NA>               <NA>             <NA>         <NA> #> 14              <NA>               <NA>             <NA>         <NA> #> 15              <NA>               <NA>             <NA>         <NA> #> 16              <NA>               <NA>             <NA>         <NA> #> 17              <NA>               <NA>             <NA>         <NA> #> 18              <NA>               <NA>             <NA>         <NA> #> 19              <NA>               <NA>             <NA>         <NA> #> 20              <NA>               <NA>             <NA>         <NA> #> 21              <NA>               <NA>             <NA>         <NA> #>    reliable_fit2.linfit max_slope.spline x.max.spline     lambda.spline #> 1                 FALSE 92.2668917228847         20.5  15.5467166096294 #> 2                 FALSE 30.7727385498294           20  31.2872267087641 #> 3                 FALSE 64.1757831646195           16  20.8131240327289 #> 4                 FALSE 242.557704041626         23.5   14.982628746023 #> 5                 FALSE 64.6529094536605           19  21.6712998092256 #> 6                 FALSE 205.579719130273           18  12.5662904914231 #> 7                 FALSE 509.394721871828         21.5  6.95952698278091 #> 8                 FALSE 204.031623957349         17.5  13.4360564669416 #> 9                 FALSE 290.961299939404           13  4.67379381987626 #> 10                FALSE 670.985334314906            6 0.373248436531125 #> 11                FALSE 327.194544214636           17  9.86802427129631 #> 12                FALSE  335.24358478568         17.5  3.65080407904796 #> 13                FALSE 728.625260083634          6.5 0.553816578577824 #> 14                FALSE 346.268113254507         16.5  9.75821807365783 #> 15                FALSE 320.246598452139         17.5  3.21350390586807 #> 16                FALSE  774.05398642078          5.5 0.246732777852533 #> 17                FALSE 337.909403917534         16.5  8.08916482172041 #> 18                FALSE 351.643501664612           18  4.84484452250892 #> 19                FALSE 779.134078966909            6 0.462268482214904 #> 20                FALSE 353.185039298395         16.5   9.5717850859864 #> 21                FALSE 338.826806405161           18  5.01597033523556 #>    max_slope2.spline x.max2.spline lambda2.spline        y0.spline #> 1               <NA>          <NA>           <NA>  1291.4242870252 #> 2               <NA>          <NA>           <NA> 1188.27831547782 #> 3               <NA>          <NA>           <NA> 1565.59217809736 #> 4               <NA>          <NA>           <NA> 1519.80363776351 #> 5               <NA>          <NA>           <NA>  1255.7213080438 #> 6               <NA>          <NA>           <NA> 1624.15289883901 #> 7               <NA>          <NA>           <NA> 1132.18524639308 #> 8               <NA>          <NA>           <NA> 1405.71652864703 #> 9               <NA>          <NA>           <NA> 1468.52438340082 #> 10              <NA>          <NA>           <NA> 1209.47395589045 #> 11              <NA>          <NA>           <NA> 1187.83879461914 #> 12              <NA>          <NA>           <NA> 1467.93981010311 #> 13              <NA>          <NA>           <NA> 891.795404947046 #> 14              <NA>          <NA>           <NA> 1282.77700477438 #> 15              <NA>          <NA>           <NA> 1542.64869773804 #> 16              <NA>          <NA>           <NA> 1132.44043950227 #> 17              <NA>          <NA>           <NA> 862.662992687727 #> 18              <NA>          <NA>           <NA> 1602.42470098365 #> 19              <NA>          <NA>           <NA> 1017.04362101536 #> 20              <NA>          <NA>           <NA>  1323.6959493112 #> 21              <NA>          <NA>           <NA> 1707.52183129309 #>            A.spline        dY.spline  integral.spline reliable_fit.spline #> 1   3427.1255242313  2135.7012372061  82881.406474157                TRUE #> 2  1470.99207749982 282.713762021994 43222.9360971386                TRUE #> 3  2196.18856426073 630.596386163366 67033.6678589485                TRUE #> 4  7592.80063751346 6072.99699974995 151370.675832012                TRUE #> 5  2384.30375521349 1128.58244716969 58249.0814015737                TRUE #> 6  4820.28715109276 3196.13425225375 132414.081549265                TRUE #> 7  17121.2144379564 15989.0291915634 367233.851934483                TRUE #> 8    5206.543176868 3800.82664822097 120525.231431367                TRUE #> 9  7768.18866992603 6299.66428652521  223919.42858498                TRUE #> 10 20079.0095008516 18869.5355449612 490254.828661569                TRUE #> 11 6840.37784263295 5652.53904801381 169914.301957325                TRUE #> 12 9191.86346478591  7723.9236546828 269744.222628614                TRUE #> 13  20481.097768094  19589.302363147 497122.375105375                TRUE #> 14 7000.84532046262 5718.06831568824 179100.135589319                TRUE #> 15 9006.21056404733 7463.56186630929 267724.576457373                TRUE #> 16 20704.0909872879 19571.6505477857 520199.730690857                TRUE #> 17 6952.68659445902 6090.02360177129 178120.140852737                TRUE #> 18 9322.62835009364 7720.20364910999  273698.19440202                TRUE #> 19  19774.702139564 18757.6585185487 508722.732093212                TRUE #> 20 7189.59680355244 5865.90085424124 182547.707805716                TRUE #> 21 9258.53106887529 7551.00923758219 271383.083788705                TRUE #>    reliable_fit2.spline smooth.spline     max_slope.bt         lambda.bt #> 1                 FALSE          0.75 92.1480000228262  15.2997011773877 #> 2                 FALSE          0.75 31.4987470582848  31.8725068903176 #> 3                 FALSE          0.75 64.9236032898515  20.3159441930191 #> 4                 FALSE          0.75 243.122158176647  15.1491844865132 #> 5                 FALSE          0.75 66.1605116431693  22.0793467132709 #> 6                 FALSE          0.75 206.538244586154  12.3413298999378 #> 7                 FALSE          0.75 507.754882190561  7.07835472514792 #> 8                 FALSE          0.75 202.201020675643  13.6549286330007 #> 9                 FALSE          0.75  287.16708181813  4.80051736172521 #> 10                FALSE          0.75 688.805152275539 0.676575969619161 #> 11                FALSE          0.75 325.779611100594  9.67078442162658 #> 12                FALSE          0.75 335.508833717271  3.81656647752937 #> 13                FALSE          0.75 726.362909882305 0.795847561127147 #> 14                FALSE          0.75   348.1064799454  9.89098806244534 #> 15                FALSE          0.75  321.86207382622  3.42306617957514 #> 16                FALSE          0.75 774.335267726506 0.554531609800118 #> 17                FALSE          0.75 333.115184195391  8.00831476629021 #> 18                FALSE          0.75 350.577476026709  5.03242950965036 #> 19                FALSE          0.75  777.95498304294 0.808006180524069 #> 20                FALSE          0.75 349.858223858429  9.47405194315902 #> 21                FALSE          0.75 337.809296747214  5.23120592725325 #>                A.bt            dY.bt      integral.bt  stdmax_slope.bt #> 1  3407.28687370061 2138.36175204377 80990.5009873533 1.91039275857657 #> 2   1459.1690169138 269.427408710672 42538.9291942917 2.02863863979513 #> 3  2195.75133218731 671.952614878881 65833.9744009881 1.67903935321727 #> 4  7519.28717981337 5968.63870947862 147281.698006193 3.19239003011566 #> 5  2368.57237652218 1147.96751767578 57539.0845897394  2.4355714272711 #> 6  4816.07933455179 3242.73099575267 130336.231252899 2.63859728693238 #> 7  17034.7218567622 15823.6433773843 361454.863442683 13.6042466731104 #> 8  5183.36455182257 3735.66506227888 119420.111440752 10.8159348579319 #> 9  7767.48725838884 6240.80830598634 221432.992368345 6.46792290490963 #> 10 20074.0139846136 18730.0687047844 483936.205849091 30.4306504834682 #> 11 6761.13868056954 5612.90511932561 166427.462096084 12.5257386841849 #> 12 9187.50258750897 7656.76159513884 268318.401371761 6.26968623001247 #> 13 20398.0494519613 19325.2001969338 484589.028242089 26.1437950899896 #> 14 6972.89059233291 5659.22013234269 177192.530967717 12.9981798015647 #> 15 8997.96594503096 7407.25698658226 265313.598730917 6.69580902017483 #> 16 20707.3998837313 19357.9929037711 514953.828818172 27.4206415864526 #> 17 6886.94629469442 6002.22474207162 175987.987225171 14.7148649750912 #> 18 9325.55816573421 7646.34382171609 271537.964811395 7.80475603500122 #> 19 19806.3501742929 18514.4706605464 502856.244272865 24.8523465452432 #> 20 7169.46409756381 5847.73909801473 180695.089593475 10.6967762080954 #> 21 9252.53132356335 7452.75288454563 266972.151667424  8.0739785030903 #>         stdlambda.bt          stdA.bt         stddY.bt   stdintegral.bt #> 1  0.542503008915575 44.8724944115391 62.6962680640127  2836.6160788853 #> 2   2.69275088602291 19.9588577556107 78.1574615818749 834.767497364944 #> 3   2.17450322491717 5.50661633691646 134.392311430595 1314.53526850745 #> 4  0.350817424939507 151.475842852754   175.6332874137 6624.60395789875 #> 5   2.97852806173051 36.6985935353922 133.189259660111 1394.62652706391 #> 6   0.38810761744532 9.27131375024646 83.5292437147722 2502.83825331855 #> 7  0.413342289263279 133.581148527538  157.47822131274 7682.52819865129 #> 8  0.850979529139698 35.8905513364324 152.179566715424 2323.65980909835 #> 9  0.426303752636454 20.9908239578398 93.4380718685558 3471.57106424784 #> 10 0.455025019253515 68.6594563312887 291.207667925206 10569.1841745643 #> 11 0.526229916815324 119.395387916455 185.397077491699 4410.25515873751 #> 12  0.46630148847304 11.5379918877887 135.631340210965 2778.03653389578 #> 13 0.362602188958081 127.806025257318 212.064237335754 13285.8932002647 #> 14 0.681098364987012 58.4439692335693  187.97100930689  2932.2411980426 #> 15 0.481304834336163 22.9764780172073 102.177017592202 2710.78931819836 #> 16 0.394595802631493 106.628557657817 268.644273162036 8434.63416071942 #> 17  0.64998535351673 119.342454702174 175.782934526107 4590.80637496765 #> 18 0.462312095065891 7.31845130859986 120.259647695395 2486.99187417155 #> 19 0.383362464116823 99.2582911992406 250.759237819795 7908.49483568946 #> 20 0.376698230436487 71.7681292105379 128.002910543323 3829.45905003792 #> 21 0.540056772855767 10.5720205922385 138.494058849246 3929.62190862241 #>    reliable_fit.bt    ci90.mu.bt.lo    ci90.mu.bt.up   ci90.lambda.bt.lo #> 1             TRUE 89.0054039349677 95.2905961106846    14.4072837277216 #> 2             TRUE 28.1616364958218 34.8358576207477      27.44293168281 #> 3             TRUE 62.1615835538091  67.685623025894    16.7388863880303 #> 4             TRUE 237.870676577106 248.373639776187    14.5720898224877 #> 5             TRUE 62.1539966453083 70.1670266410302    17.1796680517242 #> 6             TRUE 202.197752049151 210.878737123158    11.7028928692402 #> 7             TRUE 485.375896413294 530.133867967827    6.39840665930983 #> 8             TRUE 184.408807834345 219.993233516941    12.2550673075659 #> 9             TRUE 276.527348639554 297.806814996706    4.09924768863824 #> 10            TRUE 638.746732230234 738.863572320844 -0.0719401870528712 #> 11            TRUE  305.17477096511 346.384451236078    8.80513620846537 #> 12            TRUE 325.195199868901 345.822467565642    3.04950052899122 #> 13            TRUE 683.356366959272 769.369452805337   0.199366960291104 #> 14            TRUE 326.724474171826 369.488485718974     8.7705812520417 #> 15            TRUE 310.847467988032 332.876679664408    2.63131972709215 #> 16            TRUE 729.228312316791  819.44222313622 -0.0945784855286882 #> 17            TRUE 308.909231311366 357.321137079416    6.93908885975519 #> 18            TRUE 337.738652349132 363.416299704286    4.27192611326697 #> 19            TRUE 737.072872976015 818.837093109865   0.177374927051894 #> 20            TRUE 332.262026996112 367.454420720746      8.854383354091 #> 21            TRUE 324.527602109631 351.090991384798    4.34281253590551 #>    ci90.lambda.bt.up     ci90.A.bt.lo     ci90.A.bt.up ci90.integral.bt.lo #> 1   16.1921186270538 3333.47162039363 3481.10212700759    76324.2675375869 #> 2   36.3020820978253 1426.33669590582 1492.00133792178    41165.7366611264 #> 3   23.8930019980078 2186.69294831308 2204.80971606154    63671.5638842933 #> 4   15.7262791505387 7270.10941832059 7768.46494130615    136384.224495449 #> 5   26.9790253748176 2308.20319015646  2428.9415628879    55244.9239527192 #> 6   12.9797669306353 4800.82802343264 4831.33064567095     126219.06232619 #> 7   7.75830279098602 16814.9808674344   17254.46284609    348817.104555902 #> 8   15.0547899584355 5124.32459487414 5242.40450877101    115597.691054786 #> 9   5.50178703481218 7732.95735297819 7802.01716379949    215722.257967657 #> 10  1.42509212629119 19961.0691789487 20186.9587902786    466549.897881932 #> 11  10.5364326347878 6564.73326744697  6957.5440936921    159172.592359961 #> 12  4.58363242606752 9168.52259085356 9206.48258416439    263748.531273502 #> 13  1.39232816196319  20187.808540413 20608.2903635095    462733.733927654 #> 14   11.011394872849 6876.75026294369 7069.03092172213    172368.994196937 #> 15  4.21481263205812 8960.16963869265 9035.76225136926    260854.350302481 #> 16  1.20364170512892 20531.9959063842 20882.8038610784    501078.855623789 #> 17  9.07754067282523 6690.62795670934  7083.2646326795    168436.110738349 #> 18  5.79293290603375 9313.51931333156 9337.59701813685    267446.863178383 #> 19  1.43863743399624 19643.0702852702 19969.6300633157    489846.770268156 #> 20   10.093720532227 7051.40552501247 7287.52267011514    174395.629456163 #> 21  6.11959931860098 9235.14034968912 9269.92229743759     260507.92362774 #>    ci90.integral.bt.up    ci95.mu.bt.lo    ci95.mu.bt.up  ci95.lambda.bt.lo #> 1     85656.7344371196 88.4036302160161 95.8923698296363   14.2363952799132 #> 2     43912.1217274571 27.5226153242863 35.4748787922832   26.5947151537127 #> 3     67996.3849176828 61.6326861575457 68.2145204221574   16.0539178721814 #> 4     158179.171516936  236.86507371762 249.379242635673   14.4615823336318 #> 5     59833.2452267595  61.386791645718 70.9342316406207   16.2414317122791 #> 6     134453.400179608 201.366593903767 211.709895268542    11.580638969745 #> 7     374092.622329464 481.090558711264 534.419205669857    6.2682038381919 #> 8     123242.531826719 181.001788354096  223.40025299719   11.9870087558869 #> 9     227143.726769033 274.489952924507 299.844210711753   3.96496200655776 #> 10    501322.513816249 629.161077327941 748.449227223137 -0.215273068117728 #> 11    173682.331832207 301.229163279591 350.330058921596   8.63937378466854 #> 12    272888.271470019 323.220248706447 347.797418728096   2.90261556012222 #> 13    506444.322556525 675.121071505925 777.604748258684 0.0851472707693083 #> 14    182016.067738497 322.630047534333 373.582912356466   8.55603526707079 #> 15    269772.847159354 308.738288146677 334.985859505763   2.47970870427626 #> 16    528828.802012556 720.590810217059 828.079725235953 -0.218876163357609 #> 17    183539.863711993 304.274048844212 361.956319546569   6.73434347339742 #> 18    275629.066444408 335.280154198106 365.874797855311   4.12629780332121 #> 19    515865.718277574 729.244383814264 826.665582271617  0.056615750855095 #> 20    186994.549730787 328.892542490562 370.823905226296    8.7357234115035 #> 21    273436.379707108 321.984298881157 353.634294613271   4.17269465245594 #>    ci95.lambda.bt.up     ci95.A.bt.lo     ci95.A.bt.up ci95.integral.bt.lo #> 1   16.3630070748623   3319.336784654 3495.23696274723    75430.7334727381 #> 2   37.1502986269225  1420.0496557128  1498.2883781148    40902.7848994565 #> 3   24.5779705138567 2184.95836416695 2206.54430020766    63257.4852747135 #> 4   15.8367866393946 7222.39452782197 7816.17983180476    134297.474248711 #> 5   27.9172617142627 2296.64313319282 2440.50161985155    54805.6165966941 #> 6   13.1020208301306 4797.90755960131 4834.25110950227    125430.668276395 #> 7   7.88850561210395 16772.9028056482 17296.5409078761    346397.108173326 #> 8   15.3228485101145 5113.01907120317 5253.71003244198     114865.73821492 #> 9   5.63607271689266 7726.34524343147 7808.62927334621    214628.713082419 #> 10  1.56842500735605 19939.4414502043  20208.586519023    463220.604866945 #> 11  10.7021950585846 6527.12372025329 6995.15364088579    157783.361984959 #> 12  4.73051739493653 9164.88812340891 9210.11705160904    262873.449765325 #> 13  1.50654785148499 20147.5496424569 20648.5492614656     458548.67756957 #> 14  11.2259408578199 6858.34041263511  7087.4407720307    171445.338219553 #> 15  4.36642365487402 8952.93204811723 9042.99984194468    260000.451667249 #> 16  1.32793938295784  20498.407910722 20916.3918567406    498421.945863162 #> 17    9.282286059183 6653.03508347816 7120.85750591068    166990.006730234 #> 18   5.9385612159795 9311.21400116935 9339.90233029906    266663.460738019 #> 19  1.55939661019304 19611.8039235424 20000.8964250434    487355.594394914 #> 20  10.2123804748145 7028.79856431115 7310.12963081646    173189.349855401 #> 21  6.28971720205055 9231.81016320257 9273.25248392414    259270.092726524 #>    ci95.integral.bt.up #> 1     86550.2685019685 #> 2      44175.073489127 #> 3     68410.4635272626 #> 4     160265.921763674 #> 5     60272.5525827846 #> 6     135241.794229403 #> 7      376512.61871204 #> 8     123974.484666585 #> 9     228237.271654271 #> 10    504651.806831237 #> 11     175071.56220721 #> 12    273763.352978196 #> 13    510629.378914608 #> 14     182939.72371588 #> 15    270626.745794586 #> 16    531485.711773182 #> 17    184985.967720108 #> 18    276412.468884772 #> 19    518356.894150817 #> 20    188200.829331549 #> 21    274674.210608324"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFitLinear objects — summary.flFitLinear","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"Generic summary function flFitLinear objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"","code":"# S3 method for flFitLinear summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"object object class flFitLinear ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"dataframe parameters extracted linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFitLinear objects — summary.flFitLinear","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitLinear(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 'l', x_type = 'time',                        lin.R2 = 0.95, lin.RSD = 0.1,                        lin.h = 20))  summary(TestFit) #>   max_slope.linfit    lambda.linfit        dY.linfit         A.linfit #> 1 233.480098034089 15.2207558251445 5820.56714471966 7503.25945241197 #>   x.mu.start.linfit x.mu.end.linfit       r2mu.linfit reliable_fit.linfit #> 1              14.5            30.5 0.996370266149326                TRUE #>   max_slope2.linfit x.mu2.start.linfit x.mu2.end.linfit r2mu2.linfit #> 1              <NA>               <NA>             <NA>         <NA> #>   reliable_fit2.linfit #> 1                FALSE"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for flFitSpline objects — summary.flFitSpline","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"Generic summary function flFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"","code":"# S3 method for flFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"object object class flFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"dataframe parameters extracted nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.flFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for flFitSpline objects — summary.flFitSpline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file('lac_promoters.xlsx', package = 'QurvE'),                    data.fl = system.file('lac_promoters.xlsx', package = 'QurvE'),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Extract time and normalized fluorescence data for single sample time <- input$time[4,] data <- input$norm.fluorescence[4,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- flFitSpline(time = time,                        fl_data = data,                        ID = 'TestFit',                        control = fl.control(fit.opt = 's', x_type = 'time'))  summary(TestFit) #>   max_slope.spline x.max.spline   lambda.spline max_slope2.spline x.max2.spline #> 1 242.557704041626         23.5 14.982628746023              <NA>          <NA> #>   lambda2.spline        y0.spline         A.spline        dY.spline #> 1           <NA> 1519.80363776351 7592.80063751346 6072.99699974995 #>    integral.spline reliable_fit.spline reliable_fit2.spline smooth.spline #> 1 151370.675832012                TRUE                FALSE          0.75"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"Generic summary function gcBootSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"","code":"# S3 method for gcBootSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"object object class gcBootSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"dataframe statistical parameters extracted spline fit bootstrapping computation.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcBootSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcBootSpline objects — summary.gcBootSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Introduce some noise into the measurements data <- data + stats::runif(97, -0.01, 0.09)  # Perform bootstrapping spline fit TestFit <- growth.gcBootSpline(time, data, gcID = 'TestFit',               control = growth.control(fit.opt = 's', nboot.gc = 50))  summary(TestFit) #>              mu.bt        lambda.bt             A.bt            dY.bt #> 1 0.59952491628382 5.39702844037527 6.99155921448429 6.86938680594371 #>        integral.bt            stdmu.bt      stdlambda.bt            stdA.bt #> 1 56.7583598711033 0.00912962363255436 0.162583723845713 0.0294887861736387 #>             stddY.bt   stdintegral.bt reliable_fit.bt     ci90.mu.bt.lo #> 1 0.0327186153924588 0.96506207349123            TRUE 0.584506685408268 #>       ci90.mu.bt.up ci90.lambda.bt.lo ci90.lambda.bt.up     ci90.A.bt.lo #> 1 0.614543147159372  5.12957821464907  5.66447866610147 6.94305016122865 #>       ci90.A.bt.up ci90.integral.bt.lo ci90.integral.bt.up     ci95.mu.bt.lo #> 1 7.04006826773992    55.1708327602102    58.3458869819963 0.581630853964013 #>       ci95.mu.bt.up ci95.lambda.bt.lo ci95.lambda.bt.up     ci95.A.bt.lo #> 1 0.617418978603626  5.07836434163767  5.71569253911287 6.93376119358396 #>       ci95.A.bt.up ci95.integral.bt.lo ci95.integral.bt.up #> 1 7.04935723538462    54.8668382070604    58.6498815351461"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFit objects — summary.gcFit","title":"Generic summary function for gcFit objects — summary.gcFit","text":"Generic summary function gcFit objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFit objects — summary.gcFit","text":"","code":"# S3 method for gcFit summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFit objects — summary.gcFit","text":"object object class gcFit ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFit objects — summary.gcFit","text":"dataframe parameters extracted fits workflow.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFit objects — summary.gcFit","text":"","code":"# \\donttest{ # Create random growth data set rnd.data1 <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1') rnd.data2 <- rdm.data(d = 35, mu = 0.6, A = 4.5, label = 'Test2')  rnd.data <- list() rnd.data[['time']] <- rbind(rnd.data1$time, rnd.data2$time) rnd.data[['data']] <- rbind(rnd.data1$data, rnd.data2$data)  # Run growth curve analysis workflow gcFit <- growth.gcFit(time = rnd.data$time,                        data = rnd.data$data,                        parallelize = FALSE,                        control = growth.control(fit.opt = 's',                                                 suppress.messages = TRUE,                                                 nboot.gc = 20)) summary(gcFit) #>    TestId AddId concentration reliability_tag used.model log.x log.y.lin #> 1   Test1     1         0.000            TRUE         NA FALSE      TRUE #> 2   Test1     1         0.017            TRUE         NA FALSE      TRUE #> 3   Test1     1         0.026            TRUE         NA FALSE      TRUE #> 4   Test1     1         0.039            TRUE         NA FALSE      TRUE #> 5   Test1     1         0.059            TRUE         NA FALSE      TRUE #> 6   Test1     1         0.088            TRUE         NA FALSE      TRUE #> 7   Test1     1         0.130            TRUE         NA FALSE      TRUE #> 8   Test1     1         0.200            TRUE         NA FALSE      TRUE #> 9   Test1     1         0.300            TRUE         NA FALSE      TRUE #> 10  Test1     1         0.440            TRUE         NA FALSE      TRUE #> 11  Test1     1         0.670            TRUE         NA FALSE      TRUE #> 12  Test1     1         1.000            TRUE         NA FALSE      TRUE #> 13  Test1     2         0.000            TRUE         NA FALSE      TRUE #> 14  Test1     2         0.017            TRUE         NA FALSE      TRUE #> 15  Test1     2         0.026            TRUE         NA FALSE      TRUE #> 16  Test1     2         0.039            TRUE         NA FALSE      TRUE #> 17  Test1     2         0.059            TRUE         NA FALSE      TRUE #> 18  Test1     2         0.088            TRUE         NA FALSE      TRUE #> 19  Test1     2         0.130            TRUE         NA FALSE      TRUE #> 20  Test1     2         0.200            TRUE         NA FALSE      TRUE #> 21  Test1     2         0.300            TRUE         NA FALSE      TRUE #> 22  Test1     2         0.440            TRUE         NA FALSE      TRUE #> 23  Test1     2         0.670            TRUE         NA FALSE      TRUE #> 24  Test1     2         1.000            TRUE         NA FALSE      TRUE #> 25  Test1     3         0.000            TRUE         NA FALSE      TRUE #> 26  Test1     3         0.026            TRUE         NA FALSE      TRUE #> 27  Test1     3         0.039            TRUE         NA FALSE      TRUE #> 28  Test1     3         0.059            TRUE         NA FALSE      TRUE #> 29  Test1     3         0.088            TRUE         NA FALSE      TRUE #> 30  Test1     3         0.130            TRUE         NA FALSE      TRUE #> 31  Test1     3         0.200            TRUE         NA FALSE      TRUE #> 32  Test1     3         0.300            TRUE         NA FALSE      TRUE #> 33  Test1     3         0.440            TRUE         NA FALSE      TRUE #> 34  Test1     3         0.670            TRUE         NA FALSE      TRUE #> 35  Test1     3         1.000            TRUE         NA FALSE      TRUE #> 36  Test2     1         0.000            TRUE         NA FALSE      TRUE #> 37  Test2     1         0.017            TRUE         NA FALSE      TRUE #> 38  Test2     1         0.026            TRUE         NA FALSE      TRUE #> 39  Test2     1         0.039            TRUE         NA FALSE      TRUE #> 40  Test2     1         0.059            TRUE         NA FALSE      TRUE #> 41  Test2     1         0.088            TRUE         NA FALSE      TRUE #> 42  Test2     1         0.130            TRUE         NA FALSE      TRUE #> 43  Test2     1         0.200            TRUE         NA FALSE      TRUE #> 44  Test2     1         0.300            TRUE         NA FALSE      TRUE #> 45  Test2     1         0.440            TRUE         NA FALSE      TRUE #> 46  Test2     1         0.670            TRUE         NA FALSE      TRUE #> 47  Test2     1         1.000            TRUE         NA FALSE      TRUE #> 48  Test2     2         0.000            TRUE         NA FALSE      TRUE #> 49  Test2     2         0.017            TRUE         NA FALSE      TRUE #> 50  Test2     2         0.026            TRUE         NA FALSE      TRUE #> 51  Test2     2         0.039            TRUE         NA FALSE      TRUE #> 52  Test2     2         0.059            TRUE         NA FALSE      TRUE #> 53  Test2     2         0.088            TRUE         NA FALSE      TRUE #> 54  Test2     2         0.130            TRUE         NA FALSE      TRUE #> 55  Test2     2         0.200            TRUE         NA FALSE      TRUE #> 56  Test2     2         0.300            TRUE         NA FALSE      TRUE #> 57  Test2     2         0.440            TRUE         NA FALSE      TRUE #> 58  Test2     2         0.670            TRUE         NA FALSE      TRUE #> 59  Test2     2         1.000            TRUE         NA FALSE      TRUE #> 60  Test2     3         0.000            TRUE         NA FALSE      TRUE #> 61  Test2     3         0.026            TRUE         NA FALSE      TRUE #> 62  Test2     3         0.039            TRUE         NA FALSE      TRUE #> 63  Test2     3         0.059            TRUE         NA FALSE      TRUE #> 64  Test2     3         0.088            TRUE         NA FALSE      TRUE #> 65  Test2     3         0.130            TRUE         NA FALSE      TRUE #> 66  Test2     3         0.200            TRUE         NA FALSE      TRUE #> 67  Test2     3         0.300            TRUE         NA FALSE      TRUE #> 68  Test2     3         0.440            TRUE         NA FALSE      TRUE #> 69  Test2     3         0.670            TRUE         NA FALSE      TRUE #> 70  Test2     3         1.000            TRUE         NA FALSE      TRUE #>    log.y.spline log.y.model nboot.gc mu.linfit tD.linfit lambda.linfit #> 1          TRUE        TRUE       20         0      <NA>          <NA> #> 2          TRUE        TRUE       20         0      <NA>          <NA> #> 3          TRUE        TRUE       20         0      <NA>          <NA> #> 4          TRUE        TRUE       20         0      <NA>          <NA> #> 5          TRUE        TRUE       20         0      <NA>          <NA> #> 6          TRUE        TRUE       20         0      <NA>          <NA> #> 7          TRUE        TRUE       20         0      <NA>          <NA> #> 8          TRUE        TRUE       20         0      <NA>          <NA> #> 9          TRUE        TRUE       20         0      <NA>          <NA> #> 10         TRUE        TRUE       20         0      <NA>          <NA> #> 11         TRUE        TRUE       20         0      <NA>          <NA> #> 12         TRUE        TRUE       20         0      <NA>          <NA> #> 13         TRUE        TRUE       20         0      <NA>          <NA> #> 14         TRUE        TRUE       20         0      <NA>          <NA> #> 15         TRUE        TRUE       20         0      <NA>          <NA> #> 16         TRUE        TRUE       20         0      <NA>          <NA> #> 17         TRUE        TRUE       20         0      <NA>          <NA> #> 18         TRUE        TRUE       20         0      <NA>          <NA> #> 19         TRUE        TRUE       20         0      <NA>          <NA> #> 20         TRUE        TRUE       20         0      <NA>          <NA> #> 21         TRUE        TRUE       20         0      <NA>          <NA> #> 22         TRUE        TRUE       20         0      <NA>          <NA> #> 23         TRUE        TRUE       20         0      <NA>          <NA> #> 24         TRUE        TRUE       20         0      <NA>          <NA> #> 25         TRUE        TRUE       20         0      <NA>          <NA> #> 26         TRUE        TRUE       20         0      <NA>          <NA> #> 27         TRUE        TRUE       20         0      <NA>          <NA> #> 28         TRUE        TRUE       20         0      <NA>          <NA> #> 29         TRUE        TRUE       20         0      <NA>          <NA> #> 30         TRUE        TRUE       20         0      <NA>          <NA> #> 31         TRUE        TRUE       20         0      <NA>          <NA> #> 32         TRUE        TRUE       20         0      <NA>          <NA> #> 33         TRUE        TRUE       20         0      <NA>          <NA> #> 34         TRUE        TRUE       20         0      <NA>          <NA> #> 35         TRUE        TRUE       20         0      <NA>          <NA> #> 36         TRUE        TRUE       20         0      <NA>          <NA> #> 37         TRUE        TRUE       20         0      <NA>          <NA> #> 38         TRUE        TRUE       20         0      <NA>          <NA> #> 39         TRUE        TRUE       20         0      <NA>          <NA> #> 40         TRUE        TRUE       20         0      <NA>          <NA> #> 41         TRUE        TRUE       20         0      <NA>          <NA> #> 42         TRUE        TRUE       20         0      <NA>          <NA> #> 43         TRUE        TRUE       20         0      <NA>          <NA> #> 44         TRUE        TRUE       20         0      <NA>          <NA> #> 45         TRUE        TRUE       20         0      <NA>          <NA> #> 46         TRUE        TRUE       20         0      <NA>          <NA> #> 47         TRUE        TRUE       20         0      <NA>          <NA> #> 48         TRUE        TRUE       20         0      <NA>          <NA> #> 49         TRUE        TRUE       20         0      <NA>          <NA> #> 50         TRUE        TRUE       20         0      <NA>          <NA> #> 51         TRUE        TRUE       20         0      <NA>          <NA> #> 52         TRUE        TRUE       20         0      <NA>          <NA> #> 53         TRUE        TRUE       20         0      <NA>          <NA> #> 54         TRUE        TRUE       20         0      <NA>          <NA> #> 55         TRUE        TRUE       20         0      <NA>          <NA> #> 56         TRUE        TRUE       20         0      <NA>          <NA> #> 57         TRUE        TRUE       20         0      <NA>          <NA> #> 58         TRUE        TRUE       20         0      <NA>          <NA> #> 59         TRUE        TRUE       20         0      <NA>          <NA> #> 60         TRUE        TRUE       20         0      <NA>          <NA> #> 61         TRUE        TRUE       20         0      <NA>          <NA> #> 62         TRUE        TRUE       20         0      <NA>          <NA> #> 63         TRUE        TRUE       20         0      <NA>          <NA> #> 64         TRUE        TRUE       20         0      <NA>          <NA> #> 65         TRUE        TRUE       20         0      <NA>          <NA> #> 66         TRUE        TRUE       20         0      <NA>          <NA> #> 67         TRUE        TRUE       20         0      <NA>          <NA> #> 68         TRUE        TRUE       20         0      <NA>          <NA> #> 69         TRUE        TRUE       20         0      <NA>          <NA> #> 70         TRUE        TRUE       20         0      <NA>          <NA> #>    dY.linfit A.linfit tmu.start.linfit tmu.end.linfit r2mu.linfit #> 1          0     <NA>             <NA>           <NA>        <NA> #> 2          0     <NA>             <NA>           <NA>        <NA> #> 3          0     <NA>             <NA>           <NA>        <NA> #> 4          0     <NA>             <NA>           <NA>        <NA> #> 5          0     <NA>             <NA>           <NA>        <NA> #> 6          0     <NA>             <NA>           <NA>        <NA> #> 7          0     <NA>             <NA>           <NA>        <NA> #> 8          0     <NA>             <NA>           <NA>        <NA> #> 9          0     <NA>             <NA>           <NA>        <NA> #> 10         0     <NA>             <NA>           <NA>        <NA> #> 11         0     <NA>             <NA>           <NA>        <NA> #> 12         0     <NA>             <NA>           <NA>        <NA> #> 13         0     <NA>             <NA>           <NA>        <NA> #> 14         0     <NA>             <NA>           <NA>        <NA> #> 15         0     <NA>             <NA>           <NA>        <NA> #> 16         0     <NA>             <NA>           <NA>        <NA> #> 17         0     <NA>             <NA>           <NA>        <NA> #> 18         0     <NA>             <NA>           <NA>        <NA> #> 19         0     <NA>             <NA>           <NA>        <NA> #> 20         0     <NA>             <NA>           <NA>        <NA> #> 21         0     <NA>             <NA>           <NA>        <NA> #> 22         0     <NA>             <NA>           <NA>        <NA> #> 23         0     <NA>             <NA>           <NA>        <NA> #> 24         0     <NA>             <NA>           <NA>        <NA> #> 25         0     <NA>             <NA>           <NA>        <NA> #> 26         0     <NA>             <NA>           <NA>        <NA> #> 27         0     <NA>             <NA>           <NA>        <NA> #> 28         0     <NA>             <NA>           <NA>        <NA> #> 29         0     <NA>             <NA>           <NA>        <NA> #> 30         0     <NA>             <NA>           <NA>        <NA> #> 31         0     <NA>             <NA>           <NA>        <NA> #> 32         0     <NA>             <NA>           <NA>        <NA> #> 33         0     <NA>             <NA>           <NA>        <NA> #> 34         0     <NA>             <NA>           <NA>        <NA> #> 35         0     <NA>             <NA>           <NA>        <NA> #> 36         0     <NA>             <NA>           <NA>        <NA> #> 37         0     <NA>             <NA>           <NA>        <NA> #> 38         0     <NA>             <NA>           <NA>        <NA> #> 39         0     <NA>             <NA>           <NA>        <NA> #> 40         0     <NA>             <NA>           <NA>        <NA> #> 41         0     <NA>             <NA>           <NA>        <NA> #> 42         0     <NA>             <NA>           <NA>        <NA> #> 43         0     <NA>             <NA>           <NA>        <NA> #> 44         0     <NA>             <NA>           <NA>        <NA> #> 45         0     <NA>             <NA>           <NA>        <NA> #> 46         0     <NA>             <NA>           <NA>        <NA> #> 47         0     <NA>             <NA>           <NA>        <NA> #> 48         0     <NA>             <NA>           <NA>        <NA> #> 49         0     <NA>             <NA>           <NA>        <NA> #> 50         0     <NA>             <NA>           <NA>        <NA> #> 51         0     <NA>             <NA>           <NA>        <NA> #> 52         0     <NA>             <NA>           <NA>        <NA> #> 53         0     <NA>             <NA>           <NA>        <NA> #> 54         0     <NA>             <NA>           <NA>        <NA> #> 55         0     <NA>             <NA>           <NA>        <NA> #> 56         0     <NA>             <NA>           <NA>        <NA> #> 57         0     <NA>             <NA>           <NA>        <NA> #> 58         0     <NA>             <NA>           <NA>        <NA> #> 59         0     <NA>             <NA>           <NA>        <NA> #> 60         0     <NA>             <NA>           <NA>        <NA> #> 61         0     <NA>             <NA>           <NA>        <NA> #> 62         0     <NA>             <NA>           <NA>        <NA> #> 63         0     <NA>             <NA>           <NA>        <NA> #> 64         0     <NA>             <NA>           <NA>        <NA> #> 65         0     <NA>             <NA>           <NA>        <NA> #> 66         0     <NA>             <NA>           <NA>        <NA> #> 67         0     <NA>             <NA>           <NA>        <NA> #> 68         0     <NA>             <NA>           <NA>        <NA> #> 69         0     <NA>             <NA>           <NA>        <NA> #> 70         0     <NA>             <NA>           <NA>        <NA> #>    reliable_fit.linfit mu2.linfit tD2.linfit tmu2.start.linfit tmu2.end.linfit #> 1                FALSE       <NA>       <NA>              <NA>            <NA> #> 2                FALSE       <NA>       <NA>              <NA>            <NA> #> 3                FALSE       <NA>       <NA>              <NA>            <NA> #> 4                FALSE       <NA>       <NA>              <NA>            <NA> #> 5                FALSE       <NA>       <NA>              <NA>            <NA> #> 6                FALSE       <NA>       <NA>              <NA>            <NA> #> 7                FALSE       <NA>       <NA>              <NA>            <NA> #> 8                FALSE       <NA>       <NA>              <NA>            <NA> #> 9                FALSE       <NA>       <NA>              <NA>            <NA> #> 10               FALSE       <NA>       <NA>              <NA>            <NA> #> 11               FALSE       <NA>       <NA>              <NA>            <NA> #> 12               FALSE       <NA>       <NA>              <NA>            <NA> #> 13               FALSE       <NA>       <NA>              <NA>            <NA> #> 14               FALSE       <NA>       <NA>              <NA>            <NA> #> 15               FALSE       <NA>       <NA>              <NA>            <NA> #> 16               FALSE       <NA>       <NA>              <NA>            <NA> #> 17               FALSE       <NA>       <NA>              <NA>            <NA> #> 18               FALSE       <NA>       <NA>              <NA>            <NA> #> 19               FALSE       <NA>       <NA>              <NA>            <NA> #> 20               FALSE       <NA>       <NA>              <NA>            <NA> #> 21               FALSE       <NA>       <NA>              <NA>            <NA> #> 22               FALSE       <NA>       <NA>              <NA>            <NA> #> 23               FALSE       <NA>       <NA>              <NA>            <NA> #> 24               FALSE       <NA>       <NA>              <NA>            <NA> #> 25               FALSE       <NA>       <NA>              <NA>            <NA> #> 26               FALSE       <NA>       <NA>              <NA>            <NA> #> 27               FALSE       <NA>       <NA>              <NA>            <NA> #> 28               FALSE       <NA>       <NA>              <NA>            <NA> #> 29               FALSE       <NA>       <NA>              <NA>            <NA> #> 30               FALSE       <NA>       <NA>              <NA>            <NA> #> 31               FALSE       <NA>       <NA>              <NA>            <NA> #> 32               FALSE       <NA>       <NA>              <NA>            <NA> #> 33               FALSE       <NA>       <NA>              <NA>            <NA> #> 34               FALSE       <NA>       <NA>              <NA>            <NA> #> 35               FALSE       <NA>       <NA>              <NA>            <NA> #> 36               FALSE       <NA>       <NA>              <NA>            <NA> #> 37               FALSE       <NA>       <NA>              <NA>            <NA> #> 38               FALSE       <NA>       <NA>              <NA>            <NA> #> 39               FALSE       <NA>       <NA>              <NA>            <NA> #> 40               FALSE       <NA>       <NA>              <NA>            <NA> #> 41               FALSE       <NA>       <NA>              <NA>            <NA> #> 42               FALSE       <NA>       <NA>              <NA>            <NA> #> 43               FALSE       <NA>       <NA>              <NA>            <NA> #> 44               FALSE       <NA>       <NA>              <NA>            <NA> #> 45               FALSE       <NA>       <NA>              <NA>            <NA> #> 46               FALSE       <NA>       <NA>              <NA>            <NA> #> 47               FALSE       <NA>       <NA>              <NA>            <NA> #> 48               FALSE       <NA>       <NA>              <NA>            <NA> #> 49               FALSE       <NA>       <NA>              <NA>            <NA> #> 50               FALSE       <NA>       <NA>              <NA>            <NA> #> 51               FALSE       <NA>       <NA>              <NA>            <NA> #> 52               FALSE       <NA>       <NA>              <NA>            <NA> #> 53               FALSE       <NA>       <NA>              <NA>            <NA> #> 54               FALSE       <NA>       <NA>              <NA>            <NA> #> 55               FALSE       <NA>       <NA>              <NA>            <NA> #> 56               FALSE       <NA>       <NA>              <NA>            <NA> #> 57               FALSE       <NA>       <NA>              <NA>            <NA> #> 58               FALSE       <NA>       <NA>              <NA>            <NA> #> 59               FALSE       <NA>       <NA>              <NA>            <NA> #> 60               FALSE       <NA>       <NA>              <NA>            <NA> #> 61               FALSE       <NA>       <NA>              <NA>            <NA> #> 62               FALSE       <NA>       <NA>              <NA>            <NA> #> 63               FALSE       <NA>       <NA>              <NA>            <NA> #> 64               FALSE       <NA>       <NA>              <NA>            <NA> #> 65               FALSE       <NA>       <NA>              <NA>            <NA> #> 66               FALSE       <NA>       <NA>              <NA>            <NA> #> 67               FALSE       <NA>       <NA>              <NA>            <NA> #> 68               FALSE       <NA>       <NA>              <NA>            <NA> #> 69               FALSE       <NA>       <NA>              <NA>            <NA> #> 70               FALSE       <NA>       <NA>              <NA>            <NA> #>    r2mu2.linfit reliable_fit2.linfit mu.model tD.model lambda.model A.model #> 1          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 2          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 3          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 4          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 5          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 6          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 7          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 8          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 9          <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 10         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 11         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 12         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 13         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 14         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 15         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 16         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 17         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 18         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 19         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 20         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 21         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 22         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 23         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 24         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 25         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 26         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 27         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 28         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 29         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 30         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 31         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 32         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 33         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 34         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 35         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 36         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 37         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 38         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 39         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 40         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 41         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 42         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 43         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 44         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 45         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 46         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 47         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 48         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 49         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 50         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 51         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 52         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 53         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 54         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 55         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 56         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 57         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 58         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 59         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 60         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 61         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 62         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 63         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 64         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 65         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 66         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 67         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 68         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 69         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #> 70         <NA>                FALSE     <NA>     <NA>         <NA>    <NA> #>    dY.model A.orig.model dY.orig.model integral.model parameter_nu.model #> 1      <NA>         <NA>          <NA>           <NA>               <NA> #> 2      <NA>         <NA>          <NA>           <NA>               <NA> #> 3      <NA>         <NA>          <NA>           <NA>               <NA> #> 4      <NA>         <NA>          <NA>           <NA>               <NA> #> 5      <NA>         <NA>          <NA>           <NA>               <NA> #> 6      <NA>         <NA>          <NA>           <NA>               <NA> #> 7      <NA>         <NA>          <NA>           <NA>               <NA> #> 8      <NA>         <NA>          <NA>           <NA>               <NA> #> 9      <NA>         <NA>          <NA>           <NA>               <NA> #> 10     <NA>         <NA>          <NA>           <NA>               <NA> #> 11     <NA>         <NA>          <NA>           <NA>               <NA> #> 12     <NA>         <NA>          <NA>           <NA>               <NA> #> 13     <NA>         <NA>          <NA>           <NA>               <NA> #> 14     <NA>         <NA>          <NA>           <NA>               <NA> #> 15     <NA>         <NA>          <NA>           <NA>               <NA> #> 16     <NA>         <NA>          <NA>           <NA>               <NA> #> 17     <NA>         <NA>          <NA>           <NA>               <NA> #> 18     <NA>         <NA>          <NA>           <NA>               <NA> #> 19     <NA>         <NA>          <NA>           <NA>               <NA> #> 20     <NA>         <NA>          <NA>           <NA>               <NA> #> 21     <NA>         <NA>          <NA>           <NA>               <NA> #> 22     <NA>         <NA>          <NA>           <NA>               <NA> #> 23     <NA>         <NA>          <NA>           <NA>               <NA> #> 24     <NA>         <NA>          <NA>           <NA>               <NA> #> 25     <NA>         <NA>          <NA>           <NA>               <NA> #> 26     <NA>         <NA>          <NA>           <NA>               <NA> #> 27     <NA>         <NA>          <NA>           <NA>               <NA> #> 28     <NA>         <NA>          <NA>           <NA>               <NA> #> 29     <NA>         <NA>          <NA>           <NA>               <NA> #> 30     <NA>         <NA>          <NA>           <NA>               <NA> #> 31     <NA>         <NA>          <NA>           <NA>               <NA> #> 32     <NA>         <NA>          <NA>           <NA>               <NA> #> 33     <NA>         <NA>          <NA>           <NA>               <NA> #> 34     <NA>         <NA>          <NA>           <NA>               <NA> #> 35     <NA>         <NA>          <NA>           <NA>               <NA> #> 36     <NA>         <NA>          <NA>           <NA>               <NA> #> 37     <NA>         <NA>          <NA>           <NA>               <NA> #> 38     <NA>         <NA>          <NA>           <NA>               <NA> #> 39     <NA>         <NA>          <NA>           <NA>               <NA> #> 40     <NA>         <NA>          <NA>           <NA>               <NA> #> 41     <NA>         <NA>          <NA>           <NA>               <NA> #> 42     <NA>         <NA>          <NA>           <NA>               <NA> #> 43     <NA>         <NA>          <NA>           <NA>               <NA> #> 44     <NA>         <NA>          <NA>           <NA>               <NA> #> 45     <NA>         <NA>          <NA>           <NA>               <NA> #> 46     <NA>         <NA>          <NA>           <NA>               <NA> #> 47     <NA>         <NA>          <NA>           <NA>               <NA> #> 48     <NA>         <NA>          <NA>           <NA>               <NA> #> 49     <NA>         <NA>          <NA>           <NA>               <NA> #> 50     <NA>         <NA>          <NA>           <NA>               <NA> #> 51     <NA>         <NA>          <NA>           <NA>               <NA> #> 52     <NA>         <NA>          <NA>           <NA>               <NA> #> 53     <NA>         <NA>          <NA>           <NA>               <NA> #> 54     <NA>         <NA>          <NA>           <NA>               <NA> #> 55     <NA>         <NA>          <NA>           <NA>               <NA> #> 56     <NA>         <NA>          <NA>           <NA>               <NA> #> 57     <NA>         <NA>          <NA>           <NA>               <NA> #> 58     <NA>         <NA>          <NA>           <NA>               <NA> #> 59     <NA>         <NA>          <NA>           <NA>               <NA> #> 60     <NA>         <NA>          <NA>           <NA>               <NA> #> 61     <NA>         <NA>          <NA>           <NA>               <NA> #> 62     <NA>         <NA>          <NA>           <NA>               <NA> #> 63     <NA>         <NA>          <NA>           <NA>               <NA> #> 64     <NA>         <NA>          <NA>           <NA>               <NA> #> 65     <NA>         <NA>          <NA>           <NA>               <NA> #> 66     <NA>         <NA>          <NA>           <NA>               <NA> #> 67     <NA>         <NA>          <NA>           <NA>               <NA> #> 68     <NA>         <NA>          <NA>           <NA>               <NA> #> 69     <NA>         <NA>          <NA>           <NA>               <NA> #> 70     <NA>         <NA>          <NA>           <NA>               <NA> #>    parameter_alpha.model parameter_t_shift.model parameter_y0.model stdmu.model #> 1                   <NA>                    <NA>               <NA>        <NA> #> 2                   <NA>                    <NA>               <NA>        <NA> #> 3                   <NA>                    <NA>               <NA>        <NA> #> 4                   <NA>                    <NA>               <NA>        <NA> #> 5                   <NA>                    <NA>               <NA>        <NA> #> 6                   <NA>                    <NA>               <NA>        <NA> #> 7                   <NA>                    <NA>               <NA>        <NA> #> 8                   <NA>                    <NA>               <NA>        <NA> #> 9                   <NA>                    <NA>               <NA>        <NA> #> 10                  <NA>                    <NA>               <NA>        <NA> #> 11                  <NA>                    <NA>               <NA>        <NA> #> 12                  <NA>                    <NA>               <NA>        <NA> #> 13                  <NA>                    <NA>               <NA>        <NA> #> 14                  <NA>                    <NA>               <NA>        <NA> #> 15                  <NA>                    <NA>               <NA>        <NA> #> 16                  <NA>                    <NA>               <NA>        <NA> #> 17                  <NA>                    <NA>               <NA>        <NA> #> 18                  <NA>                    <NA>               <NA>        <NA> #> 19                  <NA>                    <NA>               <NA>        <NA> #> 20                  <NA>                    <NA>               <NA>        <NA> #> 21                  <NA>                    <NA>               <NA>        <NA> #> 22                  <NA>                    <NA>               <NA>        <NA> #> 23                  <NA>                    <NA>               <NA>        <NA> #> 24                  <NA>                    <NA>               <NA>        <NA> #> 25                  <NA>                    <NA>               <NA>        <NA> #> 26                  <NA>                    <NA>               <NA>        <NA> #> 27                  <NA>                    <NA>               <NA>        <NA> #> 28                  <NA>                    <NA>               <NA>        <NA> #> 29                  <NA>                    <NA>               <NA>        <NA> #> 30                  <NA>                    <NA>               <NA>        <NA> #> 31                  <NA>                    <NA>               <NA>        <NA> #> 32                  <NA>                    <NA>               <NA>        <NA> #> 33                  <NA>                    <NA>               <NA>        <NA> #> 34                  <NA>                    <NA>               <NA>        <NA> #> 35                  <NA>                    <NA>               <NA>        <NA> #> 36                  <NA>                    <NA>               <NA>        <NA> #> 37                  <NA>                    <NA>               <NA>        <NA> #> 38                  <NA>                    <NA>               <NA>        <NA> #> 39                  <NA>                    <NA>               <NA>        <NA> #> 40                  <NA>                    <NA>               <NA>        <NA> #> 41                  <NA>                    <NA>               <NA>        <NA> #> 42                  <NA>                    <NA>               <NA>        <NA> #> 43                  <NA>                    <NA>               <NA>        <NA> #> 44                  <NA>                    <NA>               <NA>        <NA> #> 45                  <NA>                    <NA>               <NA>        <NA> #> 46                  <NA>                    <NA>               <NA>        <NA> #> 47                  <NA>                    <NA>               <NA>        <NA> #> 48                  <NA>                    <NA>               <NA>        <NA> #> 49                  <NA>                    <NA>               <NA>        <NA> #> 50                  <NA>                    <NA>               <NA>        <NA> #> 51                  <NA>                    <NA>               <NA>        <NA> #> 52                  <NA>                    <NA>               <NA>        <NA> #> 53                  <NA>                    <NA>               <NA>        <NA> #> 54                  <NA>                    <NA>               <NA>        <NA> #> 55                  <NA>                    <NA>               <NA>        <NA> #> 56                  <NA>                    <NA>               <NA>        <NA> #> 57                  <NA>                    <NA>               <NA>        <NA> #> 58                  <NA>                    <NA>               <NA>        <NA> #> 59                  <NA>                    <NA>               <NA>        <NA> #> 60                  <NA>                    <NA>               <NA>        <NA> #> 61                  <NA>                    <NA>               <NA>        <NA> #> 62                  <NA>                    <NA>               <NA>        <NA> #> 63                  <NA>                    <NA>               <NA>        <NA> #> 64                  <NA>                    <NA>               <NA>        <NA> #> 65                  <NA>                    <NA>               <NA>        <NA> #> 66                  <NA>                    <NA>               <NA>        <NA> #> 67                  <NA>                    <NA>               <NA>        <NA> #> 68                  <NA>                    <NA>               <NA>        <NA> #> 69                  <NA>                    <NA>               <NA>        <NA> #> 70                  <NA>                    <NA>               <NA>        <NA> #>    stdlambda.model stdA.model reliable_fit.model ci90.mu.model.lo #> 1             <NA>       <NA>              FALSE             <NA> #> 2             <NA>       <NA>              FALSE             <NA> #> 3             <NA>       <NA>              FALSE             <NA> #> 4             <NA>       <NA>              FALSE             <NA> #> 5             <NA>       <NA>              FALSE             <NA> #> 6             <NA>       <NA>              FALSE             <NA> #> 7             <NA>       <NA>              FALSE             <NA> #> 8             <NA>       <NA>              FALSE             <NA> #> 9             <NA>       <NA>              FALSE             <NA> #> 10            <NA>       <NA>              FALSE             <NA> #> 11            <NA>       <NA>              FALSE             <NA> #> 12            <NA>       <NA>              FALSE             <NA> #> 13            <NA>       <NA>              FALSE             <NA> #> 14            <NA>       <NA>              FALSE             <NA> #> 15            <NA>       <NA>              FALSE             <NA> #> 16            <NA>       <NA>              FALSE             <NA> #> 17            <NA>       <NA>              FALSE             <NA> #> 18            <NA>       <NA>              FALSE             <NA> #> 19            <NA>       <NA>              FALSE             <NA> #> 20            <NA>       <NA>              FALSE             <NA> #> 21            <NA>       <NA>              FALSE             <NA> #> 22            <NA>       <NA>              FALSE             <NA> #> 23            <NA>       <NA>              FALSE             <NA> #> 24            <NA>       <NA>              FALSE             <NA> #> 25            <NA>       <NA>              FALSE             <NA> #> 26            <NA>       <NA>              FALSE             <NA> #> 27            <NA>       <NA>              FALSE             <NA> #> 28            <NA>       <NA>              FALSE             <NA> #> 29            <NA>       <NA>              FALSE             <NA> #> 30            <NA>       <NA>              FALSE             <NA> #> 31            <NA>       <NA>              FALSE             <NA> #> 32            <NA>       <NA>              FALSE             <NA> #> 33            <NA>       <NA>              FALSE             <NA> #> 34            <NA>       <NA>              FALSE             <NA> #> 35            <NA>       <NA>              FALSE             <NA> #> 36            <NA>       <NA>              FALSE             <NA> #> 37            <NA>       <NA>              FALSE             <NA> #> 38            <NA>       <NA>              FALSE             <NA> #> 39            <NA>       <NA>              FALSE             <NA> #> 40            <NA>       <NA>              FALSE             <NA> #> 41            <NA>       <NA>              FALSE             <NA> #> 42            <NA>       <NA>              FALSE             <NA> #> 43            <NA>       <NA>              FALSE             <NA> #> 44            <NA>       <NA>              FALSE             <NA> #> 45            <NA>       <NA>              FALSE             <NA> #> 46            <NA>       <NA>              FALSE             <NA> #> 47            <NA>       <NA>              FALSE             <NA> #> 48            <NA>       <NA>              FALSE             <NA> #> 49            <NA>       <NA>              FALSE             <NA> #> 50            <NA>       <NA>              FALSE             <NA> #> 51            <NA>       <NA>              FALSE             <NA> #> 52            <NA>       <NA>              FALSE             <NA> #> 53            <NA>       <NA>              FALSE             <NA> #> 54            <NA>       <NA>              FALSE             <NA> #> 55            <NA>       <NA>              FALSE             <NA> #> 56            <NA>       <NA>              FALSE             <NA> #> 57            <NA>       <NA>              FALSE             <NA> #> 58            <NA>       <NA>              FALSE             <NA> #> 59            <NA>       <NA>              FALSE             <NA> #> 60            <NA>       <NA>              FALSE             <NA> #> 61            <NA>       <NA>              FALSE             <NA> #> 62            <NA>       <NA>              FALSE             <NA> #> 63            <NA>       <NA>              FALSE             <NA> #> 64            <NA>       <NA>              FALSE             <NA> #> 65            <NA>       <NA>              FALSE             <NA> #> 66            <NA>       <NA>              FALSE             <NA> #> 67            <NA>       <NA>              FALSE             <NA> #> 68            <NA>       <NA>              FALSE             <NA> #> 69            <NA>       <NA>              FALSE             <NA> #> 70            <NA>       <NA>              FALSE             <NA> #>    ci90.mu.model.up ci90.lambda.model.lo ci90.lambda.model.up ci90.A.model.lo #> 1              <NA>                 <NA>                 <NA>            <NA> #> 2              <NA>                 <NA>                 <NA>            <NA> #> 3              <NA>                 <NA>                 <NA>            <NA> #> 4              <NA>                 <NA>                 <NA>            <NA> #> 5              <NA>                 <NA>                 <NA>            <NA> #> 6              <NA>                 <NA>                 <NA>            <NA> #> 7              <NA>                 <NA>                 <NA>            <NA> #> 8              <NA>                 <NA>                 <NA>            <NA> #> 9              <NA>                 <NA>                 <NA>            <NA> #> 10             <NA>                 <NA>                 <NA>            <NA> #> 11             <NA>                 <NA>                 <NA>            <NA> #> 12             <NA>                 <NA>                 <NA>            <NA> #> 13             <NA>                 <NA>                 <NA>            <NA> #> 14             <NA>                 <NA>                 <NA>            <NA> #> 15             <NA>                 <NA>                 <NA>            <NA> #> 16             <NA>                 <NA>                 <NA>            <NA> #> 17             <NA>                 <NA>                 <NA>            <NA> #> 18             <NA>                 <NA>                 <NA>            <NA> #> 19             <NA>                 <NA>                 <NA>            <NA> #> 20             <NA>                 <NA>                 <NA>            <NA> #> 21             <NA>                 <NA>                 <NA>            <NA> #> 22             <NA>                 <NA>                 <NA>            <NA> #> 23             <NA>                 <NA>                 <NA>            <NA> #> 24             <NA>                 <NA>                 <NA>            <NA> #> 25             <NA>                 <NA>                 <NA>            <NA> #> 26             <NA>                 <NA>                 <NA>            <NA> #> 27             <NA>                 <NA>                 <NA>            <NA> #> 28             <NA>                 <NA>                 <NA>            <NA> #> 29             <NA>                 <NA>                 <NA>            <NA> #> 30             <NA>                 <NA>                 <NA>            <NA> #> 31             <NA>                 <NA>                 <NA>            <NA> #> 32             <NA>                 <NA>                 <NA>            <NA> #> 33             <NA>                 <NA>                 <NA>            <NA> #> 34             <NA>                 <NA>                 <NA>            <NA> #> 35             <NA>                 <NA>                 <NA>            <NA> #> 36             <NA>                 <NA>                 <NA>            <NA> #> 37             <NA>                 <NA>                 <NA>            <NA> #> 38             <NA>                 <NA>                 <NA>            <NA> #> 39             <NA>                 <NA>                 <NA>            <NA> #> 40             <NA>                 <NA>                 <NA>            <NA> #> 41             <NA>                 <NA>                 <NA>            <NA> #> 42             <NA>                 <NA>                 <NA>            <NA> #> 43             <NA>                 <NA>                 <NA>            <NA> #> 44             <NA>                 <NA>                 <NA>            <NA> #> 45             <NA>                 <NA>                 <NA>            <NA> #> 46             <NA>                 <NA>                 <NA>            <NA> #> 47             <NA>                 <NA>                 <NA>            <NA> #> 48             <NA>                 <NA>                 <NA>            <NA> #> 49             <NA>                 <NA>                 <NA>            <NA> #> 50             <NA>                 <NA>                 <NA>            <NA> #> 51             <NA>                 <NA>                 <NA>            <NA> #> 52             <NA>                 <NA>                 <NA>            <NA> #> 53             <NA>                 <NA>                 <NA>            <NA> #> 54             <NA>                 <NA>                 <NA>            <NA> #> 55             <NA>                 <NA>                 <NA>            <NA> #> 56             <NA>                 <NA>                 <NA>            <NA> #> 57             <NA>                 <NA>                 <NA>            <NA> #> 58             <NA>                 <NA>                 <NA>            <NA> #> 59             <NA>                 <NA>                 <NA>            <NA> #> 60             <NA>                 <NA>                 <NA>            <NA> #> 61             <NA>                 <NA>                 <NA>            <NA> #> 62             <NA>                 <NA>                 <NA>            <NA> #> 63             <NA>                 <NA>                 <NA>            <NA> #> 64             <NA>                 <NA>                 <NA>            <NA> #> 65             <NA>                 <NA>                 <NA>            <NA> #> 66             <NA>                 <NA>                 <NA>            <NA> #> 67             <NA>                 <NA>                 <NA>            <NA> #> 68             <NA>                 <NA>                 <NA>            <NA> #> 69             <NA>                 <NA>                 <NA>            <NA> #> 70             <NA>                 <NA>                 <NA>            <NA> #>    ci90.A.model.up ci95.mu.model.lo ci95.mu.model.up ci95.lambda.model.lo #> 1             <NA>             <NA>             <NA>                 <NA> #> 2             <NA>             <NA>             <NA>                 <NA> #> 3             <NA>             <NA>             <NA>                 <NA> #> 4             <NA>             <NA>             <NA>                 <NA> #> 5             <NA>             <NA>             <NA>                 <NA> #> 6             <NA>             <NA>             <NA>                 <NA> #> 7             <NA>             <NA>             <NA>                 <NA> #> 8             <NA>             <NA>             <NA>                 <NA> #> 9             <NA>             <NA>             <NA>                 <NA> #> 10            <NA>             <NA>             <NA>                 <NA> #> 11            <NA>             <NA>             <NA>                 <NA> #> 12            <NA>             <NA>             <NA>                 <NA> #> 13            <NA>             <NA>             <NA>                 <NA> #> 14            <NA>             <NA>             <NA>                 <NA> #> 15            <NA>             <NA>             <NA>                 <NA> #> 16            <NA>             <NA>             <NA>                 <NA> #> 17            <NA>             <NA>             <NA>                 <NA> #> 18            <NA>             <NA>             <NA>                 <NA> #> 19            <NA>             <NA>             <NA>                 <NA> #> 20            <NA>             <NA>             <NA>                 <NA> #> 21            <NA>             <NA>             <NA>                 <NA> #> 22            <NA>             <NA>             <NA>                 <NA> #> 23            <NA>             <NA>             <NA>                 <NA> #> 24            <NA>             <NA>             <NA>                 <NA> #> 25            <NA>             <NA>             <NA>                 <NA> #> 26            <NA>             <NA>             <NA>                 <NA> #> 27            <NA>             <NA>             <NA>                 <NA> #> 28            <NA>             <NA>             <NA>                 <NA> #> 29            <NA>             <NA>             <NA>                 <NA> #> 30            <NA>             <NA>             <NA>                 <NA> #> 31            <NA>             <NA>             <NA>                 <NA> #> 32            <NA>             <NA>             <NA>                 <NA> #> 33            <NA>             <NA>             <NA>                 <NA> #> 34            <NA>             <NA>             <NA>                 <NA> #> 35            <NA>             <NA>             <NA>                 <NA> #> 36            <NA>             <NA>             <NA>                 <NA> #> 37            <NA>             <NA>             <NA>                 <NA> #> 38            <NA>             <NA>             <NA>                 <NA> #> 39            <NA>             <NA>             <NA>                 <NA> #> 40            <NA>             <NA>             <NA>                 <NA> #> 41            <NA>             <NA>             <NA>                 <NA> #> 42            <NA>             <NA>             <NA>                 <NA> #> 43            <NA>             <NA>             <NA>                 <NA> #> 44            <NA>             <NA>             <NA>                 <NA> #> 45            <NA>             <NA>             <NA>                 <NA> #> 46            <NA>             <NA>             <NA>                 <NA> #> 47            <NA>             <NA>             <NA>                 <NA> #> 48            <NA>             <NA>             <NA>                 <NA> #> 49            <NA>             <NA>             <NA>                 <NA> #> 50            <NA>             <NA>             <NA>                 <NA> #> 51            <NA>             <NA>             <NA>                 <NA> #> 52            <NA>             <NA>             <NA>                 <NA> #> 53            <NA>             <NA>             <NA>                 <NA> #> 54            <NA>             <NA>             <NA>                 <NA> #> 55            <NA>             <NA>             <NA>                 <NA> #> 56            <NA>             <NA>             <NA>                 <NA> #> 57            <NA>             <NA>             <NA>                 <NA> #> 58            <NA>             <NA>             <NA>                 <NA> #> 59            <NA>             <NA>             <NA>                 <NA> #> 60            <NA>             <NA>             <NA>                 <NA> #> 61            <NA>             <NA>             <NA>                 <NA> #> 62            <NA>             <NA>             <NA>                 <NA> #> 63            <NA>             <NA>             <NA>                 <NA> #> 64            <NA>             <NA>             <NA>                 <NA> #> 65            <NA>             <NA>             <NA>                 <NA> #> 66            <NA>             <NA>             <NA>                 <NA> #> 67            <NA>             <NA>             <NA>                 <NA> #> 68            <NA>             <NA>             <NA>                 <NA> #> 69            <NA>             <NA>             <NA>                 <NA> #> 70            <NA>             <NA>             <NA>                 <NA> #>    ci95.lambda.model.up ci95.A.model.lo ci95.A.model.up          mu.spline #> 1                  <NA>            <NA>            <NA>   0.65816186055825 #> 2                  <NA>            <NA>            <NA>   0.63010612418665 #> 3                  <NA>            <NA>            <NA>  0.618241555174259 #> 4                  <NA>            <NA>            <NA>  0.574601852645794 #> 5                  <NA>            <NA>            <NA>  0.536428045269221 #> 6                  <NA>            <NA>            <NA>  0.467190960211879 #> 7                  <NA>            <NA>            <NA>  0.391040187941161 #> 8                  <NA>            <NA>            <NA>  0.276125861178083 #> 9                  <NA>            <NA>            <NA>  0.153723078070255 #> 10                 <NA>            <NA>            <NA> 0.0756259493193183 #> 11                 <NA>            <NA>            <NA>  0.034498969612366 #> 12                 <NA>            <NA>            <NA>                  0 #> 13                 <NA>            <NA>            <NA>  0.661274159635263 #> 14                 <NA>            <NA>            <NA>  0.616320580008214 #> 15                 <NA>            <NA>            <NA>  0.607373214551191 #> 16                 <NA>            <NA>            <NA>  0.580854818654628 #> 17                 <NA>            <NA>            <NA>   0.52384578146365 #> 18                 <NA>            <NA>            <NA>  0.480359032730079 #> 19                 <NA>            <NA>            <NA>  0.369701890290449 #> 20                 <NA>            <NA>            <NA>  0.262215895489516 #> 21                 <NA>            <NA>            <NA>  0.140910979442362 #> 22                 <NA>            <NA>            <NA>  0.067773878990247 #> 23                 <NA>            <NA>            <NA>  0.038329448047948 #> 24                 <NA>            <NA>            <NA>                  0 #> 25                 <NA>            <NA>            <NA>  0.664391167059407 #> 26                 <NA>            <NA>            <NA>  0.605801597473617 #> 27                 <NA>            <NA>            <NA>  0.566632385936878 #> 28                 <NA>            <NA>            <NA>  0.529056412063563 #> 29                 <NA>            <NA>            <NA>   0.46588924831213 #> 30                 <NA>            <NA>            <NA>  0.388870209938424 #> 31                 <NA>            <NA>            <NA>  0.264318420016059 #> 32                 <NA>            <NA>            <NA>  0.148178017240077 #> 33                 <NA>            <NA>            <NA> 0.0663506310327105 #> 34                 <NA>            <NA>            <NA> 0.0307823996752515 #> 35                 <NA>            <NA>            <NA>                  0 #> 36                 <NA>            <NA>            <NA>  0.481355822070957 #> 37                 <NA>            <NA>            <NA>  0.436548238486601 #> 38                 <NA>            <NA>            <NA>  0.420171604633374 #> 39                 <NA>            <NA>            <NA>  0.406350821214713 #> 40                 <NA>            <NA>            <NA>  0.345682367831958 #> 41                 <NA>            <NA>            <NA>  0.285978567172795 #> 42                 <NA>            <NA>            <NA>   0.21354319386097 #> 43                 <NA>            <NA>            <NA>  0.116611507658715 #> 44                 <NA>            <NA>            <NA> 0.0432189702907261 #> 45                 <NA>            <NA>            <NA>                  0 #> 46                 <NA>            <NA>            <NA>                  0 #> 47                 <NA>            <NA>            <NA>                  0 #> 48                 <NA>            <NA>            <NA>  0.473294158800481 #> 49                 <NA>            <NA>            <NA>  0.441439952474779 #> 50                 <NA>            <NA>            <NA>  0.419242175202353 #> 51                 <NA>            <NA>            <NA>  0.397084439294594 #> 52                 <NA>            <NA>            <NA>  0.354283844184107 #> 53                 <NA>            <NA>            <NA>  0.279638780891637 #> 54                 <NA>            <NA>            <NA>  0.208951618822254 #> 55                 <NA>            <NA>            <NA>  0.113371201920666 #> 56                 <NA>            <NA>            <NA> 0.0338148808246592 #> 57                 <NA>            <NA>            <NA> 0.0348200832907597 #> 58                 <NA>            <NA>            <NA>                  0 #> 59                 <NA>            <NA>            <NA>                  0 #> 60                 <NA>            <NA>            <NA>  0.469245293154741 #> 61                 <NA>            <NA>            <NA>  0.420377352324494 #> 62                 <NA>            <NA>            <NA>  0.386907469207586 #> 63                 <NA>            <NA>            <NA>  0.360121637375755 #> 64                 <NA>            <NA>            <NA>  0.300357096909155 #> 65                 <NA>            <NA>            <NA>  0.204109684823736 #> 66                 <NA>            <NA>            <NA>  0.125598073119826 #> 67                 <NA>            <NA>            <NA> 0.0455149330924819 #> 68                 <NA>            <NA>            <NA>                  0 #> 69                 <NA>            <NA>            <NA>                  0 #> 70                 <NA>            <NA>            <NA>                  0 #>           tD.spline tmax.spline        lambda.spline mu2.spline tD2.spline #> 1  1.05315610353359        7.75     4.21441926418007       <NA>       <NA> #> 2  1.10004831559869           8      4.5930595858961       <NA>       <NA> #> 3  1.12115915657687           8     4.62241730210424       <NA>       <NA> #> 4  1.20630864200716           8     4.54248780658659       <NA>       <NA> #> 5  1.29215313530461           8     4.27939505890555       <NA>       <NA> #> 6  1.48364852831397        8.25      4.5745347728936       <NA>       <NA> #> 7  1.77257274810906        8.75     4.50816874888292       <NA>       <NA> #> 8  2.51025810332525         8.5     3.81405782875981       <NA>       <NA> #> 9  4.50906389112999        9.75     3.40520958450622       <NA>       <NA> #> 10 9.16546749890364        9.25     2.31037556058014       <NA>       <NA> #> 11 20.0918226934954         7.5     1.42340458463787       <NA>       <NA> #> 12             <NA>        <NA>                 <NA>       <NA>       <NA> #> 13 1.04819940483122           8     4.30793034474649       <NA>       <NA> #> 14 1.12465363488382        7.75     4.39550004993007       <NA>       <NA> #> 15  1.1412211865025         7.5     4.26526102262503       <NA>       <NA> #> 16 1.19332259679864        7.75     4.39992503269234       <NA>       <NA> #> 17 1.32318939101363        8.25     4.71065693559316       <NA>       <NA> #> 18 1.44297730100026         8.5     4.73058109548506       <NA>       <NA> #> 19 1.87488135377233           8     3.92758859871828       <NA>       <NA> #> 20 2.64342167077991        8.25     3.90559476781353       <NA>       <NA> #> 21 4.91904309588218        9.25     2.96096876130512       <NA>       <NA> #> 22 10.2273499892148          17     2.08670357888453       <NA>       <NA> #> 23 18.0839332643887        11.5     3.55648842432735       <NA>       <NA> #> 24             <NA>        <NA>                 <NA>       <NA>       <NA> #> 25 1.04328175166418           8     4.60779776290479       <NA>       <NA> #> 26 1.14418183024044           8     4.55129483686539       <NA>       <NA> #> 27 1.22327490938218        7.75      4.4794410392064       <NA>       <NA> #> 28 1.31015741375547           8     4.38661587745933       <NA>       <NA> #> 29  1.4877938975221           8     4.32283926399089       <NA>       <NA> #> 30 1.78246407887532        8.25     4.52577946899932       <NA>       <NA> #> 31 2.62239453655115        8.75     4.08506326349422       <NA>       <NA> #> 32 4.67780034765153          10      3.1571834997475       <NA>       <NA> #> 33 10.4467307962486          11     2.02873791757478       <NA>       <NA> #> 34  22.517646053346        3.25    0.360312303214052       <NA>       <NA> #> 35             <NA>        <NA>                 <NA>       <NA>       <NA> #> 36 1.43998919048655        8.25     4.04443691031758       <NA>       <NA> #> 37 1.58779057948534           8     3.82804067304864       <NA>       <NA> #> 38  1.6496764010618        8.25     3.82142548225129       <NA>       <NA> #> 39 1.70578511072749         8.5     4.38688823755813       <NA>       <NA> #> 40 2.00515630839724        8.25     3.82012345118098       <NA>       <NA> #> 41 2.42377317787291         8.5     3.94873893604658       <NA>       <NA> #> 42 3.24593431440024       10.25     3.11186640135601       <NA>       <NA> #> 43 5.94407185428533       12.25     2.42408849877268       <NA>       <NA> #> 44 16.0380308900761          24     5.38757202641424       <NA>       <NA> #> 45             <NA>        <NA>                 <NA>       <NA>       <NA> #> 46             <NA>        <NA>                 <NA>       <NA>       <NA> #> 47             <NA>        <NA>                 <NA>       <NA>       <NA> #> 48 1.46451665982243        8.25     4.19119773178249       <NA>       <NA> #> 49  1.5701958480968           8     3.88261347259863       <NA>       <NA> #> 50   1.653333613741         8.5     3.99775356386729       <NA>       <NA> #> 51 1.74559139560164        8.75     4.18909846810088       <NA>       <NA> #> 52 1.95647414337004        8.25     4.03280031022996       <NA>       <NA> #> 53 2.47872336715896        9.25     3.94692243999472       <NA>       <NA> #> 54 3.31726159609022          10     3.23055456612827       <NA>       <NA> #> 55 6.11396164825873       11.75     2.51249285561969       <NA>       <NA> #> 56  20.498288435619           7    0.972492383477736       <NA>       <NA> #> 57 19.9065342484085        0.25 -0.00415299802760595       <NA>       <NA> #> 58             <NA>        <NA>                 <NA>       <NA>       <NA> #> 59             <NA>        <NA>                 <NA>       <NA>       <NA> #> 60 1.47715318762157           9     4.35766931696615       <NA>       <NA> #> 61 1.64886899050855         8.5     3.94570481742762       <NA>       <NA> #> 62 1.79150633090532         8.5     4.07391267116035       <NA>       <NA> #> 63 1.92475849441034        8.75     4.15828590439087       <NA>       <NA> #> 64 2.30774364146153        8.75     3.71073671828649       <NA>       <NA> #> 65 3.39595439167196         9.5      2.9526728435197       <NA>       <NA> #> 66 5.51877240902137       10.25     2.76107267839902       <NA>       <NA> #> 67 15.2290058111596       13.25     3.24860935983689       <NA>       <NA> #> 68             <NA>        <NA>                 <NA>       <NA>       <NA> #> 69             <NA>        <NA>                 <NA>       <NA>       <NA> #> 70             <NA>        <NA>                 <NA>       <NA>       <NA> #>    tmax2.spline lambda2.spline          y0.spline           A.spline #> 1          <NA>           <NA> 0.0465471444843262   5.52979884221244 #> 2          <NA>           <NA> 0.0533382977411936    3.7694070200615 #> 3          <NA>           <NA> 0.0486784328456658   3.32805839397545 #> 4          <NA>           <NA> 0.0530001747789495   2.75930781941765 #> 5          <NA>           <NA> 0.0557203280177077   2.35801100401821 #> 6          <NA>           <NA> 0.0547403731585836   1.71563310221124 #> 7          <NA>           <NA> 0.0496701921914757    1.2543007453925 #> 8          <NA>           <NA> 0.0564230402606661  0.882463600556873 #> 9          <NA>           <NA> 0.0534667175685377  0.483911960024223 #> 10         <NA>           <NA> 0.0572131034790858  0.214470560835266 #> 11         <NA>           <NA> 0.0506311723727287 0.0916271641185986 #> 12         <NA>           <NA>               <NA>               <NA> #> 13         <NA>           <NA> 0.0497174387105952   6.37783884421763 #> 14         <NA>           <NA> 0.0483369593421061   3.33822086633379 #> 15         <NA>           <NA> 0.0522916640013036   3.57235265253173 #> 16         <NA>           <NA> 0.0488399336312577   2.58939993749152 #> 17         <NA>           <NA> 0.0515295820867689   2.06268550851742 #> 18         <NA>           <NA> 0.0570365078691675    1.9758039446692 #> 19         <NA>           <NA> 0.0519048954956232   1.13796686240253 #> 20         <NA>           <NA> 0.0507010894530693  0.762703349865876 #> 21         <NA>           <NA>  0.050937202850971  0.405643798231285 #> 22         <NA>           <NA> 0.0566729566460991  0.205536765208936 #> 23         <NA>           <NA> 0.0509647180447189 0.0917021319321652 #> 24         <NA>           <NA>               <NA>               <NA> #> 25         <NA>           <NA>  0.049148426752585   5.42250847425908 #> 26         <NA>           <NA> 0.0476880563196249   3.21245835390131 #> 27         <NA>           <NA> 0.0521887364154332    2.5082624300756 #> 28         <NA>           <NA> 0.0527798120063103    2.2218044640572 #> 29         <NA>           <NA> 0.0501177851144232    1.4855291069293 #> 30         <NA>           <NA> 0.0518187363031155   1.17486098579871 #> 31         <NA>           <NA>  0.054007125793619  0.778230228635595 #> 32         <NA>           <NA> 0.0504524376031807  0.415103688420426 #> 33         <NA>           <NA> 0.0513012195061122  0.179939435168671 #> 34         <NA>           <NA>  0.057118837451648 0.0981337698083285 #> 35         <NA>           <NA>               <NA>               <NA> #> 36         <NA>           <NA> 0.0519043094730565   4.25923638315722 #> 37         <NA>           <NA> 0.0469800092548205   2.07222971839885 #> 38         <NA>           <NA>  0.051998423169739   2.10719963527879 #> 39         <NA>           <NA> 0.0573508350283762   2.19788597939405 #> 40         <NA>           <NA> 0.0481788745438287   1.27728334079252 #> 41         <NA>           <NA> 0.0483327119619876   1.00507663932787 #> 42         <NA>           <NA> 0.0476082401089658  0.770042020921615 #> 43         <NA>           <NA> 0.0556482617468234  0.490197847907541 #> 44         <NA>           <NA> 0.0518020639932757  0.115797151400367 #> 45         <NA>           <NA>               <NA>               <NA> #> 46         <NA>           <NA>               <NA>               <NA> #> 47         <NA>           <NA>               <NA>               <NA> #> 48         <NA>           <NA> 0.0508708958217077    3.6789236550133 #> 49         <NA>           <NA>  0.049667892053082   2.32596217044705 #> 50         <NA>           <NA> 0.0474367394929605   2.10599860158464 #> 51         <NA>           <NA> 0.0512841420132326    1.8602503882909 #> 52         <NA>           <NA> 0.0560633446370351   1.57186349756059 #> 53         <NA>           <NA> 0.0544111608174662   1.09536044756488 #> 54         <NA>           <NA> 0.0531588221934935  0.875005836870844 #> 55         <NA>           <NA> 0.0513364462645786  0.419197664195125 #> 56         <NA>           <NA> 0.0533259620469829  0.109531177271938 #> 57         <NA>           <NA> 0.0486936610581194 0.0726811817324566 #> 58         <NA>           <NA>               <NA>               <NA> #> 59         <NA>           <NA>               <NA>               <NA> #> 60         <NA>           <NA> 0.0481563894078176   3.67899469760514 #> 61         <NA>           <NA> 0.0547491087012419    2.3832708089976 #> 62         <NA>           <NA>  0.048119557154864   1.59059703749785 #> 63         <NA>           <NA> 0.0551248409093321   1.69298229700832 #> 64         <NA>           <NA> 0.0572210071382593   1.25607663991691 #> 65         <NA>           <NA> 0.0495670395603675  0.752448668494632 #> 66         <NA>           <NA> 0.0536598586900601  0.490321995115746 #> 67         <NA>           <NA> 0.0476766579002208  0.110550238781246 #> 68         <NA>           <NA>               <NA>               <NA> #> 69         <NA>           <NA>               <NA>               <NA> #> 70         <NA>           <NA>               <NA>               <NA> #>             dY.spline  integral.spline reliable_fit.spline reliable_fit2.spline #> 1    5.48325169772812 76.5558680174924                TRUE                FALSE #> 2    3.71606872232031 67.9085227833956                TRUE                FALSE #> 3    3.27937996112978 67.2917088326823                TRUE                FALSE #> 4    2.70630764463871 63.0113821742086                TRUE                FALSE #> 5     2.3022906760005 60.4680269450973                TRUE                FALSE #> 6    1.66089272905266 53.8977600766611                TRUE                FALSE #> 7    1.20463055320102 49.6339743644353                TRUE                FALSE #> 8   0.826040560296207 41.0019133421373                TRUE                FALSE #> 9   0.430445242455685 29.5838441696217                TRUE                FALSE #> 10   0.15725745735618 16.4680306602713                TRUE                FALSE #> 11 0.0409959917458698 7.83751464713575                TRUE                FALSE #> 12                  0                0               FALSE                FALSE #> 13   6.32812140550704 77.7400724427368                TRUE                FALSE #> 14   3.28988390699169 68.0342622193478                TRUE                FALSE #> 15   3.52006098853042 68.0185910169123                TRUE                FALSE #> 16   2.54056000386026 64.2200350622524                TRUE                FALSE #> 17   2.01115592643065 58.0311480399106                TRUE                FALSE #> 18   1.91876743680004 54.9161363005922                TRUE                FALSE #> 19   1.08606196690691 48.9147927650748                TRUE                FALSE #> 20  0.712002260412807 39.9490471223342                TRUE                FALSE #> 21  0.354706595380314 27.9712821749009                TRUE                FALSE #> 22  0.148863808562837 16.3648687669661                TRUE                FALSE #> 23 0.0407374138874463 7.54688951613162                TRUE                FALSE #> 24                  0                0               FALSE                FALSE #> 25   5.37336004750649 74.6383106577733                TRUE                FALSE #> 26   3.16477029758168 66.9253995959618                TRUE                FALSE #> 27   2.45607369366016  61.843301727804                TRUE                FALSE #> 28   2.16902465205088 60.3570510393327                TRUE                FALSE #> 29   1.43541132181487  53.751248822777                TRUE                FALSE #> 30    1.1230422494956 47.7449916283885                TRUE                FALSE #> 31  0.724223102841976 38.9638685230125                TRUE                FALSE #> 32  0.364651250817245 27.5888211160285                TRUE                FALSE #> 33  0.128638215662559 14.9568645778035                TRUE                FALSE #> 34 0.0410149323566805 6.92782042445053                TRUE                FALSE #> 35                  0                0               FALSE                FALSE #> 36   4.20733207368416 66.9054086539373                TRUE                FALSE #> 37   2.02524970914403 59.3125106806616                TRUE                FALSE #> 38   2.05520121210905 58.1457822957746                TRUE                FALSE #> 39   2.14053514436568 54.3975068436711                TRUE                FALSE #> 40   1.22910446624869 49.8844302323225                TRUE                FALSE #> 41  0.956743927365884 44.1387361570339                TRUE                FALSE #> 42   0.72243378081265 39.2137501648286                TRUE                FALSE #> 43  0.434549586160718 26.6662680570455                TRUE                FALSE #> 44 0.0639950874070916 9.54663846425962                TRUE                FALSE #> 45                  0                0               FALSE                FALSE #> 46                  0                0               FALSE                FALSE #> 47                  0                0               FALSE                FALSE #> 48   3.62805275919159 64.7355340576032                TRUE                FALSE #> 49   2.27629427839397 60.1984575533582                TRUE                FALSE #> 50   2.05856186209168 58.2889686198368                TRUE                FALSE #> 51   1.80896624627767  54.910050713792                TRUE                FALSE #> 52   1.51580015292356 50.1321609868202                TRUE                FALSE #> 53   1.04094928674742 43.0340622537188                TRUE                FALSE #> 54   0.82184701467735  38.707773080231                TRUE                FALSE #> 55  0.367861217930547 25.5987975090785                TRUE                FALSE #> 56 0.0562052152249549 8.42864631136653                TRUE                FALSE #> 57 0.0239875206743373 5.45410723541952                TRUE                FALSE #> 58                  0                0               FALSE                FALSE #> 59                  0                0               FALSE                FALSE #> 60   3.63083830819732 64.4968216992539                TRUE                FALSE #> 61   2.32852170029636 58.1991790951656                TRUE                FALSE #> 62   1.54247748034298 53.5105635184233                TRUE                FALSE #> 63   1.63785745609899 51.2175510245905                TRUE                FALSE #> 64   1.19885563277865 45.9295861753245                TRUE                FALSE #> 65  0.702881628934265 38.5683965599101                TRUE                FALSE #> 66  0.436662136425686 27.3856233707636                TRUE                FALSE #> 67 0.0628735808810251 9.48354805155833                TRUE                FALSE #> 68                  0                0               FALSE                FALSE #> 69                  0                0               FALSE                FALSE #> 70                  0                0               FALSE                FALSE #>    smooth.spline              mu.bt        lambda.bt               A.bt #> 1           0.55  0.657678798198807 4.21708665489921   5.55729235674458 #> 2           0.55   0.63077262939975 4.60029845173071   3.77296953850242 #> 3           0.55   0.61538406282643 4.60462825880231   3.35507543984136 #> 4           0.55  0.572264347441073 4.52938669084054   2.75653136239777 #> 5           0.55  0.532693057951495 4.25905229970212   2.36321103320168 #> 6           0.55  0.466537000968285 4.57465190145471   1.71157045010839 #> 7           0.55  0.389630336729804 4.48635961250085   1.25733639004408 #> 8           0.55  0.275297768699796 3.81277527588068  0.876744839395347 #> 9           0.55  0.153618384757932  3.3734909333538  0.475228971773018 #> 10          0.55  0.077155726131672 2.45383961719285  0.214144197127498 #> 11          0.55 0.0390101143677938 2.38972306259067 0.0911020775059379 #> 12          0.55               <NA>             <NA>               <NA> #> 13          0.55  0.660333137042088 4.30394426538871   6.39692728775699 #> 14          0.55  0.611768580812173 4.37759842356737     3.345414050502 #> 15          0.55  0.605034241247616 4.25621502660915   3.58211217912927 #> 16          0.55  0.579912999320551 4.38892240448627   2.58368769306802 #> 17          0.55  0.523618039383255 4.70832766241122   2.06133348775625 #> 18          0.55  0.478580309144227 4.72153880033178   1.97790249603715 #> 19          0.55  0.371089098441277 3.94728993456193   1.14435732495547 #> 20          0.55  0.264215523560889 3.94322558111123  0.763812350172315 #> 21          0.55  0.144379040127981 3.10773428055113  0.398553094883746 #> 22          0.55 0.0727924315045134 2.21271528106393  0.202836707554051 #> 23          0.55 0.0407442030742513 2.60119774765799 0.0920838850570665 #> 24          0.55               <NA>             <NA>               <NA> #> 25          0.55  0.663027782147242  4.5977407403537    5.4353331772246 #> 26          0.55  0.606272605907911 4.55888148897188   3.21815352312863 #> 27          0.55  0.565347822030675  4.4770032542534   2.51546998742186 #> 28          0.55  0.527592099156104 4.36382277139344   2.22278153569987 #> 29          0.55  0.464398784692175 4.32187193868109   1.48553892017485 #> 30          0.55  0.387512254564561 4.51105372408658   1.17764827933781 #> 31          0.55  0.265703254143204 4.09546531146542  0.778599884700213 #> 32          0.55  0.150065125497674 3.29014524510202   0.40833948822367 #> 33          0.55 0.0701882424029937 2.59258009272203  0.178915702655009 #> 34          0.55 0.0343052422505264 1.69174764845145 0.0980437791643925 #> 35          0.55               <NA>             <NA>               <NA> #> 36          0.55  0.481994476016063 4.05727538868128   4.26745469683884 #> 37          0.55  0.437072179394605 3.83829217050201    2.0606337154085 #> 38          0.55  0.419596685025274  3.8099743813283   2.11288694316656 #> 39          0.55  0.405952002722404  4.4013137071292   2.20261003475495 #> 40          0.55  0.343357072440932 3.80183306101484   1.27912580830318 #> 41          0.55  0.286397108456303  3.9595593472074   1.00605914314804 #> 42          0.55  0.218033752427535 3.23610260463993  0.762077249428226 #> 43          0.55  0.118822414978554 2.52601529663792  0.476755787522698 #> 44          0.55 0.0429569813171354 1.92601732878346  0.113539547545993 #> 45          0.55               <NA>             <NA>               <NA> #> 46          0.55               <NA>             <NA>               <NA> #> 47          0.55               <NA>             <NA>               <NA> #> 48          0.55  0.473742715246997  4.2075113295955   3.70356650560181 #> 49          0.55   0.44118824855348 3.88184357225839   2.34545798787516 #> 50          0.55  0.419748863173912  4.0068565204713   2.09858223863366 #> 51          0.55  0.397051869136036 4.17410839470894   1.87493739904988 #> 52          0.55  0.352554914936477 4.01717586307896   1.56688433466666 #> 53          0.55  0.279093343773966 3.96265755485597   1.09988286067575 #> 54          0.55  0.211219458617108 3.30463160166183  0.870910892308202 #> 55          0.55  0.119743452305747 3.00016325620478  0.408045924456367 #> 56          0.55  0.039999494637767  2.7845408495452  0.108259493745975 #> 57          0.55 0.0383430733677294              NaN 0.0717558815633507 #> 58          0.55               <NA>             <NA>               <NA> #> 59          0.55               <NA>             <NA>               <NA> #> 60          0.55  0.469056124943758 4.36034992996389   3.65826323107169 #> 61          0.55  0.421198174362941 3.96285451965761   2.38786015751404 #> 62          0.55  0.386212820752883 4.06678551610668   1.59150278801417 #> 63          0.55  0.360125806022794 4.16128093583657      1.70086593636 #> 64          0.55  0.298596975761729 3.68779362559498   1.25158967506217 #> 65          0.55  0.205050425127633 2.97747748700061  0.757325786799833 #> 66          0.55  0.124293120929156 2.64594131657161   0.48039580560368 #> 67          0.55 0.0472410749819573 3.38367438284068  0.109464659355647 #> 68          0.55               <NA>             <NA>               <NA> #> 69          0.55               <NA>             <NA>               <NA> #> 70          0.55               <NA>             <NA>               <NA> #>                 dY.bt      integral.bt            stdmu.bt       stdlambda.bt #> 1    5.51049332589789 75.0258658060827 0.00570519313275861 0.0357154965913482 #> 2    3.71946576289082 66.3710090809159 0.00442428509874642 0.0251325248854114 #> 3    3.30640041704668 65.6070057304318 0.00888555184644188 0.0488557861086568 #> 4     2.7034990215555 61.1947809412917 0.00482710731933069 0.0276740857130167 #> 5    2.30737088398133 59.1514543936874 0.00518722064534964 0.0398771098192332 #> 6    1.65670158409452 52.5206007921101 0.00455358860079425 0.0383663390749878 #> 7    1.20775490290814 48.2574108852873  0.0028987368142268 0.0329478475448777 #> 8   0.820109623947135 39.8873121681083 0.00322088998483785 0.0557094274113245 #> 9   0.421974167672031 28.6902341339385 0.00237741821935107  0.110541862140304 #> 10  0.156938537475852 16.0444779725056 0.00454348124496593  0.391091809101387 #> 11 0.0405278266387991 7.59259857600786 0.00213711818117975    1.3623456571831 #> 12               <NA>             <NA>                <NA>               <NA> #> 13   6.34724279997236 75.8544212042691 0.00426837941473712  0.023975337485042 #> 14   3.29695425784276 66.5588258280924 0.00504824117111638 0.0268065651427271 #> 15   3.52963763876211 66.2432629174296 0.00403014367506039 0.0249599321200184 #> 16   2.53498340604203 62.9727581408633 0.00546456454134492 0.0346354511965447 #> 17   2.00981962350326 56.3236760167403 0.00774971678010588 0.0478975262347294 #> 18   1.92077099624367   53.76762886584 0.00386277033320591 0.0325287315653349 #> 19   1.09241012531263 47.8381129629244  0.0036538875160827  0.046135414955695 #> 20  0.713107220624938 38.7979806745537 0.00281667749390395 0.0539874288158012 #> 21  0.347682316640022 27.1760335561629 0.00367178862033453  0.178299141874903 #> 22    0.1460700461322 15.8057141092518 0.00350351221484014  0.618926308801932 #> 23  0.041095528959867 7.36762049963127 0.00351269416749906   1.11255726645842 #> 24               <NA>             <NA>                <NA>               <NA> #> 25   5.38633432025609 73.1059162854767 0.00578981265889768 0.0302304008528353 #> 26   3.17040734894097 65.5036817147891 0.00397540320006405 0.0265727614874516 #> 27   2.46312978816402 60.3600667089333 0.00327812552023271 0.0224887199810351 #> 28   2.17031942508018 58.9027219941971 0.00396540831079786 0.0334208414022535 #> 29   1.43520053039464 52.4463268523111 0.00321991232985944 0.0278213025662948 #> 30   1.12576095887415 46.3542359789725 0.00284918431411196  0.030436669614634 #> 31  0.724692971489889 37.8922796930296 0.00315801072681922 0.0687368306162825 #> 32  0.357623703600587 26.7285393284391 0.00340617975273884  0.182921978720392 #> 33  0.127348811219507 14.5941747209699  0.0033599420764002  0.413074613273744 #> 34 0.0409446803438576 6.72788378981057 0.00291609231207423   1.93390963097117 #> 35               <NA>             <NA>                <NA>               <NA> #> 36   4.21534600988873 65.3138830974454 0.00789868877862178 0.0735868306149272 #> 37   2.01348730992797 57.6611625036056 0.00209294105496415 0.0261290602795964 #> 38   2.06100887995622 56.8590933188068 0.00247985448390216 0.0267617920622705 #> 39   2.14486025085984 53.0904626812518 0.00492780545517992 0.0566208326172412 #> 40    1.2307235408531 48.6187824414137 0.00274459536763206 0.0351092062766811 #> 41  0.957677356673703 43.0866819353115 0.00120379341872667 0.0248334660196745 #> 42  0.714414262078604 38.3454526702929 0.00280202919866935  0.110511900283136 #> 43  0.421157828334137 25.7726236194853 0.00290389448550954  0.256542340859267 #> 44 0.0616244814840884 9.21290740487937 0.00245745599812889   2.33208614109867 #> 45               <NA>             <NA>                <NA>               <NA> #> 46               <NA>             <NA>                <NA>               <NA> #> 47               <NA>             <NA>                <NA>               <NA> #> 48   3.65228618105319 63.3090330941361 0.00304874350817551 0.0336381792880383 #> 49   2.29576500200347  58.724786507096  0.0037366358416008  0.034095059711345 #> 50   2.05105435883431 56.8812307125956 0.00246659718825504  0.027882542421511 #> 51    1.8239132264594  53.887731714192 0.00389419997064018 0.0541498154534646 #> 52   1.51075340193642 48.8521613902483 0.00420649567774132 0.0482610854638142 #> 53   1.04509927110882 41.4633507857283 0.00316306341359156 0.0592832255834476 #> 54  0.817696812136852  37.491915771136 0.00318812345196766 0.0989075150926867 #> 55   0.35681183853051 24.6829570249036 0.00567364921962377  0.443958889705452 #> 56 0.0548967234167161 8.11440984592623 0.00230972967514011   2.22118123778315 #> 57 0.0208581117850142 5.31549230180034 0.00607662176276963               <NA> #> 58               <NA>             <NA>                <NA>               <NA> #> 59               <NA>             <NA>                <NA>               <NA> #> 60   3.60999692290823 62.7774866709206 0.00301552418368964 0.0331115883396152 #> 61   2.33295240086185 56.6026056426511 0.00477762105165793 0.0550714009756169 #> 62   1.54338800529757 52.3261464816654 0.00265253441910729 0.0317705458742929 #> 63   1.64568923825595 49.9451104808896 0.00245827806738549 0.0369682532330549 #> 64   1.19420328762396 44.6577448074582 0.00406247573280649 0.0680177167383161 #> 65  0.707796839827393  37.713863122105 0.00147716436895213 0.0522294692970689 #> 66   0.42693045912397 26.4285899544731 0.00245016493577854  0.148039645312156 #> 67 0.0614004326111693 9.21859426159922 0.00286714405676089   1.33760229299522 #> 68               <NA>             <NA>                <NA>               <NA> #> 69               <NA>             <NA>                <NA>               <NA> #> 70               <NA>             <NA>                <NA>               <NA> #>                 stdA.bt             stddY.bt     stdintegral.bt reliable_fit.bt #> 1    0.0103764422900407   0.0103192094986725  0.679071323089382            TRUE #> 2    0.0141034524774942   0.0141181276322964  0.939135351735894            TRUE #> 3    0.0161812492281359   0.0162273882758778   1.31062163725556            TRUE #> 4   0.00727896631491438  0.00726365607546423   1.30984442260193            TRUE #> 5   0.00619552875734612  0.00626869048841411  0.682378022374886            TRUE #> 6   0.00718812652009888  0.00717056364925648  0.766518014066344            TRUE #> 7   0.00379914895112322  0.00380784346581459  0.832287308656595            TRUE #> 8   0.00187370091012184   0.0019111067248914  0.567621239574317            TRUE #> 9   0.00441280692230578  0.00444723321906502  0.482346332330703            TRUE #> 10  0.00242867321395672  0.00239394125130328  0.239278720694975            TRUE #> 11 0.000458153720562999 0.000564411938198384  0.134878562269507            TRUE #> 12                 <NA>                 <NA>               <NA>            <NA> #> 13   0.0271316397036562   0.0271379309915104   1.08265786961026            TRUE #> 14  0.00907669608704512  0.00912438772899868  0.638471880477216            TRUE #> 15   0.0147497512923477   0.0146842702846106   1.22642180363465            TRUE #> 16   0.0100981801793283   0.0101172890785025  0.440104575010331            TRUE #> 17  0.00847785102020302  0.00849984516709534  0.992430752979272            TRUE #> 18  0.00705037993188936  0.00704638420371011  0.495046550451282            TRUE #> 19  0.00859370050450417  0.00859612524986817   0.52735951685105            TRUE #> 20  0.00382488080108372  0.00376627795064065  0.737460901712982            TRUE #> 21  0.00123829528037374  0.00125884966590851  0.508407320787439            TRUE #> 22  0.00185739490829246  0.00189751069184328  0.434196011604332            TRUE #> 23 0.000448613799222666 0.000472322041884065 0.0986278792346063            TRUE #> 24                 <NA>                 <NA>               <NA>            <NA> #> 25   0.0212209390413118   0.0211949877025982  0.689283294968921            TRUE #> 26   0.0124044682659001   0.0124200573277147  0.628856135412378            TRUE #> 27   0.0119366090418516    0.012028092141977   0.94440415021653            TRUE #> 28   0.0112236097578843    0.011120736916313  0.760846864823978            TRUE #> 29  0.00707249261942883  0.00707210010055406  0.755975532086851            TRUE #> 30    0.004842441742672  0.00477243738056945   1.01593687529203            TRUE #> 31  0.00450855323684353  0.00445812615748383  0.725708597554938            TRUE #> 32  0.00301808655735241  0.00303044113133592  0.453863228958116            TRUE #> 33  0.00112595870526889  0.00116417959921887  0.120039892617592            TRUE #> 34 0.000607155031671628 0.000633498943477578 0.0860969133061277            TRUE #> 35                 <NA>                 <NA>               <NA>            <NA> #> 36   0.0205053652783355    0.020567170971383  0.657089316774296            TRUE #> 37  0.00880856520712228  0.00886943484427167   1.09575296875056            TRUE #> 38  0.00567374083230358  0.00568150844028448  0.638856679954565            TRUE #> 39  0.00731530994959056  0.00738342668498758  0.807580732478802            TRUE #> 40  0.00651430811523145  0.00653014271377656  0.713364236613822            TRUE #> 41  0.00531486040698652  0.00530489615716728  0.509072056006978            TRUE #> 42  0.00741651248100029  0.00747671157654204  0.309531813583398            TRUE #> 43  0.00590008093283134  0.00586378034696609  0.460610942538436            TRUE #> 44  0.00176893764086177  0.00173766120047871  0.207332428597714            TRUE #> 45                 <NA>                 <NA>               <NA>            <NA> #> 46                 <NA>                 <NA>               <NA>            <NA> #> 47                 <NA>                 <NA>               <NA>            <NA> #> 48   0.0212205624884468   0.0212463930092738  0.624494858024449            TRUE #> 49   0.0185060274133435    0.018504494396628  0.923919835442208            TRUE #> 50  0.00884066540856319  0.00881135700474778  0.575951134261215            TRUE #> 51  0.00384530175697301  0.00393815371890232  0.450823081473552            TRUE #> 52   0.0104928560986455   0.0104139313077618  0.684500588265604            TRUE #> 53  0.00966895115700934  0.00972993903329927   1.16054586576922            TRUE #> 54  0.00888836459193605  0.00888806327100299   1.09778386944865            TRUE #> 55  0.00834746336098098  0.00829712971987646  0.555125704511241            TRUE #> 56 0.000829757180213218 0.000888175808722631  0.175631457498713            TRUE #> 57 0.000292733429208866   0.0071428709204557 0.0600973093465391            TRUE #> 58                 <NA>                 <NA>               <NA>            <NA> #> 59                 <NA>                 <NA>               <NA>            <NA> #> 60    0.013283819724987    0.013356050102655   0.81089759805547            TRUE #> 61  0.00488015711803964  0.00487786116025367  0.968451304250923            TRUE #> 62  0.00714625818622247  0.00712257844189901  0.492497705156764            TRUE #> 63  0.00978166450449713    0.009774210069228  0.708949486082716            TRUE #> 64  0.00777414045769204  0.00770756239258465   0.80675218541451            TRUE #> 65  0.00175859454633939  0.00176633900538594  0.301206621156235            TRUE #> 66   0.0127963898063235   0.0128205788065159  0.645810707640367            TRUE #> 67 0.000566818291442614  0.00069642914129252  0.121154849843751            TRUE #> 68                 <NA>                 <NA>               <NA>            <NA> #> 69                 <NA>                 <NA>               <NA>            <NA> #> 70                 <NA>                 <NA>               <NA>            <NA> #>         ci90.mu.bt.lo      ci90.mu.bt.up  ci90.lambda.bt.lo ci90.lambda.bt.up #> 1   0.648293755495419  0.667063840902195   4.15833466300645  4.27583864679198 #> 2   0.623494680412312  0.638050578387188   4.55895544829421  4.64164145516721 #> 3   0.600767330039033  0.630000795613826   4.52426049065357  4.68499602695105 #> 4   0.564323755900774  0.580204938981372   4.48386281984263  4.57491056183845 #> 5   0.524160079989895  0.541226035913095   4.19345445404948  4.32465014535476 #> 6   0.459046347719978  0.474027654216591   4.51153927367636  4.63776452923307 #> 7   0.384861914670401  0.394398758789207   4.43216040328952  4.54055882171217 #> 8   0.269999404674737  0.280596132724854   3.72113326778905  3.90441728397231 #> 9   0.149707531787099  0.157529237728764     3.191649570133  3.55533229657459 #> 10  0.069681699483703 0.0846297527796409   1.81049359122107  3.09718564316463 #> 11 0.0354945549597531 0.0425256737758345  0.148664456524472  4.63078166865687 #> 12               <NA>               <NA>               <NA>              <NA> #> 13  0.653311652904845   0.66735462117933   4.26450483522582   4.3433836955516 #> 14  0.603464224085687   0.62007293753866   4.33350162390758  4.42169522322716 #> 15  0.598404654902142  0.611663827593091   4.21515593827172  4.29727411494658 #> 16  0.570923790650039  0.588902207991064   4.33194708726795  4.44589772170459 #> 17  0.510869755279981  0.536366323486529   4.62953623175509  4.78711909306735 #> 18  0.472226051946103   0.48493456634235    4.6680290369068  4.77504856375676 #> 19  0.365078453477321  0.377099743405233   3.87139717695981  4.02318269216405 #> 20  0.259582089083417  0.268848958038361   3.85441626070924  4.03203490151322 #> 21  0.138338947847531  0.150419132408432   2.81443219216692  3.40103636893535 #> 22 0.0670291539111013 0.0785557090979254   1.19458150308475  3.23084905904311 #> 23 0.0349658211687153 0.0465225849797872  0.771041044333891   4.4313544509821 #> 24               <NA>               <NA>               <NA>              <NA> #> 25  0.653503540323355  0.672552023971128   4.54801173095078  4.64746974975661 #> 26  0.599733067643806  0.612812144172017   4.51516929632502  4.60259368161874 #> 27  0.559955305549892  0.570740338511458    4.4400093098846   4.5139971986222 #> 28  0.521069002484841  0.534115195827366   4.30884548728673  4.41880005550014 #> 29  0.459102028909556  0.469695540474794   4.27610589595954  4.36763798140265 #> 30  0.382825346367846  0.392199162761275   4.46098540257051  4.56112204560266 #> 31  0.260508326497586  0.270898181788821   3.98239322510164   4.2085373978292 #> 32  0.144461959804419   0.15566829119093   2.98923859010697  3.59105190009706 #> 33 0.0646611376873154 0.0757153471186721   1.91307235388672  3.27208783155734 #> 34 0.0295082703971643 0.0391022141038885  -1.48953369449612  4.87302899139902 #> 35               <NA>               <NA>               <NA>              <NA> #> 36   0.46900113297523  0.494987819056896   3.93622505231973  4.17832572504284 #> 37  0.433629291359189  0.440515067430021   3.79530986634207  3.88127447466195 #> 38  0.415517324399255  0.423676045651293   3.76595123338587  3.85399752927074 #> 39  0.397845762748633  0.414058242696175   4.30817243747383  4.49445497678456 #> 40  0.338842213061177  0.347871931820686    3.7440784166897  3.85958770533998 #> 41  0.284416868282498  0.288377348630108   3.91870829560504  4.00041039880976 #> 42  0.213424414395724  0.222643090459346   3.05431052867417  3.41789468060569 #> 43  0.114045508549891  0.123599321407217   2.10400314592443  2.94802744735142 #> 44 0.0389144662002133 0.0469994964340574  -1.91026437332385  5.76229903089077 #> 45               <NA>               <NA>               <NA>              <NA> #> 46               <NA>               <NA>               <NA>              <NA> #> 47               <NA>               <NA>               <NA>              <NA> #> 48  0.468727532176048  0.478757898317945   4.15217652466668  4.26284613452432 #> 49  0.435041482594047  0.447335014512913   3.82575719903323  3.93792994548356 #> 50  0.415691310799233  0.423806415548592   3.96098973818791  4.05272330275469 #> 51  0.390645910184333  0.403457828087739   4.08503194828799  4.26318484112989 #> 52  0.345635229546593  0.359474600326362   3.93778637749099  4.09656534866694 #> 53  0.273890104458608  0.284296583089324   3.86513664877119  4.06017846094074 #> 54  0.205974995538621  0.216463921695595   3.14192873933436   3.4673344639893 #> 55  0.110410299339466  0.129076605272028   2.26985088263931  3.73047562977025 #> 56 0.0361999893221615 0.0437989999533724 -0.869302286608084  6.43838398569848 #> 57 0.0283470305679734 0.0483391161674855                NaN               NaN #> 58               <NA>               <NA>               <NA>              <NA> #> 59               <NA>               <NA>               <NA>              <NA> #> 60  0.464095587661589  0.474016662225928   4.30588136714522  4.41481849278255 #> 61  0.413338987732964  0.429057360992918   3.87226206505272   4.0534469742625 #> 62  0.381849401633452  0.390576239872315   4.01452296814346  4.11904806406989 #> 63  0.356081938601945  0.364169673443643   4.10046815926819  4.22209371240494 #> 64  0.291914203181262  0.305279748342196   3.57590448156045  3.79968276962951 #> 65  0.202620489740707  0.207480360514559   2.89156001000694  3.06339496399429 #> 66    0.1202625996098  0.128323642248512   2.40241610003311  2.88946653311011 #> 67 0.0425246230085857  0.051957526955329   1.18331861086353  5.58403015481782 #> 68               <NA>               <NA>               <NA>              <NA> #> 69               <NA>               <NA>               <NA>              <NA> #> 70               <NA>               <NA>               <NA>              <NA> #>          ci90.A.bt.lo       ci90.A.bt.up ci90.integral.bt.lo #> 1    5.54022310917746   5.57436160431169    73.9087934796007 #> 2    3.74976935917694    3.7961697178279    64.8261314273104 #> 3    3.32845728486108   3.38169359482164    63.4510331371464 #> 4    2.74455746280974   2.76850526198581    59.0400868661116 #> 5    2.35301938839584   2.37340267800751    58.0289425468807 #> 6    1.69974598198283   1.72339491823396    51.2596786589709 #> 7    1.25108679001948   1.26358599006868    46.8882982625472 #> 8   0.873662601398197  0.879827077392498    38.9535752290085 #> 9   0.467969904385825  0.482488039160211    27.8967744172545 #> 10  0.210149029690539  0.218139364564457    15.6508644769624 #> 11 0.0903484146356117  0.091855740376264    7.37072334107452 #> 12               <NA>               <NA>                <NA> #> 13   6.35229574044447    6.4415588350695    74.0734490087603 #> 14   3.33048288543881   3.36034521556519    65.5085395847074 #> 15   3.55784883825336   3.60637552000518    64.2257990504506 #> 16   2.56707618667303   2.60029919946302    62.2487861149713 #> 17   2.04738742282801   2.07527955268448    54.6911274280894 #> 18   1.96630462104919   1.98950037102511    52.9532772903477 #> 19   1.13022068762556   1.15849396228538    46.9706065577044 #> 20  0.757520421254532  0.770104279090098    37.5848574912358 #> 21  0.396516099147531  0.400590090619961    26.3397035134676 #> 22   0.19978129292991  0.205892122178193    15.0914616701626 #> 23 0.0913459153573452 0.0928218547567878    7.20537763829034 #> 24               <NA>               <NA>                <NA> #> 25   5.40042473250165   5.47024162194756    71.9720452652528 #> 26   3.19774817283123   3.23855887342604    64.4692133720357 #> 27   2.49583426554802   2.53510570929571    58.8065218818271 #> 28   2.20431869764815   2.24124437375159    57.6511289015617 #> 29   1.47390466981589   1.49717317053381    51.2027471020283 #> 30   1.16968246267111    1.1856140960045    44.6830198191171 #> 31  0.771183314625605   0.78601645477482    36.6984890500517 #> 32  0.403374735836825  0.413304240610515     25.981934316803 #> 33  0.177063500584841  0.180767904725176     14.396709097614 #> 34 0.0970450091372927 0.0990425491914923    6.58625436742199 #> 35               <NA>               <NA>                <NA> #> 36   4.23372337095597    4.3011860227217    64.2329711713517 #> 37   2.04614362564278   2.07512380517422    55.8586488700109 #> 38   2.10355363949742    2.1222202468357    55.8081740802815 #> 39   2.19057634988787   2.21464371962202    51.7619923763241 #> 40   1.26840977145362   1.28984184515273     47.445298272184 #> 41  0.997316197778544   1.01480208851753      42.24925840318 #> 42   0.74987708639698  0.774277412459471    37.8362728369482 #> 43  0.467050154388191  0.486461420657206    25.0149186190096 #> 44  0.110629645126776  0.116449449965211    8.87184555983613 #> 45               <NA>               <NA>                <NA> #> 46               <NA>               <NA>                <NA> #> 47               <NA>               <NA>                <NA> #> 48   3.66865868030831    3.7384743308953    62.2817390526859 #> 49   2.31501557278021   2.37590040297011    57.2049383777935 #> 50   2.08403934403657   2.11312513323075    55.9337910967359 #> 51   1.86861187765966    1.8812629204401     53.146127745168 #> 52   1.54962358638438   1.58414508294893    47.7261579225513 #> 53   1.08397743602247   1.11578828532903    39.5542528365379 #> 54  0.856289532554467  0.885532252061937     35.686061305893 #> 55  0.394314347227553   0.42177750168518    23.7697752409827 #> 56  0.106894543184524  0.109624444307426    7.82549609834085 #> 57 0.0712743350723021 0.0722374280543993    5.21663222792528 #> 58               <NA>               <NA>                <NA> #> 59               <NA>               <NA>                <NA> #> 60   3.63641134762409    3.6801151145193    61.4435601221194 #> 61   2.37983229905486   2.39588801597321    55.0095032471583 #> 62   1.57974719329783   1.60325838273051    51.5159877566825 #> 63    1.6847750982501   1.71695677446989    48.7788885762835 #> 64   1.23880121400927   1.26437813611508    43.3306374624514 #> 65  0.754432898771105  0.760218674828561    37.2183782303029 #> 66  0.459345744372278  0.501445866835082    25.3662313404047 #> 67  0.108532243266224   0.11039707544507    9.01929453360625 #> 68               <NA>               <NA>                <NA> #> 69               <NA>               <NA>                <NA> #> 70               <NA>               <NA>                <NA> #>    ci90.integral.bt.up      ci95.mu.bt.lo      ci95.mu.bt.up  ci95.lambda.bt.lo #> 1     76.1429381325647    0.6464966196586  0.668860976739014   4.14708428158017 #> 2     67.9158867345215  0.622101030606207  0.639444228193293    4.5510387029553 #> 3     67.7629783237172  0.597968381207404  0.632799744445456   4.50887091802934 #> 4     63.3494750164719  0.562803217095185  0.581725477786961   4.47514548284303 #> 5     60.2739662404941   0.52252610548661   0.54286001041638   4.18089316445642 #> 6     53.7815229252492  0.457611967310728  0.475462034625842   4.49945387686774 #> 7     49.6265235080274   0.38394881257392  0.395311860885689   4.42178183131289 #> 8      40.821049107208  0.268984824329513  0.281610713070078   3.70358479815449 #> 9     29.4836938506225  0.148958645048004   0.15827812446786    3.1568288835588 #> 10    16.4380914680489 0.0682505028915388 0.0860609493718052   1.68729967135413 #> 11     7.8144738109412 0.0348213627326815 0.0431988660029061 -0.280474425488204 #> 12                <NA>               <NA>               <NA>               <NA> #> 13     77.635393399778  0.651967113389203  0.668699160694972   4.25695260391803 #> 14    67.6091120714775  0.601874028116785  0.621663133507561   4.32505755588762 #> 15    68.2607267844086  0.597135159644498  0.612933322850735   4.20729355965391 #> 16    63.6967301667553  0.569202452819515  0.590623545821587   4.32103692014104 #> 17    57.9562246053912  0.508428594494248  0.538807484272263   4.61444851099115 #> 18    54.5819804413324  0.471009279291143   0.48615133899731   4.65778248646372 #> 19    48.7056193681443  0.363927478909755  0.378250717972799   3.85686452124877 #> 20    40.0111038578715  0.258694835672837   0.26973621144894   3.83741022063226 #> 21    28.0123635988583  0.137182334432126  0.151575745823837   2.75826796247632 #> 22    16.5199665483409 0.0659255475634267 0.0796593154456001  0.999619715812143 #> 23    7.52986336097219 0.0338593225059531 0.0476290836425494  0.420585505399488 #> 24                <NA>               <NA>               <NA>               <NA> #> 25    74.2397873057006  0.651679749335802  0.674375814958681   4.53848915468214 #> 26    66.5381500575425  0.598480815635786  0.614064396180037   4.50679887645647 #> 27    61.9136115360395  0.558922696011019  0.571772948050331   4.43292536309057 #> 28    60.1543150868326   0.51981989886694  0.535364299445268   4.29831792224502 #> 29     53.689906602594   0.45808775652565  0.470709812858699   4.26734218565116 #> 30    48.0254521388279  0.381927853308901   0.39309665582022    4.4513978516419 #> 31    39.0860703360074  0.259513553118638   0.27189295516777   3.96074112345751 #> 32    27.4751443400752  0.143389013182306  0.156741237813042   2.93161816681005 #> 33    14.7916403443258 0.0636027559332493 0.0767737288727381   1.78295385070549 #> 34    6.86951321219915 0.0285897013188609 0.0400207831821918  -2.09871522825204 #> 35                <NA>               <NA>               <NA>               <NA> #> 36    66.3947950235391  0.466513046009965  0.497475906022162   3.91304520067602 #> 37    59.4636761372002  0.432970014926876  0.441174343862335     3.787079212354 #> 38    57.9100125573321  0.414736170236826  0.424457199813722   3.75752126888625 #> 39    54.4189329861794  0.396293504030252  0.415610501414557    4.2903368751994 #> 40    49.7922666106434  0.337977665520373   0.34873647936149   3.73301901671255 #> 41     43.924105467443  0.284037673355599  0.288756543557007   3.91088575380884 #> 42    38.8546325036376  0.212541775198143  0.223525729656927   3.01949928008498 #> 43    26.5303286199611  0.113130781786955  0.124514048170152   2.02319230855376 #> 44    9.55396924992261 0.0381403675608027  0.047773595073468  -2.64487150776993 #> 45                <NA>               <NA>               <NA>               <NA> #> 46                <NA>               <NA>               <NA>               <NA> #> 47                <NA>               <NA>               <NA>               <NA> #> 48    64.3363271355864  0.467767177970973  0.479718252523021   4.14158049819095 #> 49    60.2446346363984  0.433864442303942  0.448512054803018   3.81501725522416 #> 50    57.8286703284553  0.414914332684933  0.424583393662892   3.95220673732514 #> 51     54.629335683216  0.389419237193581  0.404684501078491   4.06797475642015 #> 52    49.9781648579452  0.344310183408104   0.36079964646485   3.92258413556989 #> 53    43.3724487349186  0.272893739483327  0.285292948064605   3.84646243271241 #> 54     39.297770236379  0.204970736651251  0.217468180582964   3.11077287208016 #> 55    25.5961388088246  0.108623099835285   0.13086380477621    2.1300038323821 #> 56    8.40332359351161 0.0354724244744923 0.0445265648010416  -1.56897437650978 #> 57    5.41435237567539  0.026432894712701 0.0502532520227579                NaN #> 58                <NA>               <NA>               <NA>               <NA> #> 59                <NA>               <NA>               <NA>               <NA> #> 60    64.1114132197219  0.463145697543726   0.47496655234379   4.29545121681824 #> 61    58.1957080381438  0.411834037101691  0.430562311624191    3.8549145737454 #> 62    53.1363052066483  0.381013853291433  0.391411788214334   4.00451524619306 #> 63    51.1113323854957  0.355307581010718  0.364944031034869   4.08882315949978 #> 64    45.9848521524651  0.290634523325428   0.30655942819803   3.55447890078788 #> 65     38.209348013907  0.202155182964487  0.207945667290779   2.87510772717836 #> 66    27.4909485685416   0.11949079765503  0.129095444203282   2.35578361175978 #> 67    9.41789398959219  0.041621472630706 0.0528606773332087  0.761973888570037 #> 68                <NA>               <NA>               <NA>               <NA> #> 69                <NA>               <NA>               <NA>               <NA> #> 70                <NA>               <NA>               <NA>               <NA> #>    ci95.lambda.bt.up       ci95.A.bt.lo       ci95.A.bt.up ci95.integral.bt.lo #> 1   4.28708902821826    5.5369545298561   5.57763018363306    73.6948860128275 #> 2   4.64955820050612   3.74532677164653   3.80061230535831    64.5303037915136 #> 3   4.70038559957527   3.32336019135421   3.38679068832851    63.0381873214109 #> 4   4.58362789883806   2.74226458842054     2.770798136375     58.627485872992 #> 5   4.33721143494782   2.35106779683728   2.37535426956607    57.8139934698326 #> 6   4.64984992604169     1.697481722129   1.72565917808779      51.01822548454 #> 7   4.55093739368881   1.24989005809988   1.26478272198828    46.6261277603203 #> 8   3.92196575360688  0.873072385611508  0.880417293179186    38.7747745385426 #> 9   3.59015298314879  0.466579870205299  0.483878073340738    27.7448353225703 #> 10  3.22037956303157  0.209383997628143  0.218904396626853    15.5754916799435 #> 11  5.05992055066955 0.0902040962136344 0.0920000587982413    7.32823659395963 #> 12              <NA>               <NA>               <NA>                <NA> #> 13  4.35093592685939   6.34374927393782   6.45010530157615     73.732411779833 #> 14  4.43013929124712   3.32762372617139   3.36320437483261    65.3074209423571 #> 15  4.30513649356439   3.55320266659627   3.61102169166227    63.8394761823057 #> 16   4.4568078888315   2.56389525991654   2.60348012621951     62.110153173843 #> 17  4.80220681383129   2.04471689975665   2.07795007575585    54.3785117409009 #> 18  4.78529511419984   1.96408375137065   1.99172124070365    52.7973376269555 #> 19  4.03771534787509   1.12751367196664    1.1612009779443    46.8044883098963 #> 20   4.0490409415902  0.756315583802191  0.771309116542439    37.3525573071962 #> 21  3.45720059862594  0.396126036134214  0.400980153633279    26.1795552074196 #> 22  3.42581084631572  0.199196213533798  0.206477201574305    14.9546899265073 #> 23   4.7818099899165 0.0912046020105901 0.0929631681035429    7.17430985633144 #> 24              <NA>               <NA>               <NA>                <NA> #> 25  4.65699232602525   5.39374013670363   5.47692621774558    71.7549210273376 #> 26  4.61096410148728   3.19384076532747    3.2424662809298    64.2711236893808 #> 27  4.52108114541623   2.49207423369984   2.53886574114389    58.5090345745089 #> 28  4.42932762054186   2.20078326057442   2.24477981082532    57.4114621391421 #> 29  4.37640169171103   1.47167683464077   1.49940100570893    50.9646148094209 #> 30  4.57070959653127   1.16815709352217   1.18713946515344    44.3629997034001 #> 31  4.23018949947333  0.769763120355999  0.787436649044426    36.4698908418219 #> 32  3.64867232339399  0.402424038571259  0.414254937876081    25.8389673996812 #> 33  3.40220633473857  0.176708823592682  0.181122581717336    14.3588965314394 #> 34  5.48221052515494 0.0968537553023161 0.0992338030264689    6.55913383973056 #> 35              <NA>               <NA>               <NA>                <NA> #> 36  4.20150557668654    4.2272641808933   4.30764521278437    64.0259880365678 #> 37  3.88950512865002   2.04336892760254   2.07789850321446    55.5134866848545 #> 38  3.86242749377035   2.10176641113525   2.12400747519788    55.6069342260958 #> 39  4.51229053905899   2.18827202725375   2.21694804225614    51.5076044455933 #> 40  3.87064710531714   1.26635776439732   1.29189385220903    47.2205885376506 #> 41  4.00823294060596  0.995642016750343   1.01647626954573    42.0889007055378 #> 42  3.45270592919488  0.747540884965465  0.776613613890986    37.7387703156695 #> 43  3.02883828472209  0.465191628894349  0.488319946151048      24.86982617211 #> 44  6.49690616533685  0.110072429769904  0.117006665322082    8.80653584482785 #> 45              <NA>               <NA>               <NA>                <NA> #> 46              <NA>               <NA>               <NA>                <NA> #> 47              <NA>               <NA>               <NA>                <NA> #> 48  4.27344216100006   3.66197420312445   3.74515880807916    62.0850231724082 #> 49  3.94866988929263   2.30918617414501   2.38172980160531    56.9139036296292 #> 50  4.06150630361746   2.08125453443288   2.11590994283444    55.7523664894436 #> 51  4.28024203299773   1.86740060760621   1.88247419049355    53.0041184745038 #> 52  4.11176759058804   1.54631833671331      1.58745033262    47.5105402372477 #> 53  4.07885267699952   1.08093171640802   1.11883400494349    39.1886808888206 #> 54  3.49849033124349  0.853489697708008  0.888332086908397    35.3402593870166 #> 55  3.87032268002747  0.391684896268844  0.424406952643889    23.5949106440616 #> 56  7.13805607560018  0.106633169672757  0.109885817819193    7.77017218922875 #> 57               NaN 0.0711821240421013    0.0723296390846    5.19770157548112 #> 58              <NA>               <NA>               <NA>                <NA> #> 59              <NA>               <NA>               <NA>                <NA> #> 60  4.42524864310953   3.63222694441072   3.68429951773267    61.1881273787319 #> 61  4.07079446556982   2.37829504956268   2.39742526546539    54.7044410863192 #> 62  4.12905578602029   1.57749612196917   1.60550945405917    51.3608509795581 #> 63  4.23373871217335   1.68169387393118   1.72003799878881    48.5555694881675 #> 64  3.82110835040208    1.2363523597651   1.26682699035925    43.0765105240458 #> 65  3.07984724682287  0.753878941489008  0.760772632110658    37.1234981446387 #> 66  2.93609902138344  0.455314881583286  0.505476729624074     25.162800967498 #> 67  6.00537487711132   0.10835369550442  0.110575623206875    8.98113075590547 #> 68              <NA>               <NA>               <NA>                <NA> #> 69              <NA>               <NA>               <NA>                <NA> #> 70              <NA>               <NA>               <NA>                <NA> #>    ci95.integral.bt.up #> 1     76.3568455993379 #> 2     68.2117143703183 #> 3     68.1758241394527 #> 4     63.7620760095915 #> 5     60.4889153175422 #> 6     54.0229760996801 #> 7     49.8886940102542 #> 8     40.9998497976739 #> 9     29.6356329453067 #> 10    16.5134642650678 #> 11     7.8569605580561 #> 12                <NA> #> 13    77.9764306287053 #> 14    67.8102307138278 #> 15    68.6470496525535 #> 16    63.8353631078835 #> 17    58.2688402925797 #> 18    54.7379201047246 #> 19    48.8717376159524 #> 20    40.2434040419111 #> 21    28.1725119049063 #> 22    16.6567382919963 #> 23    7.56093114293109 #> 24                <NA> #> 25    74.4569115436158 #> 26    66.7362397401974 #> 27    62.2110988433577 #> 28    60.3939818492521 #> 29    53.9280388952014 #> 30    48.3454722545449 #> 31    39.3146685442373 #> 32    27.6181112571971 #> 33    14.8294529105004 #> 34    6.89663373989058 #> 35                <NA> #> 36     66.601778158323 #> 37    59.8088383223567 #> 38    58.1112524115177 #> 39    54.6733209169102 #> 40    50.0169763451768 #> 41    44.0844631650852 #> 42    38.9521350249164 #> 43    26.6754210668607 #> 44    9.61927896493089 #> 45                <NA> #> 46                <NA> #> 47                <NA> #> 48    64.5330430158641 #> 49    60.5356693845627 #> 50    58.0100949357476 #> 51    54.7713449538802 #> 52    50.1937825432488 #> 53    43.7380206826359 #> 54    39.6435721552553 #> 55    25.7710034057457 #> 56    8.45864750262371 #> 57    5.43328302811955 #> 58                <NA> #> 59                <NA> #> 60    64.3668459631093 #> 61    58.5007701989829 #> 62    53.2914419837726 #> 63    51.3346514736117 #> 64    46.2389790908707 #> 65    38.3042280995712 #> 66    27.6943789414483 #> 67    9.45605776729297 #> 68                <NA> #> 69                <NA> #> 70                <NA> # }"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"Generic summary function gcFitLinear objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"","code":"# S3 method for gcFitLinear summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"object object class gcFitLinear ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"dataframe parameters extracted linear fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitLinear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitLinear objects — summary.gcFitLinear","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitLinear(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'l'))  summary(TestFit) #>           mu.linfit        tD.linfit    lambda.linfit        dY.linfit #> 1 0.646211199106724 1.07263257201067 4.28335098908362 6.02900040668156 #>           A.linfit tmu.start.linfit tmu.end.linfit       r2mu.linfit #> 1 6.08223569969033                6           9.75 0.999473138690171 #>   reliable_fit.linfit mu2.linfit tD2.linfit tmu2.start.linfit tmu2.end.linfit #> 1                TRUE       <NA>       <NA>              <NA>            <NA> #>   r2mu2.linfit reliable_fit2.linfit #> 1         <NA>                FALSE"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitModel objects — summary.gcFitModel","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"Generic summary function gcFitModel objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"","code":"# S3 method for gcFitModel summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"object object class gcFitModel ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"dataframe parameters extracted growth model fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitModel objects — summary.gcFitModel","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform parametric fit TestFit <- growth.gcFitModel(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 'm')) #> --> Try to fit model logistic #> ....... OK #> --> Try to fit model richards #> ....... OK #> --> Try to fit model gompertz #> ....... OK #> --> Try to fit model gompertz.exp #> ... ERROR in nls(). For further information see help(growth.gcFitModel) #> --> Try to fit model huang #> .......... OK #> --> Try to fit model baranyi #> ........ OK #>  #> Best fitting model: ~baranyi  summary(TestFit) #>           mu.model          tD.model     lambda.model          A.model #> 1 0.80799030241413 0.857865717557434 5.16080226285194 4.79229635852465 #>         dY.model     A.orig.model    dY.orig.model   integral.model #> 1 4.789962023683 5.73926098024155 5.72587924816828 75.9987559573637 #>   parameter_nu.model parameter_alpha.model parameter_t_shift.model #> 1               <NA>                  <NA>                    <NA> #>    parameter_y0.model         stdmu.model    stdlambda.model #> 1 0.00230510323313102 0.00263942582607642 0.0155941585265694 #>            stdA.model reliable_fit.model  ci90.mu.model.lo  ci90.mu.model.up #> 1 0.00254229065755851               TRUE 0.803648446930234 0.812332157898026 #>   ci90.lambda.model.lo ci90.lambda.model.up  ci90.A.model.lo  ci90.A.model.up #> 1     5.13514987207574     5.18645465362815 4.78811429039297 4.79647842665634 #>   ci95.mu.model.lo ci95.mu.model.up ci95.lambda.model.lo ci95.lambda.model.up #> 1 0.80281702779502 0.81316357703324     5.13023771213987     5.19136681356402 #>    ci95.A.model.lo  ci95.A.model.up #> 1 4.78731346883584 4.79727924821347"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"Generic summary function gcFitSpline objects","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"","code":"# S3 method for gcFitSpline summary(object, ...)"},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"object object class gcFitSpline ... Additional arguments. currently effect meant fulfill requirements generic function.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"dataframe parameters extracted nonparametric fit.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/summary.gcFitSpline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic summary function for gcFitSpline objects — summary.gcFitSpline","text":"","code":"# Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = 'Test1')  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- rnd.dataset$data[1,-(1:3)] # Remove identifier columns  # Perform linear fit TestFit <- growth.gcFitSpline(time, data, gcID = 'TestFit',                  control = growth.control(fit.opt = 's'))  summary(TestFit) #>           mu.spline        tD.spline tmax.spline    lambda.spline mu2.spline #> 1 0.659990401508834 1.05023827464053           8 4.29747613103522       <NA> #>   tD2.spline tmax2.spline lambda2.spline          y0.spline         A.spline #> 1       <NA>         <NA>           <NA> 0.0566694694843921 6.38138894799323 #>          dY.spline integral.spline reliable_fit.spline reliable_fit2.spline #> 1 6.32471947850884 75.909150731071                TRUE                FALSE #>   smooth.spline #> 1          0.55"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"Generate grouped results table linear fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"","code":"table_group_fluorescence_linear(flTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"flTable object class flTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"data frame grouped linear fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_fluorescence_linear","text":"","code":"# \\donttest{ # load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"l\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  table_group_fluorescence_linear(res$flFit$flTable) #>             Sample|Conc. slope_max lagtime        dY     Y_max x_start(mumax) #> 1       pSEVA634∙GFP | 0                                                      #> 2      pSEVA634r∙GFP | 0                                                      #> 3     pSEVA634rκ∙GFP | 0    75.796  23.666   376.798  2228.283             16 #> 4    pSEVA634∙GFP | 0.01   262.266  17.259  5820.567  7503.259             30 #> 5   pSEVA634r∙GFP | 0.01                                                      #> 6  pSEVA634rκ∙GFP | 0.01   225.688  13.904  3020.995  4880.808             15 #> 7    pSEVA634∙GFP | 0.05   658.849  10.171 15562.241     17045             16 #> 8   pSEVA634r∙GFP | 0.05   307.497  14.566  3856.069   5224.49           14.5 #> 9  pSEVA634rκ∙GFP | 0.05   385.864   7.481  6056.345  7883.268             10 #> 10    pSEVA634∙GFP | 0.1   786.634   1.892 18027.038 19670.602            2.5 #> 11   pSEVA634r∙GFP | 0.1   514.144  11.836  6070.424  6990.424             15 #> 12  pSEVA634rκ∙GFP | 0.1   404.264   6.785  7467.593  9260.697           15.5 #> 13    pSEVA634∙GFP | 0.2   810.584   2.174 18686.014 20250.899            3.5 #> 14   pSEVA634r∙GFP | 0.2    540.02  11.918  6008.673  7054.127             15 #> 15  pSEVA634rκ∙GFP | 0.2   391.915    6.01   7526.82  9138.889             16 #> 16    pSEVA634∙GFP | 0.5   820.283   1.388 18860.637 20504.202              5 #> 17   pSEVA634r∙GFP | 0.5   494.059  11.004  6225.536  7150.065             15 #> 18  pSEVA634rκ∙GFP | 0.5    429.55   7.469  7650.517  9370.143           15.5 #> 19      pSEVA634∙GFP | 1   877.851   2.083 17785.309 19449.102            3.5 #> 20     pSEVA634r∙GFP | 1   559.313  12.303  6148.718  7412.869             16 #> 21    pSEVA634rκ∙GFP | 1   395.584   6.293  7763.536  9317.992             15 #>    x_end(mumax) #> 1               #> 2               #> 3          19.5 #> 4          34.5 #> 5               #> 6            20 #> 7            20 #> 8          19.5 #> 9          14.5 #> 10          6.5 #> 11           19 #> 12           20 #> 13          8.5 #> 14         19.5 #> 15           20 #> 16            9 #> 17         19.5 #> 18           20 #> 19            8 #> 20         19.5 #> 21           20  # with HTML formatting DT::datatable(table_group_fluorescence_linear(res$flFit$flTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\"],[\"pSEVA634∙GFP | 0\",\"pSEVA634r∙GFP | 0\",\"pSEVA634rκ∙GFP | 0\",\"pSEVA634∙GFP | 0.01\",\"pSEVA634r∙GFP | 0.01\",\"pSEVA634rκ∙GFP | 0.01\",\"pSEVA634∙GFP | 0.05\",\"pSEVA634r∙GFP | 0.05\",\"pSEVA634rκ∙GFP | 0.05\",\"pSEVA634∙GFP | 0.1\",\"pSEVA634r∙GFP | 0.1\",\"pSEVA634rκ∙GFP | 0.1\",\"pSEVA634∙GFP | 0.2\",\"pSEVA634r∙GFP | 0.2\",\"pSEVA634rκ∙GFP | 0.2\",\"pSEVA634∙GFP | 0.5\",\"pSEVA634r∙GFP | 0.5\",\"pSEVA634rκ∙GFP | 0.5\",\"pSEVA634∙GFP | 1\",\"pSEVA634r∙GFP | 1\",\"pSEVA634rκ∙GFP | 1\"],[\"\",\"\",\"75.796\",\"262.266\",\"\",\"225.688\",\"658.849\",\"307.497\",\"385.864\",\"786.634\",\"514.144\",\"404.264\",\"810.584\",\"540.02\",\"391.915\",\"820.283\",\"494.059\",\"429.55\",\"877.851\",\"559.313\",\"395.584\"],[\"\",\"\",\"23.666\",\"17.259\",\"\",\"13.904\",\"10.171\",\"14.566\",\"7.481\",\"1.892\",\"11.836\",\"6.785\",\"2.174\",\"11.918\",\"6.01\",\"1.388\",\"11.004\",\"7.469\",\"2.083\",\"12.303\",\"6.293\"],[\"\",\"\",\"376.798\",\"5820.567\",\"\",\"3020.995\",\"15562.241\",\"3856.069\",\"6056.345\",\"18027.038\",\"6070.424\",\"7467.593\",\"18686.014\",\"6008.673\",\"7526.82\",\"18860.637\",\"6225.536\",\"7650.517\",\"17785.309\",\"6148.718\",\"7763.536\"],[\"\",\"\",\"2228.283\",\"7503.259\",\"\",\"4880.808\",\"17045\",\"5224.49\",\"7883.268\",\"19670.602\",\"6990.424\",\"9260.697\",\"20250.899\",\"7054.127\",\"9138.889\",\"20504.202\",\"7150.065\",\"9370.143\",\"19449.102\",\"7412.869\",\"9317.992\"],[\"\",\"\",\"16\",\"30\",\"\",\"15\",\"16\",\"14.5\",\"10\",\"2.5\",\"15\",\"15.5\",\"3.5\",\"15\",\"16\",\"5\",\"15\",\"15.5\",\"3.5\",\"16\",\"15\"],[\"\",\"\",\"19.5\",\"34.5\",\"\",\"20\",\"20\",\"19.5\",\"14.5\",\"6.5\",\"19\",\"20\",\"8.5\",\"19.5\",\"20\",\"9\",\"19.5\",\"20\",\"8\",\"19.5\",\"20\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>slope<sub>max<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>x<sub>start<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n      <th>x<sub>end<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}# }"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"Generate grouped results table spline fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"","code":"table_group_fluorescence_spline(flTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"flTable object class flTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"data frame grouped spline fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_fluorescence_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_fluorescence_spline","text":"","code":"# load example dataset input <- read_data(data.growth = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    data.fl = system.file(\"lac_promoters.xlsx\", package = \"QurvE\"),                    sheet.growth = 1,                    sheet.fl = 2 ) #> Sample data are stored in columns. If they are stored in row format, please run read_data() with data.format = 'row'.  # Run workflow res <- fl.workflow(grodata = input, ec50 = FALSE, fit.opt = \"s\",                    x_type = \"time\", norm_fl = TRUE,                    dr.parameter = \"max_slope.spline\",                    suppress.messages = TRUE,                    parallelize = FALSE)  table_group_fluorescence_spline(res$flFit$flTable) #>           Sample | Conc. slope_max lagtime     Y_max        dY x(slope_max) #> 1       pSEVA634∙GFP | 0    92.267  15.547  3427.126  2135.701         20.5 #> 2      pSEVA634r∙GFP | 0    30.773  31.287  1470.992   282.714           20 #> 3     pSEVA634rκ∙GFP | 0    64.176  20.813  2196.189   630.596           16 #> 4    pSEVA634∙GFP | 0.01   242.558  14.983  7592.801  6072.997         23.5 #> 5   pSEVA634r∙GFP | 0.01    64.653  21.671  2384.304  1128.582           19 #> 6  pSEVA634rκ∙GFP | 0.01    205.58  12.566  4820.287  3196.134           18 #> 7    pSEVA634∙GFP | 0.05   509.395    6.96 17121.214 15989.029         21.5 #> 8   pSEVA634r∙GFP | 0.05   204.032  13.436  5206.543  3800.827         17.5 #> 9  pSEVA634rκ∙GFP | 0.05   290.961   4.674  7768.189  6299.664           13 #> 10    pSEVA634∙GFP | 0.1   670.985   0.373  20079.01 18869.536            6 #> 11   pSEVA634r∙GFP | 0.1   327.195   9.868  6840.378  5652.539           17 #> 12  pSEVA634rκ∙GFP | 0.1   335.244   3.651  9191.863  7723.924         17.5 #> 13    pSEVA634∙GFP | 0.2   728.625   0.554 20481.098 19589.302          6.5 #> 14   pSEVA634r∙GFP | 0.2   346.268   9.758  7000.845  5718.068         16.5 #> 15  pSEVA634rκ∙GFP | 0.2   320.247   3.214  9006.211  7463.562         17.5 #> 16    pSEVA634∙GFP | 0.5   774.054   0.247 20704.091 19571.651          5.5 #> 17   pSEVA634r∙GFP | 0.5   337.909   8.089  6952.687  6090.024         16.5 #> 18  pSEVA634rκ∙GFP | 0.5   351.644   4.845  9322.628  7720.204           18 #> 19      pSEVA634∙GFP | 1   779.134   0.462 19774.702 18757.659            6 #> 20     pSEVA634r∙GFP | 1   353.185   9.572  7189.597  5865.901         16.5 #> 21    pSEVA634rκ∙GFP | 1   338.827   5.016  9258.531  7551.009           18  # with HTML formatting DT::datatable(table_group_fluorescence_spline(res$flFit$flTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\"],[\"pSEVA634∙GFP | 0\",\"pSEVA634r∙GFP | 0\",\"pSEVA634rκ∙GFP | 0\",\"pSEVA634∙GFP | 0.01\",\"pSEVA634r∙GFP | 0.01\",\"pSEVA634rκ∙GFP | 0.01\",\"pSEVA634∙GFP | 0.05\",\"pSEVA634r∙GFP | 0.05\",\"pSEVA634rκ∙GFP | 0.05\",\"pSEVA634∙GFP | 0.1\",\"pSEVA634r∙GFP | 0.1\",\"pSEVA634rκ∙GFP | 0.1\",\"pSEVA634∙GFP | 0.2\",\"pSEVA634r∙GFP | 0.2\",\"pSEVA634rκ∙GFP | 0.2\",\"pSEVA634∙GFP | 0.5\",\"pSEVA634r∙GFP | 0.5\",\"pSEVA634rκ∙GFP | 0.5\",\"pSEVA634∙GFP | 1\",\"pSEVA634r∙GFP | 1\",\"pSEVA634rκ∙GFP | 1\"],[\"92.267\",\"30.773\",\"64.176\",\"242.558\",\"64.653\",\"205.58\",\"509.395\",\"204.032\",\"290.961\",\"670.985\",\"327.195\",\"335.244\",\"728.625\",\"346.268\",\"320.247\",\"774.054\",\"337.909\",\"351.644\",\"779.134\",\"353.185\",\"338.827\"],[\"15.547\",\"31.287\",\"20.813\",\"14.983\",\"21.671\",\"12.566\",\"6.96\",\"13.436\",\"4.674\",\"0.373\",\"9.868\",\"3.651\",\"0.554\",\"9.758\",\"3.214\",\"0.247\",\"8.089\",\"4.845\",\"0.462\",\"9.572\",\"5.016\"],[\"3427.126\",\"1470.992\",\"2196.189\",\"7592.801\",\"2384.304\",\"4820.287\",\"17121.214\",\"5206.543\",\"7768.189\",\"20079.01\",\"6840.378\",\"9191.863\",\"20481.098\",\"7000.845\",\"9006.211\",\"20704.091\",\"6952.687\",\"9322.628\",\"19774.702\",\"7189.597\",\"9258.531\"],[\"2135.701\",\"282.714\",\"630.596\",\"6072.997\",\"1128.582\",\"3196.134\",\"15989.029\",\"3800.827\",\"6299.664\",\"18869.536\",\"5652.539\",\"7723.924\",\"19589.302\",\"5718.068\",\"7463.562\",\"19571.651\",\"6090.024\",\"7720.204\",\"18757.659\",\"5865.901\",\"7551.009\"],[\"20.5\",\"20\",\"16\",\"23.5\",\"19\",\"18\",\"21.5\",\"17.5\",\"13\",\"6\",\"17\",\"17.5\",\"6.5\",\"16.5\",\"17.5\",\"5.5\",\"16.5\",\"18\",\"6\",\"16.5\",\"18\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>slope<sub>max<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>x(slope<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"Generate grouped results table linear fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"","code":"table_group_growth_linear(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"data frame grouped linear fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for linear fits with average and standard deviations — table_group_growth_linear","text":"","code":"# \\donttest{ # Create random growth data set rnd.data <- rdm.data(d = 30, mu = 0.6, A = 4.5, label = \"Test2\")   # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"l\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_linear(res$gcFit$gcTable) #>     Sample|Conc.         mumax            tD       lagtime            dY #> 1      Test2 | 0 0.469 ± 0.005 1.479 ± 0.017 3.963 ± 0.173 3.869 ± 0.082 #> 2  Test2 | 0.039  0.38 ± 0.005 1.823 ± 0.025  3.89 ± 0.022 1.807 ± 0.278 #> 3  Test2 | 0.059  0.35 ± 0.001 1.982 ± 0.008 3.894 ± 0.255 1.544 ± 0.097 #> 4  Test2 | 0.088 0.293 ± 0.004 2.366 ± 0.032 3.808 ± 0.179 1.108 ± 0.057 #> 5   Test2 | 0.13 0.215 ± 0.011 3.223 ± 0.166 3.413 ± 0.343 0.747 ± 0.071 #> 6    Test2 | 0.2 0.117 ± 0.004  5.94 ± 0.211 2.709 ± 0.262  0.37 ± 0.029 #> 7    Test2 | 0.3 0.016 ± 0.027        14.738           1.7 0.027 ± 0.046 #> 8   Test2 | 0.44                                                         #> 9   Test2 | 0.67                                                         #> 10     Test2 | 1                                                         #>            Y_max t_start(mumax)   t_end(mumax) #> 1  3.921 ± 0.085  6.833 ± 0.382 10.167 ± 0.878 #> 2  1.858 ± 0.282  6.583 ± 0.144 10.333 ± 0.382 #> 3    1.596 ± 0.1  6.667 ± 0.629   9.417 ± 0.52 #> 4  1.161 ± 0.059  7.917 ± 0.629  10.083 ± 1.01 #> 5  0.798 ± 0.076  7.167 ± 0.946      9.5 ± 0.5 #> 6  0.422 ± 0.031   9.75 ± 1.639 11.917 ± 1.893 #> 7          0.135            7.5           9.25 #> 8                                              #> 9                                              #> 10                                              # with HTML formatting DT::datatable(table_group_growth_linear(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"Test2 | 0\",\"Test2 | 0.039\",\"Test2 | 0.059\",\"Test2 | 0.088\",\"Test2 | 0.13\",\"Test2 | 0.2\",\"Test2 | 0.3\",\"Test2 | 0.44\",\"Test2 | 0.67\",\"Test2 | 1\"],[\"0.469 ± 0.005\",\"0.38 ± 0.005\",\"0.35 ± 0.001\",\"0.293 ± 0.004\",\"0.215 ± 0.011\",\"0.117 ± 0.004\",\"0.016 ± 0.027\",\"\",\"\",\"\"],[\"1.479 ± 0.017\",\"1.823 ± 0.025\",\"1.982 ± 0.008\",\"2.366 ± 0.032\",\"3.223 ± 0.166\",\"5.94 ± 0.211\",\"14.738\",\"\",\"\",\"\"],[\"3.963 ± 0.173\",\"3.89 ± 0.022\",\"3.894 ± 0.255\",\"3.808 ± 0.179\",\"3.413 ± 0.343\",\"2.709 ± 0.262\",\"1.7\",\"\",\"\",\"\"],[\"3.869 ± 0.082\",\"1.807 ± 0.278\",\"1.544 ± 0.097\",\"1.108 ± 0.057\",\"0.747 ± 0.071\",\"0.37 ± 0.029\",\"0.027 ± 0.046\",\"\",\"\",\"\"],[\"3.921 ± 0.085\",\"1.858 ± 0.282\",\"1.596 ± 0.1\",\"1.161 ± 0.059\",\"0.798 ± 0.076\",\"0.422 ± 0.031\",\"0.135\",\"\",\"\",\"\"],[\"6.833 ± 0.382\",\"6.583 ± 0.144\",\"6.667 ± 0.629\",\"7.917 ± 0.629\",\"7.167 ± 0.946\",\"9.75 ± 1.639\",\"7.5\",\"\",\"\",\"\"],[\"10.167 ± 0.878\",\"10.333 ± 0.382\",\"9.417 ± 0.52\",\"10.083 ± 1.01\",\"9.5 ± 0.5\",\"11.917 ± 1.893\",\"9.25\",\"\",\"\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>t<sub>start<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n      <th>t<sub>end<\\/sub><br>(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}# }"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"Generate grouped results table parametric fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"","code":"table_group_growth_model(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"data frame grouped model fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for parametric fits with average and standard deviations — table_group_growth_model","text":"","code":"# Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")   # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"m\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_model(res$gcFit$gcTable) #>     Sample|Conc.         mumax             tD       lagtime         Y_max #> 1      Test1 | 0 0.797 ± 0.008  0.869 ± 0.008 4.988 ± 0.254 4.801 ± 0.062 #> 2  Test1 | 0.017 0.791 ± 0.001  0.876 ± 0.002  5.38 ± 0.023 4.265 ± 0.091 #> 3  Test1 | 0.026 0.781 ± 0.001  0.887 ± 0.001 5.354 ± 0.187 4.124 ± 0.012 #> 4  Test1 | 0.039 0.763 ± 0.005  0.908 ± 0.006  5.199 ± 0.17  3.933 ± 0.09 #> 5  Test1 | 0.059 0.728 ± 0.001  0.953 ± 0.002 5.405 ± 0.193 3.701 ± 0.013 #> 6  Test1 | 0.088 0.674 ± 0.005  1.028 ± 0.008 5.635 ± 0.199 3.485 ± 0.034 #> 7   Test1 | 0.13  0.59 ± 0.004  1.176 ± 0.008 5.866 ± 0.115  3.17 ± 0.066 #> 8    Test1 | 0.2 0.444 ± 0.009  1.562 ± 0.033 6.083 ± 0.308 2.672 ± 0.045 #> 9    Test1 | 0.3 0.279 ± 0.007  2.485 ± 0.062 6.482 ± 0.209 2.207 ± 0.051 #> 10  Test1 | 0.44 0.115 ± 0.044  6.885 ± 3.349 4.795 ± 3.081 1.717 ± 0.188 #> 11  Test1 | 0.67 0.068 ± 0.034 13.295 ± 9.215 5.981 ± 4.326 0.871 ± 0.088 #> 12     Test1 | 1                                                          #>               dY #> 1  4.805 ± 0.062 #> 2  4.265 ± 0.083 #> 3   4.126 ± 0.01 #> 4  3.937 ± 0.098 #> 5  3.708 ± 0.026 #> 6  3.467 ± 0.023 #> 7   3.172 ± 0.05 #> 8  2.658 ± 0.035 #> 9  2.155 ± 0.059 #> 10 1.308 ± 0.031 #> 11 0.569 ± 0.046 #> 12                # with HTML formatting DT::datatable(table_group_growth_model(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"Test1 | 0\",\"Test1 | 0.017\",\"Test1 | 0.026\",\"Test1 | 0.039\",\"Test1 | 0.059\",\"Test1 | 0.088\",\"Test1 | 0.13\",\"Test1 | 0.2\",\"Test1 | 0.3\",\"Test1 | 0.44\",\"Test1 | 0.67\",\"Test1 | 1\"],[\"0.797 ± 0.008\",\"0.791 ± 0.001\",\"0.781 ± 0.001\",\"0.763 ± 0.005\",\"0.728 ± 0.001\",\"0.674 ± 0.005\",\"0.59 ± 0.004\",\"0.444 ± 0.009\",\"0.279 ± 0.007\",\"0.115 ± 0.044\",\"0.068 ± 0.034\",\"\"],[\"0.869 ± 0.008\",\"0.876 ± 0.002\",\"0.887 ± 0.001\",\"0.908 ± 0.006\",\"0.953 ± 0.002\",\"1.028 ± 0.008\",\"1.176 ± 0.008\",\"1.562 ± 0.033\",\"2.485 ± 0.062\",\"6.885 ± 3.349\",\"13.295 ± 9.215\",\"\"],[\"4.988 ± 0.254\",\"5.38 ± 0.023\",\"5.354 ± 0.187\",\"5.199 ± 0.17\",\"5.405 ± 0.193\",\"5.635 ± 0.199\",\"5.866 ± 0.115\",\"6.083 ± 0.308\",\"6.482 ± 0.209\",\"4.795 ± 3.081\",\"5.981 ± 4.326\",\"\"],[\"4.801 ± 0.062\",\"4.265 ± 0.091\",\"4.124 ± 0.012\",\"3.933 ± 0.09\",\"3.701 ± 0.013\",\"3.485 ± 0.034\",\"3.17 ± 0.066\",\"2.672 ± 0.045\",\"2.207 ± 0.051\",\"1.717 ± 0.188\",\"0.871 ± 0.088\",\"\"],[\"4.805 ± 0.062\",\"4.265 ± 0.083\",\"4.126 ± 0.01\",\"3.937 ± 0.098\",\"3.708 ± 0.026\",\"3.467 ± 0.023\",\"3.172 ± 0.05\",\"2.658 ± 0.035\",\"2.155 ± 0.059\",\"1.308 ± 0.031\",\"0.569 ± 0.046\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>dY<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"Generate grouped results table spline fits average standard deviations","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"","code":"table_group_growth_spline(gcTable, html = FALSE)"},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"gcTable object class gcTable html (Logical) column headers contain html formatting?","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"data frame grouped spline fit results. Empty cells indicate reliable fit determined.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/table_group_growth_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a grouped results table for spline fits with average and standard deviations — table_group_growth_spline","text":"","code":"# Create random growth data set rnd.data <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Run growth curve analysis workflow res <- growth.workflow(time = rnd.data$time,                        data = rnd.data$data,                        fit.opt = \"s\",                        ec50 = FALSE,                        export.res = FALSE,                        parallelize = FALSE,                        suppress.messages = TRUE)  table_group_growth_spline(res$gcFit$gcTable) #>     Sample|Conc.         mumax             tD       lagtime         Y_max #> 1      Test1 | 0 0.666 ± 0.003  1.041 ± 0.004   4.521 ± 0.1 6.823 ± 0.546 #> 2  Test1 | 0.017 0.622 ± 0.002  1.114 ± 0.004 4.638 ± 0.137  3.69 ± 0.173 #> 3  Test1 | 0.026 0.594 ± 0.004  1.167 ± 0.007  4.399 ± 0.17 3.269 ± 0.307 #> 4  Test1 | 0.039 0.573 ± 0.008   1.21 ± 0.017 4.448 ± 0.258 2.596 ± 0.111 #> 5  Test1 | 0.059 0.529 ± 0.005   1.31 ± 0.013 4.394 ± 0.218 2.138 ± 0.076 #> 6  Test1 | 0.088 0.472 ± 0.008  1.467 ± 0.024 4.532 ± 0.151 1.711 ± 0.197 #> 7   Test1 | 0.13  0.39 ± 0.002   1.778 ± 0.01 4.323 ± 0.015 1.235 ± 0.058 #> 8    Test1 | 0.2 0.268 ± 0.006   2.586 ± 0.06 3.957 ± 0.309  0.789 ± 0.06 #> 9    Test1 | 0.3 0.148 ± 0.004  4.693 ± 0.128 3.279 ± 0.494 0.465 ± 0.054 #> 10  Test1 | 0.44 0.074 ± 0.006  9.453 ± 0.737  1.91 ± 0.251 0.206 ± 0.018 #> 11  Test1 | 0.67 0.036 ± 0.001 19.212 ± 0.489 1.624 ± 1.741 0.097 ± 0.002 #> 12     Test1 | 1                                                          #>               dY       t(mumax) #> 1  6.768 ± 0.545              8 #> 2  3.636 ± 0.172              8 #> 3  3.216 ± 0.305    7.75 ± 0.25 #> 4  2.546 ± 0.112  7.833 ± 0.144 #> 5  2.085 ± 0.073  7.833 ± 0.382 #> 6  1.658 ± 0.195  8.167 ± 0.144 #> 7  1.184 ± 0.055  8.417 ± 0.289 #> 8  0.739 ± 0.058      9 ± 0.661 #> 9   0.41 ± 0.051 10.833 ± 0.382 #> 10 0.154 ± 0.015      9 ± 3.382 #> 11 0.044 ± 0.003  6.833 ± 6.095 #> 12                               # with HTML formatting DT::datatable(table_group_growth_spline(res$gcFit$gcTable, html = TRUE),               escape = FALSE) # Do not escape HTML entities  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"Test1 | 0\",\"Test1 | 0.017\",\"Test1 | 0.026\",\"Test1 | 0.039\",\"Test1 | 0.059\",\"Test1 | 0.088\",\"Test1 | 0.13\",\"Test1 | 0.2\",\"Test1 | 0.3\",\"Test1 | 0.44\",\"Test1 | 0.67\",\"Test1 | 1\"],[\"0.666 ± 0.003\",\"0.622 ± 0.002\",\"0.594 ± 0.004\",\"0.573 ± 0.008\",\"0.529 ± 0.005\",\"0.472 ± 0.008\",\"0.39 ± 0.002\",\"0.268 ± 0.006\",\"0.148 ± 0.004\",\"0.074 ± 0.006\",\"0.036 ± 0.001\",\"\"],[\"1.041 ± 0.004\",\"1.114 ± 0.004\",\"1.167 ± 0.007\",\"1.21 ± 0.017\",\"1.31 ± 0.013\",\"1.467 ± 0.024\",\"1.778 ± 0.01\",\"2.586 ± 0.06\",\"4.693 ± 0.128\",\"9.453 ± 0.737\",\"19.212 ± 0.489\",\"\"],[\"4.521 ± 0.1\",\"4.638 ± 0.137\",\"4.399 ± 0.17\",\"4.448 ± 0.258\",\"4.394 ± 0.218\",\"4.532 ± 0.151\",\"4.323 ± 0.015\",\"3.957 ± 0.309\",\"3.279 ± 0.494\",\"1.91 ± 0.251\",\"1.624 ± 1.741\",\"\"],[\"6.823 ± 0.546\",\"3.69 ± 0.173\",\"3.269 ± 0.307\",\"2.596 ± 0.111\",\"2.138 ± 0.076\",\"1.711 ± 0.197\",\"1.235 ± 0.058\",\"0.789 ± 0.06\",\"0.465 ± 0.054\",\"0.206 ± 0.018\",\"0.097 ± 0.002\",\"\"],[\"6.768 ± 0.545\",\"3.636 ± 0.172\",\"3.216 ± 0.305\",\"2.546 ± 0.112\",\"2.085 ± 0.073\",\"1.658 ± 0.195\",\"1.184 ± 0.055\",\"0.739 ± 0.058\",\"0.41 ± 0.051\",\"0.154 ± 0.015\",\"0.044 ± 0.003\",\"\"],[\"8\",\"8\",\"7.75 ± 0.25\",\"7.833 ± 0.144\",\"7.833 ± 0.382\",\"8.167 ± 0.144\",\"8.417 ± 0.289\",\"9 ± 0.661\",\"10.833 ± 0.382\",\"9 ± 3.382\",\"6.833 ± 6.095\",\"\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sample|Conc.<\\/th>\\n      <th>mu<sub>max<\\/sub><\\/th>\\n      <th>t<sub>D<\\/sub><\\/th>\\n      <th>lagtime<\\/th>\\n      <th>dY<\\/th>\\n      <th>y<sub>max<\\/sub><\\/th>\\n      <th>t(mu<sub>max<\\/sub>)<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Theil Sen Regression — theil_sen_regression","title":"Compute Theil Sen Regression — theil_sen_regression","text":"'RobustLinearReg' package","code":""},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Theil Sen Regression — theil_sen_regression","text":"","code":"theil_sen_regression(formula, data = NULL)"},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Theil Sen Regression — theil_sen_regression","text":"formula formula form y ~ x. data optional: dataframe numeric values x y stored","code":""},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Theil Sen Regression — theil_sen_regression","text":"model object class lm.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Theil Sen Regression — theil_sen_regression","text":"Henri Theil Pranab K. Sen, 1950 1968 respectively","code":""},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Theil Sen Regression — theil_sen_regression","text":"Santiago . Hurtado","code":""},{"path":"https://nicwir.github.io/QurvE/reference/theil_sen_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Theil Sen Regression — theil_sen_regression","text":"","code":"if (FALSE) { # Create random growth dataset rnd.dataset <- rdm.data(d = 35, mu = 0.8, A = 5, label = \"Test1\")  # Extract time and growth data for single sample time <- rnd.dataset$time[1,] data <- as.numeric(rnd.dataset$data[1,-(1:3)]) # Remove identifier columns data.log <- log(data/data[1])  # Perform theil-sen regression regression <- theil_sen_regression(data.log ~ time) summary(regression)  df <- data.frame(\"x\" = time, \"y\" = data.log) regression <- theil_sen_regression(y ~ x, df)  summary(regression)  }"},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"xgx_breaks_log10 sets nice breaks log10 scale. better default function ensures least 2 breaks also, try go 3s (.e. 1,3,10,30,100) makes sense","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"","code":"xgx_breaks_log10(data_range)"},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"data_range range data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"numeric vector breaks","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"extended breaks function, weights set 4 weights simplicity - early Q order coverage - labelings extend outside data: range(data) / range(labels) growth (previously granularity) - close number ticks get (default 5) legibility - fontsize formatting prevent label overlap","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"Talbot, Justin, Sharon Lin, Pat Hanrahan. 'extension Wilkinson’s algorithm positioning tick labels axes.' IEEE Transactions visualization computer graphics 16.6 (2010): 1036-1043.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"Andrew Stein","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_breaks_log10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the default breaks for log10 (from R package 'xgxr') — xgx_breaks_log10","text":"","code":"if (FALSE) { xgx_breaks_log10(c(1, 1000)) xgx_breaks_log10(c(0.001, 100)) xgx_breaks_log10(c(1e-4, 1e4)) xgx_breaks_log10(c(1e-9, 1e9)) xgx_breaks_log10(c(1, 2)) xgx_breaks_log10(c(1, 5)) xgx_breaks_log10(c(1, 10)) xgx_breaks_log10(c(1, 100)) xgx_breaks_log10(c(1, 1.01)) xgx_breaks_log10(c(1, 1.0001)) print(xgx_breaks_log10(c(1, 1.000001)), digits = 10) }"},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"xgx_minor_breaks_log10 sets nice minor_breaks log10 scale.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"","code":"xgx_minor_breaks_log10(data_range)"},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"data_range range data","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"numeric vector breaks","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"Andrew Stein","code":""},{"path":"https://nicwir.github.io/QurvE/reference/xgx_minor_breaks_log10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the default minor_breaks for log10 scales (from R package 'xgxr') — xgx_minor_breaks_log10","text":"","code":"if (FALSE) { xgx_minor_breaks_log10(c(1, 1000)) xgx_minor_breaks_log10(c(0.001, 100)) xgx_minor_breaks_log10(c(1e-4, 1e4)) xgx_minor_breaks_log10(c(1e-9, 1e9)) xgx_minor_breaks_log10(c(1, 2)) xgx_minor_breaks_log10(c(1, 5)) xgx_minor_breaks_log10(c(1, 10)) xgx_minor_breaks_log10(c(1, 100)) xgx_minor_breaks_log10(c(1, 1.01)) xgx_minor_breaks_log10(c(1, 1.0001)) print(xgx_minor_breaks_log10(c(1, 1.000001)), digits = 10) }"},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two dataframes like a zip-fastener — zipFastener","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"Combine rows columns two dataframes alternating manner","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"","code":"zipFastener(df1, df2, along = 2)"},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"df1 first dataframe. df2 second dataframe dimensions df1. along 1 alternate rows 2 alternate columns.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"dataframe combined rows (columns) df1 df2.","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"Mark Heckmann","code":""},{"path":"https://nicwir.github.io/QurvE/reference/zipFastener.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine two dataframes like a zip-fastener — zipFastener","text":"","code":"# data frames equal dimensions df1 <- plyr::rdply(3, rep('o',4))[ ,-1] df2 <- plyr::rdply(3, rep('X',4))[ ,-1]  zipFastener(df1, df2) #>   V1 V1.1 V2 V2.1 V3 V3.1 V4 V4.1 #> 1  o    X  o    X  o    X  o    X #> 2  o    X  o    X  o    X  o    X #> 3  o    X  o    X  o    X  o    X zipFastener(df1, df2, 2) #>   V1 V1.1 V2 V2.1 V3 V3.1 V4 V4.1 #> 1  o    X  o    X  o    X  o    X #> 2  o    X  o    X  o    X  o    X #> 3  o    X  o    X  o    X  o    X zipFastener(df1, df2, 1) #>   V1 V2 V3 V4 #> 1  o  o  o  o #> 4  X  X  X  X #> 2  o  o  o  o #> 5  X  X  X  X #> 3  o  o  o  o #> 6  X  X  X  X  # data frames unequal in no. of rows df1 <- plyr::rdply(10, rep('o',4))[ ,-1] zipFastener(df1, df2, 1) #>    V1 V2 V3 V4 #> 1   o  o  o  o #> 11  X  X  X  X #> 2   o  o  o  o #> 12  X  X  X  X #> 3   o  o  o  o #> 13  X  X  X  X #> 4   o  o  o  o #> 5   o  o  o  o #> 6   o  o  o  o #> 7   o  o  o  o #> 8   o  o  o  o #> 9   o  o  o  o #> 10  o  o  o  o zipFastener(df2, df1, 1) #>    V1 V2 V3 V4 #> 1   X  X  X  X #> 4   o  o  o  o #> 2   X  X  X  X #> 5   o  o  o  o #> 3   X  X  X  X #> 6   o  o  o  o #> 7   o  o  o  o #> 8   o  o  o  o #> 9   o  o  o  o #> 10  o  o  o  o #> 11  o  o  o  o #> 12  o  o  o  o #> 13  o  o  o  o  # data frames unequal in no. of columns df2 <- plyr::rdply(10, rep('X',3))[ ,-1] zipFastener(df1, df2) #>    V1 V1.1 V2 V2.1 V3 V3.1 V4 #> 1   o    X  o    X  o    X  o #> 2   o    X  o    X  o    X  o #> 3   o    X  o    X  o    X  o #> 4   o    X  o    X  o    X  o #> 5   o    X  o    X  o    X  o #> 6   o    X  o    X  o    X  o #> 7   o    X  o    X  o    X  o #> 8   o    X  o    X  o    X  o #> 9   o    X  o    X  o    X  o #> 10  o    X  o    X  o    X  o zipFastener(df2, df1, 2) #>    V1 V1.1 V2 V2.1 V3 V3.1 V4 #> 1   X    o  X    o  X    o  o #> 2   X    o  X    o  X    o  o #> 3   X    o  X    o  X    o  o #> 4   X    o  X    o  X    o  o #> 5   X    o  X    o  X    o  o #> 6   X    o  X    o  X    o  o #> 7   X    o  X    o  X    o  o #> 8   X    o  X    o  X    o  o #> 9   X    o  X    o  X    o  o #> 10  X    o  X    o  X    o  o"},{"path":"https://nicwir.github.io/QurvE/news/index.html","id":"qurve-10","dir":"Changelog","previous_headings":"","what":"QurvE 1.0","title":"QurvE 1.0","text":"Added NEWS.md file track changes package.","code":""}]
